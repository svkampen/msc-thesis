{"name":"Std.Sat.CNF.Relabel","instances":[],"imports":["Std.Sat.CNF.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Sat/CNF/Relabel.lean#L98-L118","name":"Std.Sat.CNF.unsat_relabel_iff","line":98,"kind":"theorem","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.unsat_relabel_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.unsat_relabel_iff\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">unsat_relabel_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF\">Std.Sat.CNF</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hw : <span class=\"fn\">∀ {<span class=\"fn\">v1 </span><span class=\"fn\">v2</span> : <span class=\"fn\">α</span>}, <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Mem\">Std.Sat.CNF.Mem</a> <span class=\"fn\">v1</span> <span class=\"fn\">f</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Mem\">Std.Sat.CNF.Mem</a> <span class=\"fn\">v2</span> <span class=\"fn\">f</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">v1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">r</span> <span class=\"fn\">v2</span></span></span> → <span class=\"fn\"><span class=\"fn\">v1</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">v2</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">Std.Sat.CNF.relabel</a> <span class=\"fn\">r</span> <span class=\"fn\">f</span>)</span>.Unsat</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">f</span>.Unsat</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Sat/CNF/Relabel.lean#L86-L96","name":"Std.Sat.CNF.nonempty_or_impossible","line":86,"kind":"theorem","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.nonempty_or_impossible","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.nonempty_or_impossible\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">nonempty_or_impossible</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF\">Std.Sat.CNF</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">α</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\">∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">Nat</a>), <span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.replicate\">List.replicate</a> <span class=\"fn\">n</span> <span class=\"fn\">[]</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Sat/CNF/Relabel.lean#L82-L84","name":"Std.Sat.CNF.unsat_relabel","line":82,"kind":"theorem","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.unsat_relabel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.unsat_relabel\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">unsat_relabel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF\">Std.Sat.CNF</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">f</span>.Unsat</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">Std.Sat.CNF.relabel</a> <span class=\"fn\">r</span> <span class=\"fn\">f</span>)</span>.Unsat</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Sat/CNF/Relabel.lean#L79-L80","name":"Std.Sat.CNF.sat_relabel","line":79,"kind":"theorem","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.sat_relabel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.sat_relabel\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">sat_relabel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β✝ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r1 : <span class=\"fn\"><span class=\"fn\">β✝</span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r2 : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β✝</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF\">Std.Sat.CNF</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Sat\">Std.Sat.CNF.Sat</a> <span class=\"fn\">(<span class=\"fn\">r1</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">r2</span>)</span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Sat\">Std.Sat.CNF.Sat</a> <span class=\"fn\">r1</span> <span class=\"fn\">(<a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">Std.Sat.CNF.relabel</a> <span class=\"fn\">r2</span> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Sat/CNF/Relabel.lean#L70-L77","name":"Std.Sat.CNF.relabel_congr","line":70,"kind":"theorem","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel_congr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel_congr\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">relabel_congr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF\">Std.Sat.CNF</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r1 r2 : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hw : <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Mem\">Std.Sat.CNF.Mem</a> <span class=\"fn\">v</span> <span class=\"fn\">f</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r1</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">r2</span> <span class=\"fn\">v</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">Std.Sat.CNF.relabel</a> <span class=\"fn\">r1</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">Std.Sat.CNF.relabel</a> <span class=\"fn\">r2</span> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Sat/CNF/Relabel.lean#L68-L68","name":"Std.Sat.CNF.relabel_id","line":68,"kind":"theorem","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel_id\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">relabel_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α✝ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF\">Std.Sat.CNF</a> <span class=\"fn\">α✝</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">Std.Sat.CNF.relabel</a> <span class=\"fn\">id</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Sat/CNF/Relabel.lean#L65-L66","name":"Std.Sat.CNF.relabel_relabel","line":65,"kind":"theorem","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel_relabel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel_relabel\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">relabel_relabel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α✝ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α✝¹ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r1 : <span class=\"fn\"><span class=\"fn\">α✝</span> → <span class=\"fn\">α✝¹</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α✝² : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r2 : <span class=\"fn\"><span class=\"fn\">α✝²</span> → <span class=\"fn\">α✝</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF\">Std.Sat.CNF</a> <span class=\"fn\">α✝²</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">Std.Sat.CNF.relabel</a> <span class=\"fn\">r1</span> <span class=\"fn\">(<a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">Std.Sat.CNF.relabel</a> <span class=\"fn\">r2</span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">Std.Sat.CNF.relabel</a> <span class=\"fn\">(<span class=\"fn\">r1</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">r2</span>)</span> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Sat/CNF/Relabel.lean#L62-L63","name":"Std.Sat.CNF.relabel_append","line":62,"kind":"theorem","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel_append","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel_append\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">relabel_append</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α✝ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α✝¹ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">α✝</span> → <span class=\"fn\">α✝¹</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f1 f2 : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF\">Std.Sat.CNF</a> <span class=\"fn\">α✝</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">Std.Sat.CNF.relabel</a> <span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\">f1</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">f2</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">Std.Sat.CNF.relabel</a> <span class=\"fn\">r</span> <span class=\"fn\">f1</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">Std.Sat.CNF.relabel</a> <span class=\"fn\">r</span> <span class=\"fn\">f2</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Sat/CNF/Relabel.lean#L58-L60","name":"Std.Sat.CNF.eval_relabel","line":58,"kind":"theorem","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.eval_relabel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.eval_relabel\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">eval_relabel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">β</span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF\">Std.Sat.CNF</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.eval\">Std.Sat.CNF.eval</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">Std.Sat.CNF.relabel</a> <span class=\"fn\">r</span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.eval\">Std.Sat.CNF.eval</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">r</span>)</span> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Sat/CNF/Relabel.lean#L55-L56","name":"Std.Sat.CNF.relabel_cons","line":55,"kind":"theorem","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel_cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel_cons\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">relabel_cons</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Clause\">Std.Sat.CNF.Clause</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Clause\">Std.Sat.CNF.Clause</a> <span class=\"fn\">α</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">Std.Sat.CNF.relabel</a> <span class=\"fn\">r</span> <span class=\"fn\">(<span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel\">Std.Sat.CNF.Clause.relabel</a> <span class=\"fn\">r</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">Std.Sat.CNF.relabel</a> <span class=\"fn\">r</span> <span class=\"fn\">f</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Sat/CNF/Relabel.lean#L54-L54","name":"Std.Sat.CNF.relabel_nil","line":54,"kind":"theorem","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel_nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel_nil\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">relabel_nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\">Std.Sat.CNF.relabel</a> <span class=\"fn\">r</span> <span class=\"fn\">[]</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">[]</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Sat/CNF/Relabel.lean#L49-L52","name":"Std.Sat.CNF.relabel","line":49,"kind":"def","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel","doc":"Change the literal type in a `CNF` formula from `α` to `β` by using `r`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.relabel\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">relabel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF\">Std.Sat.CNF</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF\">Std.Sat.CNF</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Sat/CNF/Relabel.lean#L36-L39","name":"Std.Sat.CNF.Clause.relabel_relabel'","line":36,"kind":"theorem","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel_relabel'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel_relabel'\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">Clause</span>.<span class=\"name\">relabel_relabel'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α✝ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α✝¹ : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r1 : <span class=\"fn\"><span class=\"fn\">α✝</span> → <span class=\"fn\">α✝¹</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α✝² : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r2 : <span class=\"fn\"><span class=\"fn\">α✝²</span> → <span class=\"fn\">α✝</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel\">Std.Sat.CNF.Clause.relabel</a> <span class=\"fn\">r1</span></span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel\">Std.Sat.CNF.Clause.relabel</a> <span class=\"fn\">r2</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel\">Std.Sat.CNF.Clause.relabel</a> <span class=\"fn\">(<span class=\"fn\">r1</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">r2</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Sat/CNF/Relabel.lean#L27-L33","name":"Std.Sat.CNF.Clause.relabel_congr","line":27,"kind":"theorem","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel_congr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel_congr\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">Clause</span>.<span class=\"name\">relabel_congr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Clause\">Std.Sat.CNF.Clause</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r1 r2 : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hw : <span class=\"fn\">∀ (<span class=\"fn\">v</span> : <span class=\"fn\">α</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Clause.Mem\">Std.Sat.CNF.Clause.Mem</a> <span class=\"fn\">v</span> <span class=\"fn\">c</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r1</span> <span class=\"fn\">v</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">r2</span> <span class=\"fn\">v</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel\">Std.Sat.CNF.Clause.relabel</a> <span class=\"fn\">r1</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel\">Std.Sat.CNF.Clause.relabel</a> <span class=\"fn\">r2</span> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Sat/CNF/Relabel.lean#L25-L25","name":"Std.Sat.CNF.Clause.relabel_id'","line":25,"kind":"theorem","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel_id'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel_id'\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">Clause</span>.<span class=\"name\">relabel_id'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel\">Std.Sat.CNF.Clause.relabel</a> <span class=\"fn\">id</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">id</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Sat/CNF/Relabel.lean#L21-L23","name":"Std.Sat.CNF.Clause.eval_relabel","line":21,"kind":"theorem","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.eval_relabel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.eval_relabel\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">Clause</span>.<span class=\"name\">eval_relabel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><span class=\"fn\">β</span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Clause\">Std.Sat.CNF.Clause</a> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Clause.eval\">Std.Sat.CNF.Clause.eval</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel\">Std.Sat.CNF.Clause.relabel</a> <span class=\"fn\">r</span> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Clause.eval\">Std.Sat.CNF.Clause.eval</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">r</span>)</span> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Sat/CNF/Relabel.lean#L16-L19","name":"Std.Sat.CNF.Clause.relabel","line":16,"kind":"def","docLink":"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel","doc":"Change the literal type in a `Clause` from `α` to `β` by using `r`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Sat/CNF/Relabel.html#Std.Sat.CNF.Clause.relabel\"><span class=\"name\">Std</span>.<span class=\"name\">Sat</span>.<span class=\"name\">CNF</span>.<span class=\"name\">Clause</span>.<span class=\"name\">relabel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Clause\">Std.Sat.CNF.Clause</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF.Clause\">Std.Sat.CNF.Clause</a> <span class=\"fn\">β</span></span></div></div>"}]}