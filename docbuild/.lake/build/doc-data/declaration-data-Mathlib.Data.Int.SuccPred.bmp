{"name":"Mathlib.Data.Int.SuccPred","instances":[{"typeNames":["Int"],"name":"Int.instSuccOrder","className":"SuccOrder"},{"typeNames":["Int"],"name":"Int.instSuccAddOrder","className":"SuccAddOrder"},{"typeNames":["Int"],"name":"Int.instPredOrder","className":"PredOrder"},{"typeNames":["Int"],"name":"Int.instPredSubOrder","className":"PredSubOrder"},{"typeNames":["Int"],"name":"Int.instIsSuccArchimedean","className":"IsSuccArchimedean"},{"typeNames":["Int"],"name":"Int.instIsPredArchimedean","className":"IsPredArchimedean"}],"imports":["Init","Mathlib.Algebra.Order.Ring.Int","Mathlib.Data.Nat.SuccPred"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Data/Int/SuccPred.lean#L88-L88","name":"CovBy.cast_int","line":88,"kind":"theorem","docLink":"./Mathlib/Data/Int/SuccPred.html#CovBy.cast_int","doc":"**Alias** of the reverse direction of `Int.natCast_covBy`.\n\n---\n\n**Alias** of the reverse direction of `Int.natCast_covBy`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/SuccPred.html#CovBy.cast_int\"><span class=\"name\">CovBy</span>.<span class=\"name\">cast_int</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">⋖</a> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">⋖</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Data/Int/SuccPred.lean#L87-L87","name":"Nat.cast_int_covBy_iff","line":87,"kind":"theorem","docLink":"./Mathlib/Data/Int/SuccPred.html#Nat.cast_int_covBy_iff","doc":"**Alias** of `Int.natCast_covBy`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/SuccPred.html#Nat.cast_int_covBy_iff\"><span class=\"name\">Nat</span>.<span class=\"name\">cast_int_covBy_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">⋖</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">⋖</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Data/Int/SuccPred.lean#L85-L85","name":"CovBy.intCast","line":85,"kind":"theorem","docLink":"./Mathlib/Data/Int/SuccPred.html#CovBy.intCast","doc":"**Alias** of the reverse direction of `Int.natCast_covBy`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/SuccPred.html#CovBy.intCast\"><span class=\"name\">CovBy</span>.<span class=\"name\">intCast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">⋖</a> <span class=\"fn\">b</span></span> → <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">⋖</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Data/Int/SuccPred.lean#L78-L81","name":"Int.natCast_covBy","line":78,"kind":"theorem","docLink":"./Mathlib/Data/Int/SuccPred.html#Int.natCast_covBy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/SuccPred.html#Int.natCast_covBy\"><span class=\"name\">Int</span>.<span class=\"name\">natCast_covBy</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">⋖</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">⋖</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Data/Int/SuccPred.lean#L74-L76","name":"Int.covBy_add_one","line":74,"kind":"theorem","docLink":"./Mathlib/Data/Int/SuccPred.html#Int.covBy_add_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/SuccPred.html#Int.covBy_add_one\"><span class=\"name\">Int</span>.<span class=\"name\">covBy_add_one</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">⋖</a> <span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Data/Int/SuccPred.lean#L70-L72","name":"Int.sub_one_covBy","line":70,"kind":"theorem","docLink":"./Mathlib/Data/Int/SuccPred.html#Int.sub_one_covBy","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/SuccPred.html#Int.sub_one_covBy\"><span class=\"name\">Int</span>.<span class=\"name\">sub_one_covBy</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(z : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">z</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span></span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">⋖</a> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Data/Int/SuccPred.lean#L66-L68","name":"Int.covBy_iff_succ_eq","line":66,"kind":"theorem","docLink":"./Mathlib/Data/Int/SuccPred.html#Int.covBy_iff_succ_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/SuccPred.html#Int.covBy_iff_succ_eq\"><span class=\"name\">Int</span>.<span class=\"name\">covBy_iff_succ_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Mathlib/Order/Cover.html#CovBy\">⋖</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Data/Int/SuccPred.lean#L59-L61","name":"Int.instIsPredArchimedean","line":59,"kind":"instance","docLink":"./Mathlib/Data/Int/SuccPred.html#Int.instIsPredArchimedean","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/SuccPred.html#Int.instIsPredArchimedean\"><span class=\"name\">Int</span>.<span class=\"name\">instIsPredArchimedean</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Archimedean.html#IsPredArchimedean\">IsPredArchimedean</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Data/Int/SuccPred.lean#L55-L57","name":"Int.instIsSuccArchimedean","line":55,"kind":"instance","docLink":"./Mathlib/Data/Int/SuccPred.html#Int.instIsSuccArchimedean","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/SuccPred.html#Int.instIsSuccArchimedean\"><span class=\"name\">Int</span>.<span class=\"name\">instIsSuccArchimedean</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Archimedean.html#IsSuccArchimedean\">IsSuccArchimedean</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Data/Int/SuccPred.lean#L51-L53","name":"Int.pred_iterate","line":51,"kind":"theorem","docLink":"./Mathlib/Data/Int/SuccPred.html#Int.pred_iterate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/SuccPred.html#Int.pred_iterate\"><span class=\"name\">Int</span>.<span class=\"name\">pred_iterate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Int/Defs.html#Int.pred\">Int.pred</a><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Data/Int/SuccPred.lean#L47-L49","name":"Int.succ_iterate","line":47,"kind":"theorem","docLink":"./Mathlib/Data/Int/SuccPred.html#Int.succ_iterate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/SuccPred.html#Int.succ_iterate\"><span class=\"name\">Int</span>.<span class=\"name\">succ_iterate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Int/Defs.html#Int.succ\">Int.succ</a><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">^[</a><span class=\"fn\">n</span><a href=\"./Mathlib/Logic/Function/Iterate.html#Nat.iterate\">]</a></span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Data/Int/SuccPred.lean#L43-L45","name":"Int.pos_iff_one_le","line":43,"kind":"theorem","docLink":"./Mathlib/Data/Int/SuccPred.html#Int.pos_iff_one_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/SuccPred.html#Int.pos_iff_one_le\"><span class=\"name\">Int</span>.<span class=\"name\">pos_iff_one_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Data/Int/SuccPred.lean#L39-L41","name":"Int.pred_eq_pred","line":39,"kind":"theorem","docLink":"./Mathlib/Data/Int/SuccPred.html#Int.pred_eq_pred","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/SuccPred.html#Int.pred_eq_pred\"><span class=\"name\">Int</span>.<span class=\"name\">pred_eq_pred</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Order.pred</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Int/Defs.html#Int.pred\">Int.pred</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Data/Int/SuccPred.lean#L35-L37","name":"Int.succ_eq_succ","line":35,"kind":"theorem","docLink":"./Mathlib/Data/Int/SuccPred.html#Int.succ_eq_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/SuccPred.html#Int.succ_eq_succ\"><span class=\"name\">Int</span>.<span class=\"name\">succ_eq_succ</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Order.succ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Data/Int/Defs.html#Int.succ\">Int.succ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Data/Int/SuccPred.lean#L33-L33","name":"Int.instPredSubOrder","line":33,"kind":"instance","docLink":"./Mathlib/Data/Int/SuccPred.html#Int.instPredSubOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/SuccPred.html#Int.instPredSubOrder\"><span class=\"name\">Int</span>.<span class=\"name\">instPredSubOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/SuccPred.html#PredSubOrder\">PredSubOrder</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Data/Int/SuccPred.lean#L27-L31","name":"Int.instPredOrder","line":27,"kind":"instance","docLink":"./Mathlib/Data/Int/SuccPred.html#Int.instPredOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/SuccPred.html#Int.instPredOrder\"><span class=\"name\">Int</span>.<span class=\"name\">instPredOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#PredOrder\">PredOrder</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Data/Int/SuccPred.lean#L24-L24","name":"Int.instSuccAddOrder","line":24,"kind":"instance","docLink":"./Mathlib/Data/Int/SuccPred.html#Int.instSuccAddOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/SuccPred.html#Int.instSuccAddOrder\"><span class=\"name\">Int</span>.<span class=\"name\">instSuccAddOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Order/SuccPred.html#SuccAddOrder\">SuccAddOrder</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Data/Int/SuccPred.lean#L21-L22","name":"Int.instSuccOrder","line":21,"kind":"instance","docLink":"./Mathlib/Data/Int/SuccPred.html#Int.instSuccOrder","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Int/SuccPred.html#Int.instSuccOrder\"><span class=\"name\">Int</span>.<span class=\"name\">instSuccOrder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#SuccOrder\">SuccOrder</a> <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"}]}