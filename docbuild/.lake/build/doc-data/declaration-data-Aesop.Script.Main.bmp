{"name":"Aesop.Script.Main","instances":[],"imports":["Init","Aesop.Script.Check","Aesop.Script.StructureDynamic","Aesop.Script.StructureStatic","Aesop.Script.OptimizeSyntax","Aesop.Stats.Basic","Aesop.Options.Internal"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Script/Main.lean#L55-L73","name":"Aesop.checkAndTraceScript","line":55,"kind":"def","docLink":"./Aesop/Script/Main.html#Aesop.checkAndTraceScript","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Main.html#Aesop.checkAndTraceScript\"><span class=\"name\">Aesop</span>.<span class=\"name\">checkAndTraceScript</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Log.html#Lean.MonadLog\">Lean.MonadLog</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.MonadRef\">Lean.MonadRef</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Exception.html#Lean.MonadError\">Lean.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/Message.html#Lean.AddMessageContext\">Lean.AddMessageContext</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Aesop/Stats/Basic.html#Aesop.MonadStats\">Aesop.MonadStats</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(uscript : <a href=\"./Aesop/Script/UScript.html#Aesop.Script.UScript\">Aesop.Script.UScript</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sscript? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lean.Parser.Tactic.tacticSeq</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Stats/Basic.html#Aesop.ScriptGenerated\">Aesop.ScriptGenerated</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(preState : <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(options : <a href=\"./Aesop/Options/Internal.html#Aesop.Options'\">Aesop.Options'</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expectCompleteProof : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tacticName : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Script/Main.lean#L42-L47","name":"Aesop.Script.UScript.optimize.structureDynamic","line":42,"kind":"def","docLink":"./Aesop/Script/Main.html#Aesop.Script.UScript.optimize.structureDynamic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Main.html#Aesop.Script.UScript.optimize.structureDynamic\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">UScript</span>.<span class=\"name\">optimize</span>.<span class=\"name\">structureDynamic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(uscript : <a href=\"./Aesop/Script/UScript.html#Aesop.Script.UScript\">Aesop.Script.UScript</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(proofHasMVar : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(preState : <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Aesop/Script/SScript.html#Aesop.Script.SScript\">Aesop.Script.SScript</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Stats/Basic.html#Aesop.ScriptGenerated\">Aesop.ScriptGenerated</a>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Script/Main.lean#L35-L40","name":"Aesop.Script.UScript.optimize.structureStatic","line":35,"kind":"def","docLink":"./Aesop/Script/Main.html#Aesop.Script.UScript.optimize.structureStatic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Main.html#Aesop.Script.UScript.optimize.structureStatic\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">UScript</span>.<span class=\"name\">optimize</span>.<span class=\"name\">structureStatic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(uscript : <a href=\"./Aesop/Script/UScript.html#Aesop.Script.UScript\">Aesop.Script.UScript</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(proofHasMVar : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(preState : <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Aesop/Script/SScript.html#Aesop.Script.SScript\">Aesop.Script.SScript</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Stats/Basic.html#Aesop.ScriptGenerated\">Aesop.ScriptGenerated</a>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Script/Main.lean#L19-L47","name":"Aesop.Script.UScript.optimize","line":19,"kind":"def","docLink":"./Aesop/Script/Main.html#Aesop.Script.UScript.optimize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/Main.html#Aesop.Script.UScript.optimize\"><span class=\"name\">Aesop</span>.<span class=\"name\">Script</span>.<span class=\"name\">UScript</span>.<span class=\"name\">optimize</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(uscript : <a href=\"./Aesop/Script/UScript.html#Aesop.Script.UScript\">Aesop.Script.UScript</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(proofHasMVar : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(preState : <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lean.Parser.Tactic.tacticSeq</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Stats/Basic.html#Aesop.ScriptGenerated\">Aesop.ScriptGenerated</a>)</span>)</span></span></div></div>"}]}