{"name":"Mathlib.Analysis.Normed.Field.Lemmas","instances":[{"typeNames":[],"name":"Pi.nonUnitalSeminormedRing","className":"NonUnitalSeminormedRing"},{"typeNames":[],"name":"Pi.seminormedRing","className":"SeminormedRing"},{"typeNames":[],"name":"Pi.nonUnitalNormedRing","className":"NonUnitalNormedRing"},{"typeNames":[],"name":"Pi.normedRing","className":"NormedRing"},{"typeNames":[],"name":"Pi.nonUnitalSeminormedCommRing","className":"NonUnitalSeminormedCommRing"},{"typeNames":[],"name":"Pi.nonUnitalNormedCommRing","className":"NonUnitalNormedCommRing"},{"typeNames":[],"name":"Pi.seminormedCommRing","className":"SeminormedCommRing"},{"typeNames":[],"name":"Pi.normedCommutativeRing","className":"NormedCommRing"},{"typeNames":[],"name":"NonUnitalSeminormedRing.toContinuousMul","className":"ContinuousMul"},{"typeNames":[],"name":"NonUnitalSeminormedRing.toTopologicalRing","className":"TopologicalRing"},{"typeNames":["SeparationQuotient"],"name":"SeparationQuotient.instNonUnitalNormedRing","className":"NonUnitalNormedRing"},{"typeNames":["SeparationQuotient"],"name":"SeparationQuotient.instNonUnitalNormedCommRing","className":"NonUnitalNormedCommRing"},{"typeNames":["SeparationQuotient"],"name":"SeparationQuotient.instNormedRing","className":"NormedRing"},{"typeNames":["SeparationQuotient"],"name":"SeparationQuotient.instNormedCommRing","className":"NormedCommRing"},{"typeNames":["SeparationQuotient"],"name":"SeparationQuotient.instNormOneClass","className":"NormOneClass"},{"typeNames":[],"name":"NormedDivisionRing.to_hasContinuousInv‚ÇÄ","className":"HasContinuousInv‚ÇÄ"},{"typeNames":[],"name":"NormedDivisionRing.to_topologicalDivisionRing","className":"TopologicalDivisionRing"},{"typeNames":["Int"],"name":"Int.instNormedCommRing","className":"NormedCommRing"},{"typeNames":["Int"],"name":"Int.instNormOneClass","className":"NormOneClass"},{"typeNames":["Rat"],"name":"Rat.instNormedField","className":"NormedField"},{"typeNames":["Rat"],"name":"Rat.instDenselyNormedField","className":"DenselyNormedField"}],"imports":["Init","Mathlib.Algebra.Group.AddChar","Mathlib.Algebra.Group.TypeTags.Finite","Mathlib.Algebra.Order.GroupWithZero.Finset","Mathlib.Analysis.Normed.Field.Basic","Mathlib.Analysis.Normed.Group.Bounded","Mathlib.Analysis.Normed.Group.Rat","Mathlib.Analysis.Normed.Group.Uniform","Mathlib.Topology.Instances.NNReal","Mathlib.Topology.MetricSpace.DilationEquiv"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L426-L448","name":"NormedField.completeSpace_iff_isComplete_closedBall","line":426,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#NormedField.completeSpace_iff_isComplete_closedBall","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#NormedField.completeSpace_iff_isComplete_closedBall\"><span class=\"name\">NormedField</span>.<span class=\"name\">completeSpace_iff_isComplete_closedBall</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">K</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">K</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#IsComplete\">IsComplete</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/MetricSpace/Pseudo/Defs.html#Metric.closedBall\">Metric.closedBall</a> <span class=\"fn\">0</span> <span class=\"fn\">1</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L419-L422","name":"Rat.instDenselyNormedField","line":419,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#Rat.instDenselyNormedField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#Rat.instDenselyNormedField\"><span class=\"name\">Rat</span>.<span class=\"name\">instDenselyNormedField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#DenselyNormedField\">DenselyNormedField</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">‚Ñö</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L414-L417","name":"Rat.instNormedField","line":414,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#Rat.instNormedField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#Rat.instNormedField\"><span class=\"name\">Rat</span>.<span class=\"name\">instNormedField</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <a href=\"./Batteries/Data/Rat/Basic.html#Rat\">‚Ñö</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L411-L412","name":"Int.instNormOneClass","line":411,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#Int.instNormOneClass","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#Int.instNormOneClass\"><span class=\"name\">Int</span>.<span class=\"name\">instNormOneClass</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormOneClass\">NormOneClass</a> <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L406-L409","name":"Int.instNormedCommRing","line":406,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#Int.instNormedCommRing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#Int.instNormedCommRing\"><span class=\"name\">Int</span>.<span class=\"name\">instNormedCommRing</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedCommRing\">NormedCommRing</a> <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L396-L402","name":"NNReal.lipschitzWith_sub","line":396,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#NNReal.lipschitzWith_sub","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#NNReal.lipschitzWith_sub\"><span class=\"name\">NNReal</span>.<span class=\"name\">lipschitzWith_sub</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/EMetricSpace/Lipschitz.html#LipschitzWith\">LipschitzWith</a> <span class=\"fn\">2</span> <span class=\"fn\">fun (<span class=\"fn\">p</span> : <span class=\"fn\"><a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a> <a href=\"./Init/Prelude.html#Prod\">√ó</a> <a href=\"./Mathlib/Data/NNReal/Defs.html#NNReal\">NNReal</a></span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.1</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">p</span>.2</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L387-L389","name":"NormedField.continuousAt_inv","line":387,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#NormedField.continuousAt_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#NormedField.continuousAt_inv\"><span class=\"name\">NormedField</span>.<span class=\"name\">continuousAt_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïú : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">ùïú</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">ùïú</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousAt\">ContinuousAt</a> <span class=\"fn\">Inv.inv</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L379-L385","name":"NormedField.continuousAt_zpow","line":379,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#NormedField.continuousAt_zpow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#NormedField.continuousAt_zpow\"><span class=\"name\">NormedField</span>.<span class=\"name\">continuousAt_zpow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïú : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">ùïú</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">ùïú</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#ContinuousAt\">ContinuousAt</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">ùïú</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">‚Üî</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Or\">‚à®</a> <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L369-L372","name":"NormedField.denseRange_nnnorm","line":369,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#NormedField.denseRange_nnnorm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#NormedField.denseRange_nnnorm\"><span class=\"name\">NormedField</span>.<span class=\"name\">denseRange_nnnorm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Œ± : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#DenselyNormedField\">DenselyNormedField</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Basic.html#DenseRange\">DenseRange</a> <span class=\"fn\">nnnorm</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L356-L363","name":"NormedField.discreteTopology_of_bddAbove_range_norm","line":356,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#NormedField.discreteTopology_of_bddAbove_range_norm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#NormedField.discreteTopology_of_bddAbove_range_norm\"><span class=\"name\">NormedField</span>.<span class=\"name\">discreteTopology_of_bddAbove_range_norm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ùïú : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">ùïú</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Defs.html#BddAbove\">BddAbove</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">fun (<span class=\"fn\">k</span> : <span class=\"fn\">ùïú</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a><span class=\"fn\">k</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a></span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Order.html#DiscreteTopology\">DiscreteTopology</a> <span class=\"fn\">ùïú</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L339-L354","name":"NormedField.discreteTopology_or_nontriviallyNormedField","line":339,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#NormedField.discreteTopology_or_nontriviallyNormedField","doc":"A normed field is either nontrivially normed or has a discrete topology.\nIn the discrete topology case, all the norms are 1, by `norm_eq_one_iff_ne_zero_of_discrete`.\nThe nontrivially normed field instance is provided by a subtype with a proof that the\nforgetful inheritance to the existing `NormedField` instance is definitionally true.\nThis allows one to have the new `NontriviallyNormedField` instance without data clashes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#NormedField.discreteTopology_or_nontriviallyNormedField\"><span class=\"name\">NormedField</span>.<span class=\"name\">discreteTopology_or_nontriviallyNormedField</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ùïú : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">ùïú</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Order.html#DiscreteTopology\">DiscreteTopology</a> <span class=\"fn\">ùïú</span></span> <a href=\"./Init/Prelude.html#Or\">‚à®</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">{ <span class=\"fn\">h'</span> : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">ùïú</span></span> // <span class=\"fn\"><span class=\"fn\">NontriviallyNormedField.toNormedField</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">h</span></span> }</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L326-L333","name":"NormedField.tendsto_norm_zpow_nhdsWithin_0_atTop","line":326,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#NormedField.tendsto_norm_zpow_nhdsWithin_0_atTop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#NormedField.tendsto_norm_zpow_nhdsWithin_0_atTop\"><span class=\"name\">NormedField</span>.<span class=\"name\">tendsto_norm_zpow_nhdsWithin_0_atTop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedDivisionRing\">NormedDivisionRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Data/Int/Basic.html#Int\">‚Ñ§</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">m</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">0</span> <span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">0</span>}</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">·∂ú</a></span>)</span> <span class=\"fn\">Filter.atTop</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L322-L324","name":"NormedField.tendsto_norm_inverse_nhdsWithin_0_atTop","line":322,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#NormedField.tendsto_norm_inverse_nhdsWithin_0_atTop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#NormedField.tendsto_norm_inverse_nhdsWithin_0_atTop\"><span class=\"name\">NormedField</span>.<span class=\"name\">tendsto_norm_inverse_nhdsWithin_0_atTop</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedDivisionRing\">NormedDivisionRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a><span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Operations.html#Inv.inv\">‚Åª¬π</a></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">0</span> <span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">0</span>}</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">·∂ú</a></span>)</span> <span class=\"fn\">Filter.atTop</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L319-L320","name":"AddChar.norm_apply","line":319,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#AddChar.norm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#AddChar.norm_apply\"><span class=\"name\">AddChar</span>.<span class=\"name\">norm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedDivisionRing\">NormedDivisionRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddLeftCancelMonoid\">AddLeftCancelMonoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(œà : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/AddChar.html#AddChar\">AddChar</a> <span class=\"fn\">G</span> <span class=\"fn\">Œ±</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a><span class=\"fn\"><span class=\"fn\">œà</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L313-L314","name":"IsOfFinOrder.norm_eq_one","line":313,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#IsOfFinOrder.norm_eq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#IsOfFinOrder.norm_eq_one\"><span class=\"name\">IsOfFinOrder</span>.<span class=\"name\">norm_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedDivisionRing\">NormedDivisionRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/OrderOfElement.html#IsOfFinOrder\">IsOfFinOrder</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a><span class=\"fn\">a</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L309-L311","name":"NormedDivisionRing.to_topologicalDivisionRing","line":309,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#NormedDivisionRing.to_topologicalDivisionRing","doc":"A normed division ring is a topological division ring. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#NormedDivisionRing.to_topologicalDivisionRing\"><span class=\"name\">NormedDivisionRing</span>.<span class=\"name\">to_topologicalDivisionRing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedDivisionRing\">NormedDivisionRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Field.html#TopologicalDivisionRing\">TopologicalDivisionRing</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L291-L306","name":"NormedDivisionRing.to_hasContinuousInv‚ÇÄ","line":291,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#NormedDivisionRing.to_hasContinuousInv‚ÇÄ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#NormedDivisionRing.to_hasContinuousInv‚ÇÄ\"><span class=\"name\">NormedDivisionRing</span>.<span class=\"name\">to_hasContinuousInv‚ÇÄ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedDivisionRing\">NormedDivisionRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/GroupWithZero.html#HasContinuousInv‚ÇÄ\">HasContinuousInv‚ÇÄ</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L285-L286","name":"Filter.tendsto_inv‚ÇÄ_nhdsWithin_ne_zero","line":285,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#Filter.tendsto_inv‚ÇÄ_nhdsWithin_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#Filter.tendsto_inv‚ÇÄ_nhdsWithin_ne_zero\"><span class=\"name\">Filter</span>.<span class=\"name\">tendsto_inv‚ÇÄ_nhdsWithin_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedDivisionRing\">NormedDivisionRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">Inv.inv</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">0</span> <span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">0</span>}</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">·∂ú</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Bornology/Basic.html#Bornology.cobounded\">Bornology.cobounded</a> <span class=\"fn\">Œ±</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L282-L283","name":"Filter.tendsto_inv‚ÇÄ_cobounded","line":282,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#Filter.tendsto_inv‚ÇÄ_cobounded","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#Filter.tendsto_inv‚ÇÄ_cobounded\"><span class=\"name\">Filter</span>.<span class=\"name\">tendsto_inv‚ÇÄ_cobounded</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedDivisionRing\">NormedDivisionRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">Inv.inv</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Bornology/Basic.html#Bornology.cobounded\">Bornology.cobounded</a> <span class=\"fn\">Œ±</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L279-L280","name":"Filter.tendsto_inv‚ÇÄ_cobounded'","line":279,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#Filter.tendsto_inv‚ÇÄ_cobounded'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#Filter.tendsto_inv‚ÇÄ_cobounded'\"><span class=\"name\">Filter</span>.<span class=\"name\">tendsto_inv‚ÇÄ_cobounded'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedDivisionRing\">NormedDivisionRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">Inv.inv</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Bornology/Basic.html#Bornology.cobounded\">Bornology.cobounded</a> <span class=\"fn\">Œ±</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">0</span> <span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">0</span>}</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">·∂ú</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L275-L277","name":"Filter.inv_nhdsWithin_ne_zero","line":275,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#Filter.inv_nhdsWithin_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#Filter.inv_nhdsWithin_ne_zero\"><span class=\"name\">Filter</span>.<span class=\"name\">inv_nhdsWithin_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedDivisionRing\">NormedDivisionRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">0</span> <span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">0</span>}</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">·∂ú</a></span>)</span><a href=\"./Mathlib/Algebra/Group/Operations.html#Inv.inv\">‚Åª¬π</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Bornology/Basic.html#Bornology.cobounded\">Bornology.cobounded</a> <span class=\"fn\">Œ±</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L269-L273","name":"Filter.inv_cobounded‚ÇÄ","line":269,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#Filter.inv_cobounded‚ÇÄ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#Filter.inv_cobounded‚ÇÄ\"><span class=\"name\">Filter</span>.<span class=\"name\">inv_cobounded‚ÇÄ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedDivisionRing\">NormedDivisionRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Topology/Bornology/Basic.html#Bornology.cobounded\">Bornology.cobounded</a> <span class=\"fn\">Œ±</span>)</span><a href=\"./Mathlib/Algebra/Group/Operations.html#Inv.inv\">‚Åª¬π</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">0</span> <span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">0</span>}</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">·∂ú</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L263-L267","name":"Filter.tendsto_mul_right_cobounded","line":263,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#Filter.tendsto_mul_right_cobounded","doc":"Multiplication on the right by a nonzero element of a normed division ring tends to infinity at\ninfinity. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#Filter.tendsto_mul_right_cobounded\"><span class=\"name\">Filter</span>.<span class=\"name\">tendsto_mul_right_cobounded</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedDivisionRing\">NormedDivisionRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Bornology/Basic.html#Bornology.cobounded\">Bornology.cobounded</a> <span class=\"fn\">Œ±</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Bornology/Basic.html#Bornology.cobounded\">Bornology.cobounded</a> <span class=\"fn\">Œ±</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L257-L261","name":"Filter.tendsto_mul_left_cobounded","line":257,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#Filter.tendsto_mul_left_cobounded","doc":"Multiplication on the left by a nonzero element of a normed division ring tends to infinity at\ninfinity. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#Filter.tendsto_mul_left_cobounded\"><span class=\"name\">Filter</span>.<span class=\"name\">tendsto_mul_left_cobounded</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedDivisionRing\">NormedDivisionRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) =&gt; <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Bornology/Basic.html#Bornology.cobounded\">Bornology.cobounded</a> <span class=\"fn\">Œ±</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Bornology/Basic.html#Bornology.cobounded\">Bornology.cobounded</a> <span class=\"fn\">Œ±</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L252-L255","name":"Filter.map_mul_right_cobounded","line":252,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#Filter.map_mul_right_cobounded","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#Filter.map_mul_right_cobounded\"><span class=\"name\">Filter</span>.<span class=\"name\">map_mul_right_cobounded</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedDivisionRing\">NormedDivisionRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.map\">Filter.map</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Bornology/Basic.html#Bornology.cobounded\">Bornology.cobounded</a> <span class=\"fn\">Œ±</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Bornology/Basic.html#Bornology.cobounded\">Bornology.cobounded</a> <span class=\"fn\">Œ±</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L247-L250","name":"Filter.comap_mul_right_cobounded","line":247,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#Filter.comap_mul_right_cobounded","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#Filter.comap_mul_right_cobounded\"><span class=\"name\">Filter</span>.<span class=\"name\">comap_mul_right_cobounded</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedDivisionRing\">NormedDivisionRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.comap\">Filter.comap</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Bornology/Basic.html#Bornology.cobounded\">Bornology.cobounded</a> <span class=\"fn\">Œ±</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Bornology/Basic.html#Bornology.cobounded\">Bornology.cobounded</a> <span class=\"fn\">Œ±</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L242-L245","name":"Filter.map_mul_left_cobounded","line":242,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#Filter.map_mul_left_cobounded","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#Filter.map_mul_left_cobounded\"><span class=\"name\">Filter</span>.<span class=\"name\">map_mul_left_cobounded</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedDivisionRing\">NormedDivisionRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.map\">Filter.map</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) =&gt; <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Bornology/Basic.html#Bornology.cobounded\">Bornology.cobounded</a> <span class=\"fn\">Œ±</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Bornology/Basic.html#Bornology.cobounded\">Bornology.cobounded</a> <span class=\"fn\">Œ±</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L237-L240","name":"Filter.comap_mul_left_cobounded","line":237,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#Filter.comap_mul_left_cobounded","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#Filter.comap_mul_left_cobounded\"><span class=\"name\">Filter</span>.<span class=\"name\">comap_mul_left_cobounded</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedDivisionRing\">NormedDivisionRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.comap\">Filter.comap</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) =&gt; <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Bornology/Basic.html#Bornology.cobounded\">Bornology.cobounded</a> <span class=\"fn\">Œ±</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Topology/Bornology/Basic.html#Bornology.cobounded\">Bornology.cobounded</a> <span class=\"fn\">Œ±</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L229-L229","name":"DilationEquiv.mulRight_symm_apply","line":229,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#DilationEquiv.mulRight_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#DilationEquiv.mulRight_symm_apply\"><span class=\"name\">DilationEquiv</span>.<span class=\"name\">mulRight_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedDivisionRing\">NormedDivisionRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#DilationEquiv.mulRight\">DilationEquiv.mulRight</a> <span class=\"fn\">a</span> <span class=\"fn\">ha</span>)</span>.symm</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">a</span><a href=\"./Mathlib/Algebra/Group/Operations.html#Inv.inv\">‚Åª¬π</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L229-L229","name":"DilationEquiv.mulRight_apply","line":229,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#DilationEquiv.mulRight_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#DilationEquiv.mulRight_apply\"><span class=\"name\">DilationEquiv</span>.<span class=\"name\">mulRight_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedDivisionRing\">NormedDivisionRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#DilationEquiv.mulRight\">DilationEquiv.mulRight</a> <span class=\"fn\">a</span> <span class=\"fn\">ha</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L227-L233","name":"DilationEquiv.mulRight","line":227,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#DilationEquiv.mulRight","doc":"Multiplication by a nonzero element `a` on the right\nas a `DilationEquiv` of a normed division ring. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#DilationEquiv.mulRight\"><span class=\"name\">DilationEquiv</span>.<span class=\"name\">mulRight</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedDivisionRing\">NormedDivisionRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Topology/MetricSpace/DilationEquiv.html#DilationEquiv\">‚âÉ·µà</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L221-L221","name":"DilationEquiv.mulLeft_symm_apply","line":221,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#DilationEquiv.mulLeft_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#DilationEquiv.mulLeft_symm_apply\"><span class=\"name\">DilationEquiv</span>.<span class=\"name\">mulLeft_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedDivisionRing\">NormedDivisionRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#DilationEquiv.mulLeft\">DilationEquiv.mulLeft</a> <span class=\"fn\">a</span> <span class=\"fn\">ha</span>)</span>.symm</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span><a href=\"./Mathlib/Algebra/Group/Operations.html#Inv.inv\">‚Åª¬π</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L221-L221","name":"DilationEquiv.mulLeft_apply","line":221,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#DilationEquiv.mulLeft_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#DilationEquiv.mulLeft_apply\"><span class=\"name\">DilationEquiv</span>.<span class=\"name\">mulLeft_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedDivisionRing\">NormedDivisionRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#DilationEquiv.mulLeft\">DilationEquiv.mulLeft</a> <span class=\"fn\">a</span> <span class=\"fn\">ha</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L219-L225","name":"DilationEquiv.mulLeft","line":219,"kind":"def","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#DilationEquiv.mulLeft","doc":"Multiplication by a nonzero element `a` on the left\nas a `DilationEquiv` of a normed division ring. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#DilationEquiv.mulLeft\"><span class=\"name\">DilationEquiv</span>.<span class=\"name\">mulLeft</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedDivisionRing\">NormedDivisionRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">Œ±</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">Œ±</span> <a href=\"./Mathlib/Topology/MetricSpace/DilationEquiv.html#DilationEquiv\">‚âÉ·µà</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L215-L217","name":"antilipschitzWith_mul_right","line":215,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#antilipschitzWith_mul_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#antilipschitzWith_mul_right\"><span class=\"name\">antilipschitzWith_mul_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedDivisionRing\">NormedDivisionRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Antilipschitz.html#AntilipschitzWith\">AntilipschitzWith</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‚Äñ</a><span class=\"fn\">a</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‚Äñ‚Çä</a></span><a href=\"./Mathlib/Algebra/Group/Operations.html#Inv.inv\">‚Åª¬π</a></span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L212-L213","name":"antilipschitzWith_mul_left","line":212,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#antilipschitzWith_mul_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#antilipschitzWith_mul_left\"><span class=\"name\">antilipschitzWith_mul_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedDivisionRing\">NormedDivisionRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">Œ±</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">‚â†</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Antilipschitz.html#AntilipschitzWith\">AntilipschitzWith</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‚Äñ</a><span class=\"fn\">a</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‚Äñ‚Çä</a></span><a href=\"./Mathlib/Algebra/Group/Operations.html#Inv.inv\">‚Åª¬π</a></span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) =&gt; <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L202-L204","name":"SeparationQuotient.instNormOneClass","line":202,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#SeparationQuotient.instNormOneClass","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#SeparationQuotient.instNormOneClass\"><span class=\"name\">SeparationQuotient</span>.<span class=\"name\">instNormOneClass</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/ZeroOne.html#One\">One</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormOneClass\">NormOneClass</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormOneClass\">NormOneClass</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#SeparationQuotient\">SeparationQuotient</a> <span class=\"fn\">Œ±</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L197-L200","name":"SeparationQuotient.instNormedCommRing","line":197,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#SeparationQuotient.instNormedCommRing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#SeparationQuotient.instNormedCommRing\"><span class=\"name\">SeparationQuotient</span>.<span class=\"name\">instNormedCommRing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#SeminormedCommRing\">SeminormedCommRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedCommRing\">NormedCommRing</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#SeparationQuotient\">SeparationQuotient</a> <span class=\"fn\">Œ±</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L192-L195","name":"SeparationQuotient.instNormedRing","line":192,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#SeparationQuotient.instNormedRing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#SeparationQuotient.instNormedRing\"><span class=\"name\">SeparationQuotient</span>.<span class=\"name\">instNormedRing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#SeminormedRing\">SeminormedRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedRing\">NormedRing</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#SeparationQuotient\">SeparationQuotient</a> <span class=\"fn\">Œ±</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L187-L190","name":"SeparationQuotient.instNonUnitalNormedCommRing","line":187,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#SeparationQuotient.instNonUnitalNormedCommRing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#SeparationQuotient.instNonUnitalNormedCommRing\"><span class=\"name\">SeparationQuotient</span>.<span class=\"name\">instNonUnitalNormedCommRing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedCommRing\">NonUnitalSeminormedCommRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalNormedCommRing\">NonUnitalNormedCommRing</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#SeparationQuotient\">SeparationQuotient</a> <span class=\"fn\">Œ±</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L182-L185","name":"SeparationQuotient.instNonUnitalNormedRing","line":182,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#SeparationQuotient.instNonUnitalNormedRing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#SeparationQuotient.instNonUnitalNormedRing\"><span class=\"name\">SeparationQuotient</span>.<span class=\"name\">instNonUnitalNormedRing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalNormedRing\">NonUnitalNormedRing</a> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#SeparationQuotient\">SeparationQuotient</a> <span class=\"fn\">Œ±</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L176-L178","name":"NonUnitalSeminormedRing.toTopologicalRing","line":176,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#NonUnitalSeminormedRing.toTopologicalRing","doc":"A seminormed ring is a topological ring. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#NonUnitalSeminormedRing.toTopologicalRing\"><span class=\"name\">NonUnitalSeminormedRing</span>.<span class=\"name\">toTopologicalRing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Ring/Basic.html#TopologicalRing\">TopologicalRing</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L152-L173","name":"NonUnitalSeminormedRing.toContinuousMul","line":152,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#NonUnitalSeminormedRing.toContinuousMul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#NonUnitalSeminormedRing.toContinuousMul\"><span class=\"name\">NonUnitalSeminormedRing</span>.<span class=\"name\">toContinuousMul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Monoid.html#ContinuousMul\">ContinuousMul</a> <span class=\"fn\">Œ±</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L143-L147","name":"Pi.normedCommutativeRing","line":143,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#Pi.normedCommutativeRing","doc":"Normed commutative ring structure on the product of finitely many normed commutative rings,\nusing the sup norm. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#Pi.normedCommutativeRing\"><span class=\"name\">Pi</span>.<span class=\"name\">normedCommutativeRing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{œÄ : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u_4</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedCommRing\">NormedCommRing</a> <span class=\"fn\">(<span class=\"fn\">œÄ</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedCommRing\">NormedCommRing</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">œÄ</span> <span class=\"fn\">i</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L131-L135","name":"Pi.seminormedCommRing","line":131,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#Pi.seminormedCommRing","doc":"Seminormed commutative ring structure on the product of finitely many seminormed commutative\nrings, using the sup norm. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#Pi.seminormedCommRing\"><span class=\"name\">Pi</span>.<span class=\"name\">seminormedCommRing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{œÄ : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u_4</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#SeminormedCommRing\">SeminormedCommRing</a> <span class=\"fn\">(<span class=\"fn\">œÄ</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#SeminormedCommRing\">SeminormedCommRing</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">œÄ</span> <span class=\"fn\">i</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L119-L123","name":"Pi.nonUnitalNormedCommRing","line":119,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#Pi.nonUnitalNormedCommRing","doc":"Normed commutative ring structure on the product of finitely many non-unital normed\ncommutative rings, using the sup norm. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#Pi.nonUnitalNormedCommRing\"><span class=\"name\">Pi</span>.<span class=\"name\">nonUnitalNormedCommRing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{œÄ : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u_4</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalNormedCommRing\">NonUnitalNormedCommRing</a> <span class=\"fn\">(<span class=\"fn\">œÄ</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalNormedCommRing\">NonUnitalNormedCommRing</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">œÄ</span> <span class=\"fn\">i</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L107-L111","name":"Pi.nonUnitalSeminormedCommRing","line":107,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#Pi.nonUnitalSeminormedCommRing","doc":"Non-unital seminormed commutative ring structure on the product of finitely many non-unital\nseminormed commutative rings, using the sup norm. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#Pi.nonUnitalSeminormedCommRing\"><span class=\"name\">Pi</span>.<span class=\"name\">nonUnitalSeminormedCommRing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{œÄ : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u_4</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedCommRing\">NonUnitalSeminormedCommRing</a> <span class=\"fn\">(<span class=\"fn\">œÄ</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedCommRing\">NonUnitalSeminormedCommRing</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">œÄ</span> <span class=\"fn\">i</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L96-L99","name":"Pi.normedRing","line":96,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#Pi.normedRing","doc":"Normed ring structure on the product of finitely many normed rings, using the sup norm. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#Pi.normedRing\"><span class=\"name\">Pi</span>.<span class=\"name\">normedRing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{œÄ : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u_4</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedRing\">NormedRing</a> <span class=\"fn\">(<span class=\"fn\">œÄ</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedRing\">NormedRing</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">œÄ</span> <span class=\"fn\">i</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L84-L88","name":"Pi.nonUnitalNormedRing","line":84,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#Pi.nonUnitalNormedRing","doc":"Normed ring structure on the product of finitely many non-unital normed rings, using the sup\nnorm. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#Pi.nonUnitalNormedRing\"><span class=\"name\">Pi</span>.<span class=\"name\">nonUnitalNormedRing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{œÄ : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u_4</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalNormedRing\">NonUnitalNormedRing</a> <span class=\"fn\">(<span class=\"fn\">œÄ</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalNormedRing\">NonUnitalNormedRing</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">œÄ</span> <span class=\"fn\">i</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L72-L76","name":"Pi.seminormedRing","line":72,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#Pi.seminormedRing","doc":"Seminormed ring structure on the product of finitely many seminormed rings,\nusing the sup norm. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#Pi.seminormedRing\"><span class=\"name\">Pi</span>.<span class=\"name\">seminormedRing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{œÄ : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u_4</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#SeminormedRing\">SeminormedRing</a> <span class=\"fn\">(<span class=\"fn\">œÄ</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#SeminormedRing\">SeminormedRing</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">œÄ</span> <span class=\"fn\">i</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L51-L64","name":"Pi.nonUnitalSeminormedRing","line":51,"kind":"instance","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#Pi.nonUnitalSeminormedRing","doc":"Non-unital seminormed ring structure on the product of finitely many non-unital seminormed\nrings, using the sup norm. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#Pi.nonUnitalSeminormedRing\"><span class=\"name\">Pi</span>.<span class=\"name\">nonUnitalSeminormedRing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{œÄ : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <a href=\"./foundational_types.html\">Type</a> u_4</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">Œπ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">(<span class=\"fn\">œÄ</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">((<span class=\"fn\">i</span> : <span class=\"fn\">Œπ</span>) ‚Üí <span class=\"fn\"><span class=\"fn\">œÄ</span> <span class=\"fn\">i</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L45-L49","name":"Filter.isBoundedUnder_le_mul_tendsto_zero","line":45,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#Filter.isBoundedUnder_le_mul_tendsto_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#Filter.isBoundedUnder_le_mul_tendsto_zero\"><span class=\"name\">Filter</span>.<span class=\"name\">isBoundedUnder_le_mul_tendsto_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f g : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œπ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.IsBoundedUnder\">Filter.IsBoundedUnder</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">x2</span></span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\">norm</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">f</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">g</span> <span class=\"fn\">l</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œπ</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/Normed/Field/Lemmas.lean#L40-L43","name":"Filter.Tendsto.zero_mul_isBoundedUnder_le","line":40,"kind":"theorem","docLink":"./Mathlib/Analysis/Normed/Field/Lemmas.html#Filter.Tendsto.zero_mul_isBoundedUnder_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/Normed/Field/Lemmas.html#Filter.Tendsto.zero_mul_isBoundedUnder_le\"><span class=\"name\">Filter</span>.<span class=\"name\">Tendsto</span>.<span class=\"name\">zero_mul_isBoundedUnder_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œ± : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Œπ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">Œ±</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f g : <span class=\"fn\"><span class=\"fn\">Œπ</span> ‚Üí <span class=\"fn\">Œ±</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <span class=\"fn\">Œπ</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">f</span> <span class=\"fn\">l</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.IsBoundedUnder\">Filter.IsBoundedUnder</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">‚Ñù</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LE.le\">‚â§</a> <span class=\"fn\">x2</span></span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">(<span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œ±</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‚Äñ</a></span>)</span> <a href=\"./Init/Prelude.html#Function.comp\">‚àò</a> <span class=\"fn\">g</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\">Œπ</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">x</span></span></span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhds\">nhds</a> <span class=\"fn\">0</span>)</span></span></div></div>"}]}