{"name":"Lean.Compiler.LCNF.Check","instances":[],"imports":["Lean.Compiler.LCNF.InferType","Lean.Compiler.LCNF.PrettyPrinter","Lean.Compiler.LCNF.CompatibleTypes"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L304-L305","name":"Lean.Compiler.LCNF.checkDeadLocalDecls.visitDecls","line":304,"kind":"def","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.checkDeadLocalDecls.visitDecls","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.checkDeadLocalDecls.visitDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">checkDeadLocalDecls</span>.<span class=\"name\">visitDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(decls : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Lean.Compiler.LCNF.Decl</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Lean/Expr.html#Lean.FVarIdHashSet\">Lean.FVarIdHashSet</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L300-L302","name":"Lean.Compiler.LCNF.checkDeadLocalDecls.visitDecl","line":300,"kind":"def","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.checkDeadLocalDecls.visitDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.checkDeadLocalDecls.visitDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">checkDeadLocalDecls</span>.<span class=\"name\">visitDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Lean.Compiler.LCNF.Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Lean/Expr.html#Lean.FVarIdHashSet\">Lean.FVarIdHashSet</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L288-L298","name":"Lean.Compiler.LCNF.checkDeadLocalDecls.visitCode","line":288,"kind":"opaque","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.checkDeadLocalDecls.visitCode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.checkDeadLocalDecls.visitCode\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">checkDeadLocalDecls</span>.<span class=\"name\">visitCode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(code : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Lean.Compiler.LCNF.Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Lean/Expr.html#Lean.FVarIdHashSet\">Lean.FVarIdHashSet</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L285-L286","name":"Lean.Compiler.LCNF.checkDeadLocalDecls.visitParams","line":285,"kind":"def","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.checkDeadLocalDecls.visitParams","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.checkDeadLocalDecls.visitParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">checkDeadLocalDecls</span>.<span class=\"name\">visitParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(params : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param\">Lean.Compiler.LCNF.Param</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Lean/Expr.html#Lean.FVarIdHashSet\">Lean.FVarIdHashSet</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L282-L283","name":"Lean.Compiler.LCNF.checkDeadLocalDecls.visitParam","line":282,"kind":"def","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.checkDeadLocalDecls.visitParam","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.checkDeadLocalDecls.visitParam\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">checkDeadLocalDecls</span>.<span class=\"name\">visitParam</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(param : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param\">Lean.Compiler.LCNF.Param</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Lean/Expr.html#Lean.FVarIdHashSet\">Lean.FVarIdHashSet</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L279-L280","name":"Lean.Compiler.LCNF.checkDeadLocalDecls.visitFVar","line":279,"kind":"def","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.checkDeadLocalDecls.visitFVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.checkDeadLocalDecls.visitFVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">checkDeadLocalDecls</span>.<span class=\"name\">visitFVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Lean/Expr.html#Lean.FVarIdHashSet\">Lean.FVarIdHashSet</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L266-L305","name":"Lean.Compiler.LCNF.checkDeadLocalDecls","line":266,"kind":"def","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.checkDeadLocalDecls","doc":"Check whether every local declaration in the local context is used in one of given `decls`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.checkDeadLocalDecls\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">checkDeadLocalDecls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(decls : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Lean.Compiler.LCNF.Decl</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">Lean.Compiler.LCNF.CompilerM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L263-L264","name":"Lean.Compiler.LCNF.Decl.check","line":263,"kind":"def","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Decl.check","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Decl.check\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Decl</span>.<span class=\"name\">check</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Decl\">Lean.Compiler.LCNF.Decl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">Lean.Compiler.LCNF.CompilerM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L258-L259","name":"Lean.Compiler.LCNF.Check.run","line":258,"kind":"def","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.run","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.run\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Check</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.CheckM\">Lean.Compiler.LCNF.Check.CheckM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/CompilerM.html#Lean.Compiler.LCNF.CompilerM\">Lean.Compiler.LCNF.CompilerM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L238-L254","name":"Lean.Compiler.LCNF.Check.check","line":238,"kind":"opaque","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.check","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.check\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Check</span>.<span class=\"name\">check</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(code : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Lean.Compiler.LCNF.Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.CheckM\">Lean.Compiler.LCNF.Check.CheckM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L219-L236","name":"Lean.Compiler.LCNF.Check.checkCases","line":219,"kind":"opaque","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.checkCases","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.checkCases\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Check</span>.<span class=\"name\">checkCases</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Cases\">Lean.Compiler.LCNF.Cases</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.CheckM\">Lean.Compiler.LCNF.Check.CheckM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L209-L217","name":"Lean.Compiler.LCNF.Check.checkFunDecl","line":209,"kind":"opaque","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.checkFunDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.checkFunDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Check</span>.<span class=\"name\">checkFunDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(funDecl : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.FunDecl\">Lean.Compiler.LCNF.FunDecl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.CheckM\">Lean.Compiler.LCNF.Check.CheckM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L200-L207","name":"Lean.Compiler.LCNF.Check.checkFunDeclCore","line":200,"kind":"opaque","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.checkFunDeclCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.checkFunDeclCore\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Check</span>.<span class=\"name\">checkFunDeclCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(params : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param\">Lean.Compiler.LCNF.Param</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(type : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(value : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Code\">Lean.Compiler.LCNF.Code</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.CheckM\">Lean.Compiler.LCNF.Check.CheckM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L191-L194","name":"Lean.Compiler.LCNF.Check.withParams","line":191,"kind":"def","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.withParams","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.withParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Check</span>.<span class=\"name\">withParams</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(params : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param\">Lean.Compiler.LCNF.Param</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.CheckM\">Lean.Compiler.LCNF.Check.CheckM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.CheckM\">Lean.Compiler.LCNF.Check.CheckM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L187-L189","name":"Lean.Compiler.LCNF.Check.withJp","line":187,"kind":"def","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.withJp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.withJp\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Check</span>.<span class=\"name\">withJp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.CheckM\">Lean.Compiler.LCNF.Check.CheckM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.CheckM\">Lean.Compiler.LCNF.Check.CheckM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L183-L185","name":"Lean.Compiler.LCNF.Check.withFVarId","line":183,"kind":"def","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.withFVarId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.withFVarId\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Check</span>.<span class=\"name\">withFVarId</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.CheckM\">Lean.Compiler.LCNF.Check.CheckM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.CheckM\">Lean.Compiler.LCNF.Check.CheckM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L178-L181","name":"Lean.Compiler.LCNF.Check.addFVarId","line":178,"kind":"def","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.addFVarId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.addFVarId\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Check</span>.<span class=\"name\">addFVarId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.CheckM\">Lean.Compiler.LCNF.Check.CheckM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L169-L176","name":"Lean.Compiler.LCNF.Check.checkLetDecl","line":169,"kind":"def","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.checkLetDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.checkLetDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Check</span>.<span class=\"name\">checkLetDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(letDecl : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetDecl\">Lean.Compiler.LCNF.LetDecl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.CheckM\">Lean.Compiler.LCNF.Check.CheckM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L166-L167","name":"Lean.Compiler.LCNF.Check.checkParams","line":166,"kind":"def","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.checkParams","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.checkParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Check</span>.<span class=\"name\">checkParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(params : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param\">Lean.Compiler.LCNF.Param</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.CheckM\">Lean.Compiler.LCNF.Check.CheckM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L162-L164","name":"Lean.Compiler.LCNF.Check.checkParam","line":162,"kind":"def","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.checkParam","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.checkParam\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Check</span>.<span class=\"name\">checkParam</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(param : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Param\">Lean.Compiler.LCNF.Param</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.CheckM\">Lean.Compiler.LCNF.Check.CheckM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L148-L160","name":"Lean.Compiler.LCNF.Check.checkJpInScope","line":148,"kind":"def","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.checkJpInScope","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.checkJpInScope\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Check</span>.<span class=\"name\">checkJpInScope</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(jp : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.CheckM\">Lean.Compiler.LCNF.Check.CheckM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L141-L146","name":"Lean.Compiler.LCNF.Check.checkLetValue","line":141,"kind":"def","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.checkLetValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.checkLetValue\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Check</span>.<span class=\"name\">checkLetValue</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.LetValue\">Lean.Compiler.LCNF.LetValue</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.CheckM\">Lean.Compiler.LCNF.Check.CheckM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L110-L139","name":"Lean.Compiler.LCNF.Check.checkAppArgs","line":110,"kind":"def","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.checkAppArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.checkAppArgs\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Check</span>.<span class=\"name\">checkAppArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(args : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Compiler/LCNF/Basic.html#Lean.Compiler.LCNF.Arg\">Lean.Compiler.LCNF.Arg</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.CheckM\">Lean.Compiler.LCNF.Check.CheckM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L104-L108","name":"Lean.Compiler.LCNF.Check.isCtorParam","line":104,"kind":"def","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.isCtorParam","doc":"Return true `f` is a constructor and `i` is less than its number of parameters. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.isCtorParam\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Check</span>.<span class=\"name\">isCtorParam</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L100-L102","name":"Lean.Compiler.LCNF.Check.checkFVar","line":100,"kind":"def","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.checkFVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.checkFVar\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Check</span>.<span class=\"name\">checkFVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.CheckM\">Lean.Compiler.LCNF.Check.CheckM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L97-L98","name":"Lean.Compiler.LCNF.Check.checkTypes","line":97,"kind":"def","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.checkTypes","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.checkTypes\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Check</span>.<span class=\"name\">checkTypes</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.CheckM\">Lean.Compiler.LCNF.Check.CheckM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L95-L95","name":"Lean.Compiler.LCNF.Check.CheckM","line":95,"kind":"def","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.CheckM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.CheckM\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Check</span>.<span class=\"name\">CheckM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L93-L93","name":"Lean.Compiler.LCNF.Check.State.all","line":93,"kind":"def","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.State.all","doc":"All free variables found "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.State.all\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Check</span>.<span class=\"name\">State</span>.<span class=\"name\">all</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.State\">Lean.Compiler.LCNF.Check.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.FVarIdHashSet\">Lean.FVarIdHashSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L91-L91","name":"Lean.Compiler.LCNF.Check.State.mk","line":91,"kind":"ctor","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Check</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(all : <a href=\"./Lean/Expr.html#Lean.FVarIdHashSet\">Lean.FVarIdHashSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.State\">Lean.Compiler.LCNF.Check.State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L91-L93","name":"Lean.Compiler.LCNF.Check.State","line":91,"kind":"structure","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.State","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Check</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L89-L89","name":"Lean.Compiler.LCNF.Check.Context.vars","line":89,"kind":"def","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.Context.vars","doc":"Variables and local functions in scope "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.Context.vars\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Check</span>.<span class=\"name\">Context</span>.<span class=\"name\">vars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.Context\">Lean.Compiler.LCNF.Check.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.FVarIdSet\">Lean.FVarIdSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L87-L87","name":"Lean.Compiler.LCNF.Check.Context.jps","line":87,"kind":"def","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.Context.jps","doc":"Join points that are in scope. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.Context.jps\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Check</span>.<span class=\"name\">Context</span>.<span class=\"name\">jps</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.Context\">Lean.Compiler.LCNF.Check.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.FVarIdSet\">Lean.FVarIdSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L85-L85","name":"Lean.Compiler.LCNF.Check.Context.mk","line":85,"kind":"ctor","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.Context.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Check</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(jps vars : <a href=\"./Lean/Expr.html#Lean.FVarIdSet\">Lean.FVarIdSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.Context\">Lean.Compiler.LCNF.Check.Context</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Compiler/LCNF/Check.lean#L85-L89","name":"Lean.Compiler.LCNF.Check.Context","line":85,"kind":"structure","docLink":"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.Context","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Compiler/LCNF/Check.html#Lean.Compiler.LCNF.Check.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">Compiler</span>.<span class=\"name\">LCNF</span>.<span class=\"name\">Check</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}