{"name":"Init.Grind.Tactics","instances":[{"typeNames":["Lean.Grind.Config"],"name":"Lean.Grind.instInhabitedConfig","className":"Inhabited"},{"typeNames":["Lean.Grind.Config"],"name":"Lean.Grind.instBEqConfig","className":"BEq"}],"imports":["Init.Tactics"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Grind/Tactics.lean#L20-L20","name":"Lean.Grind.instBEqConfig","line":20,"kind":"instance","docLink":"./Init/Grind/Tactics.html#Lean.Grind.instBEqConfig","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Grind.instBEqConfig\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instBEqConfig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Init/Grind/Tactics.html#Lean.Grind.Config\">Lean.Grind.Config</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Grind/Tactics.lean#L20-L20","name":"Lean.Grind.instInhabitedConfig","line":20,"kind":"instance","docLink":"./Init/Grind/Tactics.html#Lean.Grind.instInhabitedConfig","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Grind.instInhabitedConfig\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">instInhabitedConfig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Init/Grind/Tactics.html#Lean.Grind.Config\">Lean.Grind.Config</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Grind/Tactics.lean#L19-L19","name":"Lean.Grind.Config.eager","line":19,"kind":"def","docLink":"./Init/Grind/Tactics.html#Lean.Grind.Config.eager","doc":"When `eager` is true (default: `false`), `grind` eagerly splits `if-then-else` and `match`\nexpressions.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Grind.Config.eager\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Config</span>.<span class=\"name\">eager</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/Grind/Tactics.html#Lean.Grind.Config\">Lean.Grind.Config</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Grind/Tactics.lean#L14-L14","name":"Lean.Grind.Config.mk","line":14,"kind":"ctor","docLink":"./Init/Grind/Tactics.html#Lean.Grind.Config.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Grind.Config.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Config</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(eager : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Grind/Tactics.html#Lean.Grind.Config\">Lean.Grind.Config</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Grind/Tactics.lean#L10-L20","name":"Lean.Grind.Config","line":10,"kind":"structure","docLink":"./Init/Grind/Tactics.html#Lean.Grind.Config","doc":"The configuration for `grind`.\nPassed to `grind` using, for example, the `grind (config := { eager := true })` syntax.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Grind/Tactics.html#Lean.Grind.Config\"><span class=\"name\">Lean</span>.<span class=\"name\">Grind</span>.<span class=\"name\">Config</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}