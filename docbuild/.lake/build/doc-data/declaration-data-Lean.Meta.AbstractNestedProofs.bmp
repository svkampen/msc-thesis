{"name":"Lean.Meta.AbstractNestedProofs","instances":[],"imports":["Lean.Meta.Closure"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Meta/AbstractNestedProofs.lean#L75-L81","name":"Lean.Meta.abstractNestedProofs","line":75,"kind":"def","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.abstractNestedProofs","doc":"Replace proofs nested in `e` with new lemmas. The new lemmas have names of the form `mainDeclName.proof_<idx>` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.abstractNestedProofs\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">abstractNestedProofs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mainDeclName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Meta/AbstractNestedProofs.lean#L44-L71","name":"Lean.Meta.AbstractNestedProofs.visit","line":44,"kind":"opaque","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.visit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.visit\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractNestedProofs</span>.<span class=\"name\">visit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.M\">Lean.Meta.AbstractNestedProofs.M</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Meta/AbstractNestedProofs.lean#L32-L32","name":"Lean.Meta.AbstractNestedProofs.M","line":32,"kind":"def","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.M","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.M\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractNestedProofs</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(Î± : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Meta/AbstractNestedProofs.lean#L30-L30","name":"Lean.Meta.AbstractNestedProofs.State.nextIdx","line":30,"kind":"def","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.State.nextIdx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.State.nextIdx\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractNestedProofs</span>.<span class=\"name\">State</span>.<span class=\"name\">nextIdx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.State\">Lean.Meta.AbstractNestedProofs.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Meta/AbstractNestedProofs.lean#L29-L29","name":"Lean.Meta.AbstractNestedProofs.State.mk","line":29,"kind":"ctor","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractNestedProofs</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(nextIdx : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.State\">Lean.Meta.AbstractNestedProofs.State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Meta/AbstractNestedProofs.lean#L29-L30","name":"Lean.Meta.AbstractNestedProofs.State","line":29,"kind":"structure","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.State","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractNestedProofs</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Meta/AbstractNestedProofs.lean#L27-L27","name":"Lean.Meta.AbstractNestedProofs.Context.baseName","line":27,"kind":"def","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.Context.baseName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.Context.baseName\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractNestedProofs</span>.<span class=\"name\">Context</span>.<span class=\"name\">baseName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.Context\">Lean.Meta.AbstractNestedProofs.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Meta/AbstractNestedProofs.lean#L26-L26","name":"Lean.Meta.AbstractNestedProofs.Context.mk","line":26,"kind":"ctor","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.Context.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractNestedProofs</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(baseName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.Context\">Lean.Meta.AbstractNestedProofs.Context</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Meta/AbstractNestedProofs.lean#L26-L27","name":"Lean.Meta.AbstractNestedProofs.Context","line":26,"kind":"structure","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.Context","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractNestedProofs</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Meta/AbstractNestedProofs.lean#L17-L24","name":"Lean.Meta.AbstractNestedProofs.isNonTrivialProof","line":17,"kind":"def","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.isNonTrivialProof","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.isNonTrivialProof\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractNestedProofs</span>.<span class=\"name\">isNonTrivialProof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Meta/AbstractNestedProofs.lean#L12-L15","name":"Lean.Meta.AbstractNestedProofs.getLambdaBody","line":12,"kind":"def","docLink":"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.getLambdaBody","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/AbstractNestedProofs.html#Lean.Meta.AbstractNestedProofs.getLambdaBody\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">AbstractNestedProofs</span>.<span class=\"name\">getLambdaBody</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"}]}