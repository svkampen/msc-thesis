{"name":"Init.Data.Nat.Bitwise.Basic","instances":[{"typeNames":["Nat"],"name":"Nat.instAndOp","className":"AndOp"},{"typeNames":["Nat"],"name":"Nat.instOrOp","className":"OrOp"},{"typeNames":["Nat"],"name":"Nat.instXor","className":"Xor"},{"typeNames":["Nat"],"name":"Nat.instShiftLeft","className":"ShiftLeft"},{"typeNames":["Nat"],"name":"Nat.instShiftRight","className":"ShiftRight"}],"imports":["Init.Data.Nat.Basic","Init.Data.Nat.Div","Init.Coe"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Bitwise/Basic.lean#L80-L83","name":"Nat.testBit","line":80,"kind":"def","docLink":"./Init/Data/Nat/Bitwise/Basic.html#Nat.testBit","doc":"`testBit m n` returns whether the `(n+1)` least significant bit is `1` or `0`"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Bitwise/Basic.html#Nat.testBit\"><span class=\"name\">Nat</span>.<span class=\"name\">testBit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Bitwise/Basic.lean#L68-L72","name":"Nat.shiftRight_eq_div_pow","line":68,"kind":"theorem","docLink":"./Init/Data/Nat/Bitwise/Basic.html#Nat.shiftRight_eq_div_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Bitwise/Basic.html#Nat.shiftRight_eq_div_pow\"><span class=\"name\">Nat</span>.<span class=\"name\">shiftRight_eq_div_pow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Bitwise/Basic.lean#L64-L66","name":"Nat.shiftRight_add","line":64,"kind":"theorem","docLink":"./Init/Data/Nat/Bitwise/Basic.html#Nat.shiftRight_add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Bitwise/Basic.html#Nat.shiftRight_add\"><span class=\"name\">Nat</span>.<span class=\"name\">shiftRight_add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m n k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Bitwise/Basic.lean#L62-L62","name":"Nat.shiftRight_succ","line":62,"kind":"theorem","docLink":"./Init/Data/Nat/Bitwise/Basic.html#Nat.shiftRight_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Bitwise/Basic.html#Nat.shiftRight_succ\"><span class=\"name\">Nat</span>.<span class=\"name\">shiftRight_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Bitwise/Basic.lean#L60-L60","name":"Nat.shiftRight_zero","line":60,"kind":"theorem","docLink":"./Init/Data/Nat/Bitwise/Basic.html#Nat.shiftRight_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Bitwise/Basic.html#Nat.shiftRight_zero\"><span class=\"name\">Nat</span>.<span class=\"name\">shiftRight_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HShiftRight.hShiftRight\">&gt;&gt;&gt;</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Bitwise/Basic.lean#L54-L58","name":"Nat.shiftLeft_eq","line":54,"kind":"theorem","docLink":"./Init/Data/Nat/Bitwise/Basic.html#Nat.shiftLeft_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Bitwise/Basic.html#Nat.shiftLeft_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">shiftLeft_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a b : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HShiftLeft.hShiftLeft\">&lt;&lt;&lt;</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">b</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Bitwise/Basic.lean#L52-L52","name":"Nat.instShiftRight","line":52,"kind":"instance","docLink":"./Init/Data/Nat/Bitwise/Basic.html#Nat.instShiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Bitwise/Basic.html#Nat.instShiftRight\"><span class=\"name\">Nat</span>.<span class=\"name\">instShiftRight</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#ShiftRight\">ShiftRight</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Bitwise/Basic.lean#L51-L51","name":"Nat.instShiftLeft","line":51,"kind":"instance","docLink":"./Init/Data/Nat/Bitwise/Basic.html#Nat.instShiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Bitwise/Basic.html#Nat.instShiftLeft\"><span class=\"name\">Nat</span>.<span class=\"name\">instShiftLeft</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#ShiftLeft\">ShiftLeft</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Bitwise/Basic.lean#L50-L50","name":"Nat.instXor","line":50,"kind":"instance","docLink":"./Init/Data/Nat/Bitwise/Basic.html#Nat.instXor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Bitwise/Basic.html#Nat.instXor\"><span class=\"name\">Nat</span>.<span class=\"name\">instXor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Xor\">Xor</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Bitwise/Basic.lean#L49-L49","name":"Nat.instOrOp","line":49,"kind":"instance","docLink":"./Init/Data/Nat/Bitwise/Basic.html#Nat.instOrOp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Bitwise/Basic.html#Nat.instOrOp\"><span class=\"name\">Nat</span>.<span class=\"name\">instOrOp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#OrOp\">OrOp</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Bitwise/Basic.lean#L48-L48","name":"Nat.instAndOp","line":48,"kind":"instance","docLink":"./Init/Data/Nat/Bitwise/Basic.html#Nat.instAndOp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Bitwise/Basic.html#Nat.instAndOp\"><span class=\"name\">Nat</span>.<span class=\"name\">instAndOp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#AndOp\">AndOp</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Bitwise/Basic.lean#L43-L46","name":"Nat.shiftRight","line":43,"kind":"def","docLink":"./Init/Data/Nat/Bitwise/Basic.html#Nat.shiftRight","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Bitwise/Basic.html#Nat.shiftRight\"><span class=\"name\">Nat</span>.<span class=\"name\">shiftRight</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Bitwise/Basic.lean#L39-L42","name":"Nat.shiftLeft","line":39,"kind":"def","docLink":"./Init/Data/Nat/Bitwise/Basic.html#Nat.shiftLeft","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Bitwise/Basic.html#Nat.shiftLeft\"><span class=\"name\">Nat</span>.<span class=\"name\">shiftLeft</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Bitwise/Basic.lean#L37-L38","name":"Nat.xor","line":37,"kind":"def","docLink":"./Init/Data/Nat/Bitwise/Basic.html#Nat.xor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Bitwise/Basic.html#Nat.xor\"><span class=\"name\">Nat</span>.<span class=\"name\">xor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Bitwise/Basic.lean#L35-L36","name":"Nat.lor","line":35,"kind":"def","docLink":"./Init/Data/Nat/Bitwise/Basic.html#Nat.lor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Bitwise/Basic.html#Nat.lor\"><span class=\"name\">Nat</span>.<span class=\"name\">lor</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Bitwise/Basic.lean#L33-L34","name":"Nat.land","line":33,"kind":"def","docLink":"./Init/Data/Nat/Bitwise/Basic.html#Nat.land","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Bitwise/Basic.html#Nat.land\"><span class=\"name\">Nat</span>.<span class=\"name\">land</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Bitwise/Basic.lean#L16-L31","name":"Nat.bitwise","line":16,"kind":"def","docLink":"./Init/Data/Nat/Bitwise/Basic.html#Nat.bitwise","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Bitwise/Basic.html#Nat.bitwise\"><span class=\"name\">Nat</span>.<span class=\"name\">bitwise</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Bool\">Bool</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n m : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Bitwise/Basic.lean#L13-L14","name":"Nat.bitwise_rec_lemma","line":13,"kind":"theorem","docLink":"./Init/Data/Nat/Bitwise/Basic.html#Nat.bitwise_rec_lemma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Bitwise/Basic.html#Nat.bitwise_rec_lemma\"><span class=\"name\">Nat</span>.<span class=\"name\">bitwise_rec_lemma</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hNe : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">2</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span></div></div>"}]}