{"name":"Mathlib.Lean.Expr.ExtraRecognizers","instances":[],"imports":["Init","Mathlib.Data.Set.Operations"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Lean/Expr/ExtraRecognizers.lean#L15-L27","name":"Lean.Expr.coeTypeSet?","line":15,"kind":"def","docLink":"./Mathlib/Lean/Expr/ExtraRecognizers.html#Lean.Expr.coeTypeSet?","doc":"If `e` is a coercion of a set to a type, return the set.\nSucceeds either for `Set.Elem s` terms or `{x // x âˆˆ s}` subtype terms. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Lean/Expr/ExtraRecognizers.html#Lean.Expr.coeTypeSet?\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">coeTypeSet?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"}]}