{"name":"Mathlib.Algebra.Module.Equiv.Opposite","instances":[],"imports":["Init","Mathlib.Algebra.Module.Equiv.Defs","Mathlib.Algebra.Module.Opposite"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Algebra/Module/Equiv/Opposite.lean#L74-L77","name":"MulOpposite.coe_opLinearEquiv_symm_addEquiv","line":74,"kind":"theorem","docLink":"./Mathlib/Algebra/Module/Equiv/Opposite.html#MulOpposite.coe_opLinearEquiv_symm_addEquiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Module/Equiv/Opposite.html#MulOpposite.coe_opLinearEquiv_symm_addEquiv\"><span class=\"name\">MulOpposite</span>.<span class=\"name\">coe_opLinearEquiv_symm_addEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Module/Equiv/Opposite.html#MulOpposite.opLinearEquiv\">MulOpposite.opLinearEquiv</a> <span class=\"fn\">R</span>)</span>.symm</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">MulOpposite.opAddEquiv</span>.symm</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Algebra/Module/Equiv/Opposite.lean#L70-L72","name":"MulOpposite.opLinearEquiv_symm_toAddEquiv","line":70,"kind":"theorem","docLink":"./Mathlib/Algebra/Module/Equiv/Opposite.html#MulOpposite.opLinearEquiv_symm_toAddEquiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Module/Equiv/Opposite.html#MulOpposite.opLinearEquiv_symm_toAddEquiv\"><span class=\"name\">MulOpposite</span>.<span class=\"name\">opLinearEquiv_symm_toAddEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Module/Equiv/Opposite.html#MulOpposite.opLinearEquiv\">MulOpposite.opLinearEquiv</a> <span class=\"fn\">R</span>)</span>.symm</span>.toAddEquiv</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">MulOpposite.opAddEquiv</span>.symm</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Algebra/Module/Equiv/Opposite.lean#L65-L67","name":"MulOpposite.coe_opLinearEquiv_addEquiv","line":65,"kind":"theorem","docLink":"./Mathlib/Algebra/Module/Equiv/Opposite.html#MulOpposite.coe_opLinearEquiv_addEquiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Module/Equiv/Opposite.html#MulOpposite.coe_opLinearEquiv_addEquiv\"><span class=\"name\">MulOpposite</span>.<span class=\"name\">coe_opLinearEquiv_addEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Module/Equiv/Opposite.html#MulOpposite.opLinearEquiv\">MulOpposite.opLinearEquiv</a> <span class=\"fn\">R</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">MulOpposite.opAddEquiv</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Algebra/Module/Equiv/Opposite.lean#L62-L63","name":"MulOpposite.opLinearEquiv_toAddEquiv","line":62,"kind":"theorem","docLink":"./Mathlib/Algebra/Module/Equiv/Opposite.html#MulOpposite.opLinearEquiv_toAddEquiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Module/Equiv/Opposite.html#MulOpposite.opLinearEquiv_toAddEquiv\"><span class=\"name\">MulOpposite</span>.<span class=\"name\">opLinearEquiv_toAddEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Module/Equiv/Opposite.html#MulOpposite.opLinearEquiv\">MulOpposite.opLinearEquiv</a> <span class=\"fn\">R</span>)</span>.toAddEquiv</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">MulOpposite.opAddEquiv</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Algebra/Module/Equiv/Opposite.lean#L56-L59","name":"MulOpposite.coe_opLinearEquiv_symm_toLinearMap","line":56,"kind":"theorem","docLink":"./Mathlib/Algebra/Module/Equiv/Opposite.html#MulOpposite.coe_opLinearEquiv_symm_toLinearMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Module/Equiv/Opposite.html#MulOpposite.coe_opLinearEquiv_symm_toLinearMap\"><span class=\"name\">MulOpposite</span>.<span class=\"name\">coe_opLinearEquiv_symm_toLinearMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Module/Equiv/Opposite.html#MulOpposite.opLinearEquiv\">MulOpposite.opLinearEquiv</a> <span class=\"fn\">R</span>)</span>.symm</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">MulOpposite.unop</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Algebra/Module/Equiv/Opposite.lean#L52-L54","name":"MulOpposite.coe_opLinearEquiv_toLinearMap","line":52,"kind":"theorem","docLink":"./Mathlib/Algebra/Module/Equiv/Opposite.html#MulOpposite.coe_opLinearEquiv_toLinearMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Module/Equiv/Opposite.html#MulOpposite.coe_opLinearEquiv_toLinearMap\"><span class=\"name\">MulOpposite</span>.<span class=\"name\">coe_opLinearEquiv_toLinearMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Module/Equiv/Opposite.html#MulOpposite.opLinearEquiv\">MulOpposite.opLinearEquiv</a> <span class=\"fn\">R</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">MulOpposite.op</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Algebra/Module/Equiv/Opposite.lean#L48-L50","name":"MulOpposite.coe_opLinearEquiv_symm","line":48,"kind":"theorem","docLink":"./Mathlib/Algebra/Module/Equiv/Opposite.html#MulOpposite.coe_opLinearEquiv_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Module/Equiv/Opposite.html#MulOpposite.coe_opLinearEquiv_symm\"><span class=\"name\">MulOpposite</span>.<span class=\"name\">coe_opLinearEquiv_symm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Module/Equiv/Opposite.html#MulOpposite.opLinearEquiv\">MulOpposite.opLinearEquiv</a> <span class=\"fn\">R</span>)</span>.symm</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">MulOpposite.unop</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Algebra/Module/Equiv/Opposite.lean#L44-L46","name":"MulOpposite.coe_opLinearEquiv","line":44,"kind":"theorem","docLink":"./Mathlib/Algebra/Module/Equiv/Opposite.html#MulOpposite.coe_opLinearEquiv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Module/Equiv/Opposite.html#MulOpposite.coe_opLinearEquiv\"><span class=\"name\">MulOpposite</span>.<span class=\"name\">coe_opLinearEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Module/Equiv/Opposite.html#MulOpposite.opLinearEquiv\">MulOpposite.opLinearEquiv</a> <span class=\"fn\">R</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">MulOpposite.op</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Algebra/Module/Equiv/Opposite.lean#L40-L42","name":"MulOpposite.opLinearEquiv","line":40,"kind":"def","docLink":"./Mathlib/Algebra/Module/Equiv/Opposite.html#MulOpposite.opLinearEquiv","doc":"The function `op` is a linear equivalence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Module/Equiv/Opposite.html#MulOpposite.opLinearEquiv\"><span class=\"name\">MulOpposite</span>.<span class=\"name\">opLinearEquiv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">R</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">M</span> <a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">≃ₗ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">]</a> <span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite\">ᵐᵒᵖ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Algebra/Module/Equiv/Opposite.lean#L20-L20","name":"LinearMap.ext_ring_op","line":20,"kind":"theorem","docLink":"./Mathlib/Algebra/Module/Equiv/Opposite.html#LinearMap.ext_ring_op","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/Module/Equiv/Opposite.html#LinearMap.ext_ring_op\"><span class=\"name\">LinearMap</span>.<span class=\"name\">ext_ring_op</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#Semiring\">Semiring</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#AddCommMonoid\">AddCommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Module/Defs.html#Module\">Module</a> <span class=\"fn\">S</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Opposites.html#MulOpposite\">ᵐᵒᵖ</a></span> <a href=\"./Mathlib/Algebra/Ring/Hom/Defs.html#RingHom\">→+*</a> <span class=\"fn\">S</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f g : <span class=\"fn\"><span class=\"fn\">R</span> <a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">→ₛₗ[</a><span class=\"fn\">σ</span><a href=\"./Mathlib/Algebra/Module/LinearMap/Defs.html#LinearMap\">]</a> <span class=\"fn\">M</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g</span> <span class=\"fn\">1</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></div></div>"}]}