{"name":"Lean.Elab.Tactic.BVDecide.Frontend.LRAT","instances":[{"typeNames":["Std.Tactic.BVDecide.LRAT.IntAction"],"name":"Lean.Elab.Tactic.BVDecide.Frontend.instToExprIntAction","className":"Lean.ToExpr"}],"imports":["Lean.Elab.Tactic.BVDecide.Frontend.Attr","Lean.Elab.Tactic.BVDecide.LRAT.Trim","Lean.Elab.Tactic.BVDecide.External","Std.Tactic.BVDecide.LRAT.Checker","Std.Sat.CNF.Dimacs"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/Frontend/LRAT.lean#L175-L213","name":"Lean.Elab.Tactic.BVDecide.Frontend.LratCert.toReflectionProof","line":175,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.LratCert.toReflectionProof","doc":"Turn an `LratCert` into a proof that some `reflected` expression is UNSAT by providing a `verifier`\nfunction together with a correctness theorem for it.\n\n- `verifier` is expected to have type `α → LratCert → Bool`\n- `unsat_of_verifier_eq_true` is expected to have type\n  `∀ (b : α) (c : LratCert), verifier b c = true → unsat b`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.LratCert.toReflectionProof\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">LratCert</span>.<span class=\"name\">toReflectionProof</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(cert : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.LratCert\">Lean.Elab.Tactic.BVDecide.Frontend.LratCert</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cfg : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext\">Lean.Elab.Tactic.BVDecide.Frontend.TacticContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(reflected : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(verifier unsat_of_verifier_eq_true : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/Frontend/LRAT.lean#L162-L173","name":"Lean.Elab.Tactic.BVDecide.Frontend.mkAuxDecl","line":162,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.mkAuxDecl","doc":"Add an auxiliary declaration. Only used to create constants that appear in our reflection proof.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.mkAuxDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">mkAuxDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(value type : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/Frontend/LRAT.lean#L136-L160","name":"Lean.Elab.Tactic.BVDecide.Frontend.runExternal","line":136,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.runExternal","doc":"Run an external SAT solver on the `CNF` to obtain an LRAT proof.\n\nThis will obtain an `LratCert` if the formula is UNSAT and throw errors otherwise.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.runExternal\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">runExternal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(cnf : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Basic.html#Std.Sat.CNF\">Std.Sat.CNF</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(solver lratPath : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(trimProofs : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(timeout : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(binaryProofs : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Except\">Except</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span>)</span> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.LratCert\">Lean.Elab.Tactic.BVDecide.Frontend.LratCert</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/Frontend/LRAT.lean#L108-L134","name":"Lean.Elab.Tactic.BVDecide.Frontend.LratCert.ofFile","line":108,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.LratCert.ofFile","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.LratCert.ofFile\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">LratCert</span>.<span class=\"name\">ofFile</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lratPath : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(trimProofs : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.LratCert\">Lean.Elab.Tactic.BVDecide.Frontend.LratCert</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/Frontend/LRAT.lean#L81-L106","name":"Lean.Elab.Tactic.BVDecide.Frontend.instToExprIntAction","line":81,"kind":"instance","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.instToExprIntAction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.instToExprIntAction\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">instToExprIntAction</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Std/Tactic/BVDecide/LRAT/Actions.html#Std.Tactic.BVDecide.LRAT.IntAction\">Std.Tactic.BVDecide.LRAT.IntAction</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/Frontend/LRAT.lean#L78-L79","name":"Lean.Elab.Tactic.BVDecide.Frontend.LratCert","line":78,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.LratCert","doc":"An LRAT proof read from a file. This will get parsed using ofReduceBool. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.LratCert\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">LratCert</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/Frontend/LRAT.lean#L66-L76","name":"Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.new.determineSolver","line":66,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.new.determineSolver","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.new.determineSolver\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">TacticContext</span>.<span class=\"name\">new</span>.<span class=\"name\">determineSolver</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/Frontend/LRAT.lean#L38-L76","name":"Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.new","line":38,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.new","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.new\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">TacticContext</span>.<span class=\"name\">new</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lratPath : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext\">Lean.Elab.Tactic.BVDecide.Frontend.TacticContext</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/Frontend/LRAT.lean#L36-L36","name":"Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.binaryProofs","line":36,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.binaryProofs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.binaryProofs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">TacticContext</span>.<span class=\"name\">binaryProofs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext\">Lean.Elab.Tactic.BVDecide.Frontend.TacticContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/Frontend/LRAT.lean#L35-L35","name":"Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.trimProofs","line":35,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.trimProofs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.trimProofs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">TacticContext</span>.<span class=\"name\">trimProofs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext\">Lean.Elab.Tactic.BVDecide.Frontend.TacticContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/Frontend/LRAT.lean#L34-L34","name":"Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.timeout","line":34,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.timeout","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.timeout\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">TacticContext</span>.<span class=\"name\">timeout</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext\">Lean.Elab.Tactic.BVDecide.Frontend.TacticContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/Frontend/LRAT.lean#L33-L33","name":"Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.graphviz","line":33,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.graphviz","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.graphviz\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">TacticContext</span>.<span class=\"name\">graphviz</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext\">Lean.Elab.Tactic.BVDecide.Frontend.TacticContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/Frontend/LRAT.lean#L32-L32","name":"Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.lratPath","line":32,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.lratPath","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.lratPath\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">TacticContext</span>.<span class=\"name\">lratPath</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext\">Lean.Elab.Tactic.BVDecide.Frontend.TacticContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/Frontend/LRAT.lean#L31-L31","name":"Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.solver","line":31,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.solver","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.solver\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">TacticContext</span>.<span class=\"name\">solver</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext\">Lean.Elab.Tactic.BVDecide.Frontend.TacticContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/Frontend/LRAT.lean#L30-L30","name":"Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.reflectionDef","line":30,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.reflectionDef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.reflectionDef\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">TacticContext</span>.<span class=\"name\">reflectionDef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext\">Lean.Elab.Tactic.BVDecide.Frontend.TacticContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/Frontend/LRAT.lean#L29-L29","name":"Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.certDef","line":29,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.certDef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.certDef\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">TacticContext</span>.<span class=\"name\">certDef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext\">Lean.Elab.Tactic.BVDecide.Frontend.TacticContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/Frontend/LRAT.lean#L28-L28","name":"Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.exprDef","line":28,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.exprDef","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.exprDef\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">TacticContext</span>.<span class=\"name\">exprDef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext\">Lean.Elab.Tactic.BVDecide.Frontend.TacticContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/Frontend/LRAT.lean#L27-L27","name":"Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.mk","line":27,"kind":"ctor","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">TacticContext</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(exprDef certDef reflectionDef : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(solver lratPath : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(graphviz : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(timeout : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(trimProofs binaryProofs : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext\">Lean.Elab.Tactic.BVDecide.Frontend.TacticContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/Frontend/LRAT.lean#L24-L36","name":"Lean.Elab.Tactic.BVDecide.Frontend.TacticContext","line":24,"kind":"structure","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext","doc":"The context for the `bv_decide` tactic.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/LRAT.html#Lean.Elab.Tactic.BVDecide.Frontend.TacticContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">TacticContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}