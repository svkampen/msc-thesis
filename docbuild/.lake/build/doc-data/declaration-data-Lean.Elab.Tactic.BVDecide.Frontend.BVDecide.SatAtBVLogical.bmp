{"name":"Lean.Elab.Tactic.BVDecide.Frontend.BVDecide.SatAtBVLogical","instances":[],"imports":["Lean.Elab.Tactic.BVDecide.Frontend.BVDecide.Reify"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/SatAtBVLogical.lean#L62-L70","name":"Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.proveFalse","line":62,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/SatAtBVLogical.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.proveFalse","doc":"Given a proof that `x.expr.Unsat`, produce a proof of `False`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/SatAtBVLogical.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.proveFalse\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">SatAtBVLogical</span>.<span class=\"name\">proveFalse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical\">Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M\">Lean.Elab.Tactic.BVDecide.Frontend.M</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/SatAtBVLogical.lean#L47-L60","name":"Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.and","line":47,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/SatAtBVLogical.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.and","doc":"Logical conjunction of two `ReifiedBVLogical`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/SatAtBVLogical.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.and\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">SatAtBVLogical</span>.<span class=\"name\">and</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x y : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical\">Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical\">Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/SatAtBVLogical.lean#L24-L45","name":"Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.of","line":24,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/SatAtBVLogical.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.of","doc":"Reify an `Expr` that is a proof of some boolean structure on top of predicates about `BitVec`s.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/SatAtBVLogical.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical.of\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">SatAtBVLogical</span>.<span class=\"name\">of</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(h : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.LemmaM\">Lean.Elab.Tactic.BVDecide.Frontend.LemmaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical\">Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical</a>)</span></span></div></div>"}]}