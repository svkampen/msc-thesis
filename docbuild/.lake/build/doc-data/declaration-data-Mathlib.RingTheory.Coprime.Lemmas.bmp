{"name":"Mathlib.RingTheory.Coprime.Lemmas","instances":[],"imports":["Init","Mathlib.Algebra.BigOperators.Ring","Mathlib.Data.Fintype.Basic","Mathlib.Data.Int.GCD","Mathlib.RingTheory.Coprime.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L291-L293","name":"IsRelPrime.pow_iff","line":291,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#IsRelPrime.pow_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#IsRelPrime.pow_iff\"><span class=\"name\">IsRelPrime</span>.<span class=\"name\">pow_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Basic.html#DecompositionMonoid\">DecompositionMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x y : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">m</span>)</span> <span class=\"fn\">(<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L288-L289","name":"IsRelPrime.pow_right_iff","line":288,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#IsRelPrime.pow_right_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#IsRelPrime.pow_right_iff\"><span class=\"name\">IsRelPrime</span>.<span class=\"name\">pow_right_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Basic.html#DecompositionMonoid\">DecompositionMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x y : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">m</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L283-L286","name":"IsRelPrime.pow_left_iff","line":283,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#IsRelPrime.pow_left_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#IsRelPrime.pow_left_iff\"><span class=\"name\">IsRelPrime</span>.<span class=\"name\">pow_left_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Basic.html#DecompositionMonoid\">DecompositionMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x y : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">m</span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L280-L281","name":"IsRelPrime.pow","line":280,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#IsRelPrime.pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#IsRelPrime.pow\"><span class=\"name\">IsRelPrime</span>.<span class=\"name\">pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Basic.html#DecompositionMonoid\">DecompositionMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x y : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">m</span>)</span> <span class=\"fn\">(<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L276-L278","name":"IsRelPrime.pow_right","line":276,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#IsRelPrime.pow_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#IsRelPrime.pow_right\"><span class=\"name\">IsRelPrime</span>.<span class=\"name\">pow_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Basic.html#DecompositionMonoid\">DecompositionMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x y : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L272-L274","name":"IsRelPrime.pow_left","line":272,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#IsRelPrime.pow_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#IsRelPrime.pow_left\"><span class=\"name\">IsRelPrime</span>.<span class=\"name\">pow_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Basic.html#DecompositionMonoid\">DecompositionMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x y : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">m</span>)</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L258-L266","name":"pairwise_isRelPrime_iff_isRelPrime_prod","line":258,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#pairwise_isRelPrime_iff_isRelPrime_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#pairwise_isRelPrime_iff_isRelPrime_prod\"><span class=\"name\">pairwise_isRelPrime_iff_isRelPrime_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Basic.html#DecompositionMonoid\">DecompositionMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Pairwise\">Pairwise</a> <span class=\"fn\">(<span class=\"fn\">IsRelPrime</span> <a href=\"./Mathlib/Logic/Function/Defs.html#Function.onFun\">on</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">{ <span class=\"fn\">x</span> : <span class=\"fn\">I</span> // <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">t</span></span> }</span>) =&gt; <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">↑<span class=\"fn\">i</span></span></span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">(<span class=\"fn\">s</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(∏ <span class=\"fn\">j</span> ∈ <span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">{<span class=\"fn\">i</span>}</span></span>, <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">j</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L254-L256","name":"Fintype.prod_dvd_of_isRelPrime","line":254,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#Fintype.prod_dvd_of_isRelPrime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#Fintype.prod_dvd_of_isRelPrime\"><span class=\"name\">Fintype</span>.<span class=\"name\">prod_dvd_of_isRelPrime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Basic.html#DecompositionMonoid\">DecompositionMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Hs : <span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Pairwise\">Pairwise</a> <span class=\"fn\">(<span class=\"fn\">IsRelPrime</span> <a href=\"./Mathlib/Logic/Function/Defs.html#Function.onFun\">on</a> <span class=\"fn\">s</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Hs1 : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">I</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">z</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">∏ <span class=\"fn\">x</span> : <span class=\"fn\">I</span>, <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L238-L252","name":"Finset.prod_dvd_of_isRelPrime","line":238,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#Finset.prod_dvd_of_isRelPrime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#Finset.prod_dvd_of_isRelPrime\"><span class=\"name\">Finset</span>.<span class=\"name\">prod_dvd_of_isRelPrime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Basic.html#DecompositionMonoid\">DecompositionMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">t</span>)</span>.Pairwise</span> <span class=\"fn\">(<span class=\"fn\">IsRelPrime</span> <a href=\"./Mathlib/Logic/Function/Defs.html#Function.onFun\">on</a> <span class=\"fn\">s</span>)</span></span> → <span class=\"fn\"><span class=\"fn\">(∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">z</span></span>)</span> → <span class=\"fn\"><span class=\"fn\">∏ <span class=\"fn\">x</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">z</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L234-L236","name":"IsRelPrime.of_prod_right","line":234,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#IsRelPrime.of_prod_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#IsRelPrime.of_prod_right\"><span class=\"name\">IsRelPrime</span>.<span class=\"name\">of_prod_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Basic.html#DecompositionMonoid\">DecompositionMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H1 : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">x</span> <span class=\"fn\">(∏ <span class=\"fn\">i</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hit : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\">s</span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L230-L232","name":"IsRelPrime.of_prod_left","line":230,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#IsRelPrime.of_prod_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#IsRelPrime.of_prod_left\"><span class=\"name\">IsRelPrime</span>.<span class=\"name\">of_prod_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Basic.html#DecompositionMonoid\">DecompositionMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H1 : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">(∏ <span class=\"fn\">i</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hit : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">(<span class=\"fn\">s</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L227-L228","name":"IsRelPrime.prod_right_iff","line":227,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#IsRelPrime.prod_right_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#IsRelPrime.prod_right_iff\"><span class=\"name\">IsRelPrime</span>.<span class=\"name\">prod_right_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Basic.html#DecompositionMonoid\">DecompositionMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">x</span> <span class=\"fn\">(∏ <span class=\"fn\">i</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\">s</span> <span class=\"fn\">i</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L222-L225","name":"IsRelPrime.prod_left_iff","line":222,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#IsRelPrime.prod_left_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#IsRelPrime.prod_left_iff\"><span class=\"name\">IsRelPrime</span>.<span class=\"name\">prod_left_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Basic.html#DecompositionMonoid\">DecompositionMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">(∏ <span class=\"fn\">i</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">(<span class=\"fn\">s</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L219-L220","name":"IsRelPrime.prod_right","line":219,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#IsRelPrime.prod_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#IsRelPrime.prod_right\"><span class=\"name\">IsRelPrime</span>.<span class=\"name\">prod_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Basic.html#DecompositionMonoid\">DecompositionMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\">s</span> <span class=\"fn\">i</span>)</span></span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">x</span> <span class=\"fn\">(∏ <span class=\"fn\">i</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L212-L217","name":"IsRelPrime.prod_left","line":212,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#IsRelPrime.prod_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#IsRelPrime.prod_left\"><span class=\"name\">IsRelPrime</span>.<span class=\"name\">prod_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Basic.html#DecompositionMonoid\">DecompositionMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">(<span class=\"fn\">s</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">x</span></span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Divisibility/Units.html#IsRelPrime\">IsRelPrime</a> <span class=\"fn\">(∏ <span class=\"fn\">i</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L203-L204","name":"IsCoprime.pow_iff","line":203,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#IsCoprime.pow_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#IsCoprime.pow_iff\"><span class=\"name\">IsCoprime</span>.<span class=\"name\">pow_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">m</span>)</span> <span class=\"fn\">(<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L200-L201","name":"IsCoprime.pow_right_iff","line":200,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#IsCoprime.pow_right_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#IsCoprime.pow_right_iff\"><span class=\"name\">IsCoprime</span>.<span class=\"name\">pow_right_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">m</span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L195-L198","name":"IsCoprime.pow_left_iff","line":195,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#IsCoprime.pow_left_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#IsCoprime.pow_left_iff\"><span class=\"name\">IsCoprime</span>.<span class=\"name\">pow_left_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">m</span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L192-L193","name":"IsCoprime.pow","line":192,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#IsCoprime.pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#IsCoprime.pow\"><span class=\"name\">IsCoprime</span>.<span class=\"name\">pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">m</span>)</span> <span class=\"fn\">(<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L188-L190","name":"IsCoprime.pow_right","line":188,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#IsCoprime.pow_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#IsCoprime.pow_right\"><span class=\"name\">IsCoprime</span>.<span class=\"name\">pow_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L184-L186","name":"IsCoprime.pow_left","line":184,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#IsCoprime.pow_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#IsCoprime.pow_left\"><span class=\"name\">IsCoprime</span>.<span class=\"name\">pow_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x y : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">m</span>)</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L171-L180","name":"pairwise_coprime_iff_coprime_prod","line":171,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#pairwise_coprime_iff_coprime_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#pairwise_coprime_iff_coprime_prod\"><span class=\"name\">pairwise_coprime_iff_coprime_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Pairwise\">Pairwise</a> <span class=\"fn\">(<span class=\"fn\">IsCoprime</span> <a href=\"./Mathlib/Logic/Function/Defs.html#Function.onFun\">on</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">{ <span class=\"fn\">x</span> : <span class=\"fn\">I</span> // <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">t</span></span> }</span>) =&gt; <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">↑<span class=\"fn\">i</span></span></span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">(<span class=\"fn\">s</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">(∏ <span class=\"fn\">j</span> ∈ <span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">{<span class=\"fn\">i</span>}</span></span>, <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">j</span></span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L165-L168","name":"exists_sum_eq_one_iff_pairwise_coprime'","line":165,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#exists_sum_eq_one_iff_pairwise_coprime'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#exists_sum_eq_one_iff_pairwise_coprime'\"><span class=\"name\">exists_sum_eq_one_iff_pairwise_coprime'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(∃ (<span class=\"fn\">μ</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">R</span></span>), <span class=\"fn\"><span class=\"fn\">∑ <span class=\"fn\">i</span> : <span class=\"fn\">I</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">∏ <span class=\"fn\">j</span> ∈ <span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">i</span>}</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span>, <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">j</span></span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Pairwise\">Pairwise</a> <span class=\"fn\">(<span class=\"fn\">IsCoprime</span> <a href=\"./Mathlib/Logic/Function/Defs.html#Function.onFun\">on</a> <span class=\"fn\">s</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L107-L163","name":"exists_sum_eq_one_iff_pairwise_coprime","line":107,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#exists_sum_eq_one_iff_pairwise_coprime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#exists_sum_eq_one_iff_pairwise_coprime\"><span class=\"name\">exists_sum_eq_one_iff_pairwise_coprime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">t</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(∃ (<span class=\"fn\">μ</span> : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">R</span></span>), <span class=\"fn\"><span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">∏ <span class=\"fn\">j</span> ∈ <span class=\"fn\"><span class=\"fn\">t</span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">{<span class=\"fn\">i</span>}</span></span>, <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">j</span></span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Pairwise\">Pairwise</a> <span class=\"fn\">(<span class=\"fn\">IsCoprime</span> <a href=\"./Mathlib/Logic/Function/Defs.html#Function.onFun\">on</a> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">{ <span class=\"fn\">x</span> : <span class=\"fn\">I</span> // <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">t</span></span> }</span>) =&gt; <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">↑<span class=\"fn\">i</span></span></span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L99-L101","name":"Fintype.prod_dvd_of_coprime","line":99,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#Fintype.prod_dvd_of_coprime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#Fintype.prod_dvd_of_coprime\"><span class=\"name\">Fintype</span>.<span class=\"name\">prod_dvd_of_coprime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> <span class=\"fn\">I</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(Hs : <span class=\"fn\"><a href=\"./Mathlib/Logic/Pairwise.html#Pairwise\">Pairwise</a> <span class=\"fn\">(<span class=\"fn\">IsCoprime</span> <a href=\"./Mathlib/Logic/Function/Defs.html#Function.onFun\">on</a> <span class=\"fn\">s</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Hs1 : <span class=\"fn\">∀ (<span class=\"fn\">i</span> : <span class=\"fn\">I</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">z</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">∏ <span class=\"fn\">x</span> : <span class=\"fn\">I</span>, <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">z</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L83-L97","name":"Finset.prod_dvd_of_coprime","line":83,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#Finset.prod_dvd_of_coprime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#Finset.prod_dvd_of_coprime\"><span class=\"name\">Finset</span>.<span class=\"name\">prod_dvd_of_coprime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{z : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">t</span>)</span>.Pairwise</span> <span class=\"fn\">(<span class=\"fn\">IsCoprime</span> <a href=\"./Mathlib/Logic/Function/Defs.html#Function.onFun\">on</a> <span class=\"fn\">s</span>)</span></span> → <span class=\"fn\"><span class=\"fn\">(∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">z</span></span>)</span> → <span class=\"fn\"><span class=\"fn\">∏ <span class=\"fn\">x</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">z</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L78-L80","name":"IsCoprime.of_prod_right","line":78,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#IsCoprime.of_prod_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#IsCoprime.of_prod_right\"><span class=\"name\">IsCoprime</span>.<span class=\"name\">of_prod_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H1 : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">x</span> <span class=\"fn\">(∏ <span class=\"fn\">i</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hit : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\">s</span> <span class=\"fn\">i</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L74-L76","name":"IsCoprime.of_prod_left","line":74,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#IsCoprime.of_prod_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#IsCoprime.of_prod_left\"><span class=\"name\">IsCoprime</span>.<span class=\"name\">of_prod_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H1 : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">(∏ <span class=\"fn\">i</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\">I</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hit : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">t</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">(<span class=\"fn\">s</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L71-L72","name":"IsCoprime.prod_right_iff","line":71,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#IsCoprime.prod_right_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#IsCoprime.prod_right_iff\"><span class=\"name\">IsCoprime</span>.<span class=\"name\">prod_right_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">x</span> <span class=\"fn\">(∏ <span class=\"fn\">i</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\">s</span> <span class=\"fn\">i</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L66-L69","name":"IsCoprime.prod_left_iff","line":66,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#IsCoprime.prod_left_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#IsCoprime.prod_left_iff\"><span class=\"name\">IsCoprime</span>.<span class=\"name\">prod_left_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">(∏ <span class=\"fn\">i</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">(<span class=\"fn\">s</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L63-L64","name":"IsCoprime.prod_right","line":63,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#IsCoprime.prod_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#IsCoprime.prod_right\"><span class=\"name\">IsCoprime</span>.<span class=\"name\">prod_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\">s</span> <span class=\"fn\">i</span>)</span></span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">x</span> <span class=\"fn\">(∏ <span class=\"fn\">i</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L56-L61","name":"IsCoprime.prod_left","line":56,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#IsCoprime.prod_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#IsCoprime.prod_left\"><span class=\"name\">IsCoprime</span>.<span class=\"name\">prod_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><span class=\"fn\">I</span> → <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{t : <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">I</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(∀ <span class=\"fn\">i</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">(<span class=\"fn\">s</span> <span class=\"fn\">i</span>)</span> <span class=\"fn\">x</span></span>)</span> → <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">(∏ <span class=\"fn\">i</span> ∈ <span class=\"fn\">t</span>, <span class=\"fn\"><span class=\"fn\">s</span> <span class=\"fn\">i</span></span>)</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L51-L54","name":"ne_zero_or_ne_zero_of_nat_coprime","line":51,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#ne_zero_or_ne_zero_of_nat_coprime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#ne_zero_or_ne_zero_of_nat_coprime\"><span class=\"name\">ne_zero_or_ne_zero_of_nat_coprime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{A : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.Coprime</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L45-L49","name":"Nat.Coprime.cast","line":45,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#Nat.Coprime.cast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#Nat.Coprime.cast\"><span class=\"name\">Nat</span>.<span class=\"name\">Coprime</span>.<span class=\"name\">cast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.Coprime</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L43-L43","name":"Nat.Coprime.isCoprime","line":43,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#Nat.Coprime.isCoprime","doc":"**Alias** of the reverse direction of `Nat.isCoprime_iff_coprime`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#Nat.Coprime.isCoprime\"><span class=\"name\">Nat</span>.<span class=\"name\">Coprime</span>.<span class=\"name\">isCoprime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.Coprime</span> <span class=\"fn\">n</span></span> → <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L43-L43","name":"IsCoprime.nat_coprime","line":43,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#IsCoprime.nat_coprime","doc":"**Alias** of the forward direction of `Nat.isCoprime_iff_coprime`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#IsCoprime.nat_coprime\"><span class=\"name\">IsCoprime</span>.<span class=\"name\">nat_coprime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.Coprime</span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L40-L41","name":"Nat.isCoprime_iff_coprime","line":40,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#Nat.isCoprime_iff_coprime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#Nat.isCoprime_iff_coprime\"><span class=\"name\">Nat</span>.<span class=\"name\">isCoprime_iff_coprime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">↑<span class=\"fn\">m</span></span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.Coprime</span> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/Coprime/Lemmas.lean#L31-L38","name":"Int.isCoprime_iff_gcd_eq_one","line":31,"kind":"theorem","docLink":"./Mathlib/RingTheory/Coprime/Lemmas.html#Int.isCoprime_iff_gcd_eq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/Coprime/Lemmas.html#Int.isCoprime_iff_gcd_eq_one\"><span class=\"name\">Int</span>.<span class=\"name\">isCoprime_iff_gcd_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m n : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.gcd</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></div></div>"}]}