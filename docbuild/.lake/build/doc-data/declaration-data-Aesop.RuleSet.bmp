{"name":"Aesop.RuleSet","instances":[{"typeNames":["Aesop.BaseRuleSet"],"name":"Aesop.instInhabitedBaseRuleSet","className":"Inhabited"},{"typeNames":["Aesop.GlobalRuleSet"],"name":"Aesop.instInhabitedGlobalRuleSet","className":"Inhabited"},{"typeNames":["Aesop.BaseRuleSet"],"name":"Aesop.instEmptyCollectionBaseRuleSet","className":"EmptyCollection"},{"typeNames":["Aesop.GlobalRuleSet"],"name":"Aesop.instEmptyCollectionGlobalRuleSet","className":"EmptyCollection"},{"typeNames":["Aesop.LocalRuleSet"],"name":"Aesop.instEmptyCollectionLocalRuleSet","className":"EmptyCollection"},{"typeNames":["Aesop.LocalRuleSet"],"name":"Aesop.instInhabitedLocalRuleSet","className":"Inhabited"}],"imports":["Init","Aesop.Index","Aesop.RuleSet.Filter","Aesop.RuleSet.Member"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L443-L477","name":"Aesop.mkLocalRuleSet","line":443,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.mkLocalRuleSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.mkLocalRuleSet\"><span class=\"name\">Aesop</span>.<span class=\"name\">mkLocalRuleSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rss : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet\">Aesop.GlobalRuleSet</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(options : <a href=\"./Aesop/Options/Internal.html#Aesop.Options'\">Aesop.Options'</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L436-L441","name":"Aesop.unindexPredicate?","line":436,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.unindexPredicate?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.unindexPredicate?\"><span class=\"name\">Aesop</span>.<span class=\"name\">unindexPredicate?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(options : <a href=\"./Aesop/Options/Internal.html#Aesop.Options'\">Aesop.Options'</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">Aesop.RuleName</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L426-L431","name":"Aesop.LocalRuleSet.unindex","line":426,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.LocalRuleSet.unindex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet.unindex\"><span class=\"name\">Aesop</span>.<span class=\"name\">LocalRuleSet</span>.<span class=\"name\">unindex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rs : <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">Aesop.RuleName</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L421-L424","name":"Aesop.LocalRuleSet.applicableSafeRules","line":421,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.LocalRuleSet.applicableSafeRules","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet.applicableSafeRules\"><span class=\"name\">Aesop</span>.<span class=\"name\">LocalRuleSet</span>.<span class=\"name\">applicableSafeRules</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rs : <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Aesop/Index/Basic.html#Aesop.IndexMatchResult\">Aesop.IndexMatchResult</a> <a href=\"./Aesop/Rule.html#Aesop.SafeRule\">Aesop.SafeRule</a>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L416-L419","name":"Aesop.LocalRuleSet.applicableSafeRulesWith","line":416,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.LocalRuleSet.applicableSafeRulesWith","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet.applicableSafeRulesWith\"><span class=\"name\">Aesop</span>.<span class=\"name\">LocalRuleSet</span>.<span class=\"name\">applicableSafeRulesWith</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rs : <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(include? : <span class=\"fn\"><a href=\"./Aesop/Rule.html#Aesop.SafeRule\">Aesop.SafeRule</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Aesop/Index/Basic.html#Aesop.IndexMatchResult\">Aesop.IndexMatchResult</a> <span class=\"fn\">(<a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Aesop.Rule</a> <a href=\"./Aesop/Rule.html#Aesop.SafeRuleInfo\">Aesop.SafeRuleInfo</a>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L411-L414","name":"Aesop.LocalRuleSet.applicableUnsafeRules","line":411,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.LocalRuleSet.applicableUnsafeRules","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet.applicableUnsafeRules\"><span class=\"name\">Aesop</span>.<span class=\"name\">LocalRuleSet</span>.<span class=\"name\">applicableUnsafeRules</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rs : <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Aesop/Index/Basic.html#Aesop.IndexMatchResult\">Aesop.IndexMatchResult</a> <a href=\"./Aesop/Rule.html#Aesop.UnsafeRule\">Aesop.UnsafeRule</a>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L405-L409","name":"Aesop.LocalRuleSet.applicableUnsafeRulesWith","line":405,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.LocalRuleSet.applicableUnsafeRulesWith","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet.applicableUnsafeRulesWith\"><span class=\"name\">Aesop</span>.<span class=\"name\">LocalRuleSet</span>.<span class=\"name\">applicableUnsafeRulesWith</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rs : <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(include? : <span class=\"fn\"><a href=\"./Aesop/Rule.html#Aesop.UnsafeRule\">Aesop.UnsafeRule</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Aesop/Index/Basic.html#Aesop.IndexMatchResult\">Aesop.IndexMatchResult</a> <a href=\"./Aesop/Rule.html#Aesop.UnsafeRule\">Aesop.UnsafeRule</a>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L400-L403","name":"Aesop.LocalRuleSet.applicableNormalizationRules","line":400,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.LocalRuleSet.applicableNormalizationRules","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet.applicableNormalizationRules\"><span class=\"name\">Aesop</span>.<span class=\"name\">LocalRuleSet</span>.<span class=\"name\">applicableNormalizationRules</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rs : <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Aesop/Index/Basic.html#Aesop.IndexMatchResult\">Aesop.IndexMatchResult</a> <a href=\"./Aesop/Rule.html#Aesop.NormRule\">Aesop.NormRule</a>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L395-L398","name":"Aesop.LocalRuleSet.applicableNormalizationRulesWith","line":395,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.LocalRuleSet.applicableNormalizationRulesWith","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet.applicableNormalizationRulesWith\"><span class=\"name\">Aesop</span>.<span class=\"name\">LocalRuleSet</span>.<span class=\"name\">applicableNormalizationRulesWith</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rs : <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(include? : <span class=\"fn\"><a href=\"./Aesop/Rule.html#Aesop.NormRule\">Aesop.NormRule</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Aesop/Index/Basic.html#Aesop.IndexMatchResult\">Aesop.IndexMatchResult</a> <a href=\"./Aesop/Rule.html#Aesop.NormRule\">Aesop.NormRule</a>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L361-L390","name":"Aesop.LocalRuleSet.erase","line":361,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.LocalRuleSet.erase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet.erase\"><span class=\"name\">Aesop</span>.<span class=\"name\">LocalRuleSet</span>.<span class=\"name\">erase</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rs : <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Aesop/RuleSet/Filter.html#Aesop.RuleFilter\">Aesop.RuleFilter</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L352-L359","name":"Aesop.GlobalRuleSet.erase","line":352,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.GlobalRuleSet.erase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet.erase\"><span class=\"name\">Aesop</span>.<span class=\"name\">GlobalRuleSet</span>.<span class=\"name\">erase</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rs : <a href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet\">Aesop.GlobalRuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Aesop/RuleSet/Filter.html#Aesop.RuleFilter\">Aesop.RuleFilter</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet\">Aesop.GlobalRuleSet</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L326-L350","name":"Aesop.BaseRuleSet.erase","line":326,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.BaseRuleSet.erase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet.erase\"><span class=\"name\">Aesop</span>.<span class=\"name\">BaseRuleSet</span>.<span class=\"name\">erase</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rs : <a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Aesop/RuleSet/Filter.html#Aesop.RuleFilter\">Aesop.RuleFilter</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L310-L323","name":"Aesop.LocalRuleSet.add","line":310,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.LocalRuleSet.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet.add\"><span class=\"name\">Aesop</span>.<span class=\"name\">LocalRuleSet</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rs : <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/RuleSet/Member.html#Aesop.LocalRuleSetMember\">Aesop.LocalRuleSetMember</a> → <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L291-L308","name":"Aesop.BaseRuleSet.add","line":291,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.BaseRuleSet.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet.add\"><span class=\"name\">Aesop</span>.<span class=\"name\">BaseRuleSet</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rs : <a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Aesop/RuleSet/Member.html#Aesop.BaseRuleSetMember\">Aesop.BaseRuleSetMember</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L269-L288","name":"Aesop.BaseRuleSet.merge","line":269,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.BaseRuleSet.merge","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet.merge\"><span class=\"name\">Aesop</span>.<span class=\"name\">BaseRuleSet</span>.<span class=\"name\">merge</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rs₁ rs₂ : <a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L261-L266","name":"Aesop.LocalRuleSet.contains","line":261,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.LocalRuleSet.contains","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet.contains\"><span class=\"name\">Aesop</span>.<span class=\"name\">LocalRuleSet</span>.<span class=\"name\">contains</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rs : <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">Aesop.RuleName</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L256-L259","name":"Aesop.LocalRuleSet.containsGlobalSimpTheorem","line":256,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.LocalRuleSet.containsGlobalSimpTheorem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet.containsGlobalSimpTheorem\"><span class=\"name\">Aesop</span>.<span class=\"name\">LocalRuleSet</span>.<span class=\"name\">containsGlobalSimpTheorem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rs : <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L251-L254","name":"Aesop.GlobalRuleSet.contains","line":251,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.GlobalRuleSet.contains","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet.contains\"><span class=\"name\">Aesop</span>.<span class=\"name\">GlobalRuleSet</span>.<span class=\"name\">contains</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rs : <a href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet\">Aesop.GlobalRuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">Aesop.RuleName</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L244-L249","name":"Aesop.BaseRuleSet.contains","line":244,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.BaseRuleSet.contains","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet.contains\"><span class=\"name\">Aesop</span>.<span class=\"name\">BaseRuleSet</span>.<span class=\"name\">contains</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rs : <a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">Aesop.RuleName</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L237-L238","name":"Aesop.instInhabitedLocalRuleSet","line":237,"kind":"instance","docLink":"./Aesop/RuleSet.html#Aesop.instInhabitedLocalRuleSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.instInhabitedLocalRuleSet\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedLocalRuleSet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L234-L235","name":"Aesop.instEmptyCollectionLocalRuleSet","line":234,"kind":"instance","docLink":"./Aesop/RuleSet.html#Aesop.instEmptyCollectionLocalRuleSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.instEmptyCollectionLocalRuleSet\"><span class=\"name\">Aesop</span>.<span class=\"name\">instEmptyCollectionLocalRuleSet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L226-L232","name":"Aesop.LocalRuleSet.empty","line":226,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.LocalRuleSet.empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet.empty\"><span class=\"name\">Aesop</span>.<span class=\"name\">LocalRuleSet</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L223-L224","name":"Aesop.instEmptyCollectionGlobalRuleSet","line":223,"kind":"instance","docLink":"./Aesop/RuleSet.html#Aesop.instEmptyCollectionGlobalRuleSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.instEmptyCollectionGlobalRuleSet\"><span class=\"name\">Aesop</span>.<span class=\"name\">instEmptyCollectionGlobalRuleSet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <a href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet\">Aesop.GlobalRuleSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L218-L221","name":"Aesop.GlobalRuleSet.empty","line":218,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.GlobalRuleSet.empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet.empty\"><span class=\"name\">Aesop</span>.<span class=\"name\">GlobalRuleSet</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet\">Aesop.GlobalRuleSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L215-L216","name":"Aesop.instEmptyCollectionBaseRuleSet","line":215,"kind":"instance","docLink":"./Aesop/RuleSet.html#Aesop.instEmptyCollectionBaseRuleSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.instEmptyCollectionBaseRuleSet\"><span class=\"name\">Aesop</span>.<span class=\"name\">instEmptyCollectionBaseRuleSet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L207-L213","name":"Aesop.BaseRuleSet.empty","line":207,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.BaseRuleSet.empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet.empty\"><span class=\"name\">Aesop</span>.<span class=\"name\">BaseRuleSet</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L202-L204","name":"Aesop.LocalRuleSet.trace.printSimpSetName","line":202,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.LocalRuleSet.trace.printSimpSetName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet.trace.printSimpSetName\"><span class=\"name\">Aesop</span>.<span class=\"name\">LocalRuleSet</span>.<span class=\"name\">trace</span>.<span class=\"name\">printSimpSetName</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> → <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L190-L204","name":"Aesop.LocalRuleSet.trace","line":190,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.LocalRuleSet.trace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet.trace\"><span class=\"name\">Aesop</span>.<span class=\"name\">LocalRuleSet</span>.<span class=\"name\">trace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rs : <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(traceOpt : <a href=\"./Aesop/Tracing.html#Aesop.TraceOption\">Aesop.TraceOption</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L181-L187","name":"Aesop.GlobalRuleSet.trace","line":181,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.GlobalRuleSet.trace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet.trace\"><span class=\"name\">Aesop</span>.<span class=\"name\">GlobalRuleSet</span>.<span class=\"name\">trace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rs : <a href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet\">Aesop.GlobalRuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(traceOpt : <a href=\"./Aesop/Tracing.html#Aesop.TraceOption\">Aesop.TraceOption</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L161-L179","name":"Aesop.BaseRuleSet.trace","line":161,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.BaseRuleSet.trace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet.trace\"><span class=\"name\">Aesop</span>.<span class=\"name\">BaseRuleSet</span>.<span class=\"name\">trace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(rs : <a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(traceOpt : <a href=\"./Aesop/Tracing.html#Aesop.TraceOption\">Aesop.TraceOption</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L154-L156","name":"Aesop.LocalRuleSet.modifyBase","line":154,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.LocalRuleSet.modifyBase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet.modifyBase\"><span class=\"name\">Aesop</span>.<span class=\"name\">LocalRuleSet</span>.<span class=\"name\">modifyBase</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a> → <a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rs : <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L150-L152","name":"Aesop.LocalRuleSet.modifyBaseM","line":150,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.LocalRuleSet.modifyBaseM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet.modifyBaseM\"><span class=\"name\">Aesop</span>.<span class=\"name\">LocalRuleSet</span>.<span class=\"name\">modifyBaseM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rs : <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L145-L148","name":"Aesop.LocalRuleSet.onBase","line":145,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.LocalRuleSet.onBase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet.onBase\"><span class=\"name\">Aesop</span>.<span class=\"name\">LocalRuleSet</span>.<span class=\"name\">onBase</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a> → <span class=\"fn\"><a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rs : <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L139-L143","name":"Aesop.LocalRuleSet.onBaseM","line":139,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.LocalRuleSet.onBaseM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet.onBaseM\"><span class=\"name\">Aesop</span>.<span class=\"name\">LocalRuleSet</span>.<span class=\"name\">onBaseM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rs : <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L129-L132","name":"Aesop.GlobalRuleSet.modifyBase","line":129,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.GlobalRuleSet.modifyBase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet.modifyBase\"><span class=\"name\">Aesop</span>.<span class=\"name\">GlobalRuleSet</span>.<span class=\"name\">modifyBase</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a> → <a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rs : <a href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet\">Aesop.GlobalRuleSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet\">Aesop.GlobalRuleSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L124-L127","name":"Aesop.GlobalRuleSet.modifyBaseM","line":124,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.GlobalRuleSet.modifyBaseM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet.modifyBaseM\"><span class=\"name\">Aesop</span>.<span class=\"name\">GlobalRuleSet</span>.<span class=\"name\">modifyBaseM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rs : <a href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet\">Aesop.GlobalRuleSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet\">Aesop.GlobalRuleSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L119-L122","name":"Aesop.GlobalRuleSet.onBase","line":119,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.GlobalRuleSet.onBase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet.onBase\"><span class=\"name\">Aesop</span>.<span class=\"name\">GlobalRuleSet</span>.<span class=\"name\">onBase</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a> → <span class=\"fn\"><a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rs : <a href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet\">Aesop.GlobalRuleSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet\">Aesop.GlobalRuleSet</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L112-L117","name":"Aesop.GlobalRuleSet.onBaseM","line":112,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.GlobalRuleSet.onBaseM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet.onBaseM\"><span class=\"name\">Aesop</span>.<span class=\"name\">GlobalRuleSet</span>.<span class=\"name\">onBaseM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rs : <a href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet\">Aesop.GlobalRuleSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet\">Aesop.GlobalRuleSet</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L105-L105","name":"Aesop.LocalRuleSet.localNormSimpRules","line":105,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.LocalRuleSet.localNormSimpRules","doc":"FVars that were explicitly added as simp rules.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet.localNormSimpRules\"><span class=\"name\">Aesop</span>.<span class=\"name\">LocalRuleSet</span>.<span class=\"name\">localNormSimpRules</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Rule.html#Aesop.LocalNormSimpRule\">Aesop.LocalNormSimpRule</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L101-L101","name":"Aesop.LocalRuleSet.simprocsArrayNonempty","line":101,"kind":"theorem","docLink":"./Aesop/RuleSet.html#Aesop.LocalRuleSet.simprocsArrayNonempty","doc":"The simprocs array must contain at least one `Simprocs` structure, for the\nsame reason as above.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet.simprocsArrayNonempty\"><span class=\"name\">Aesop</span>.<span class=\"name\">LocalRuleSet</span>.<span class=\"name\">simprocsArrayNonempty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.simprocsArray</span>.size</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L96-L96","name":"Aesop.LocalRuleSet.simprocsArray","line":96,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.LocalRuleSet.simprocsArray","doc":"The simprocs used by the builtin norm simp rule.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet.simprocsArray\"><span class=\"name\">Aesop</span>.<span class=\"name\">LocalRuleSet</span>.<span class=\"name\">simprocsArray</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simprocs\">Lean.Meta.Simprocs</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L92-L92","name":"Aesop.LocalRuleSet.simpTheoremsArrayNonempty","line":92,"kind":"theorem","docLink":"./Aesop/RuleSet.html#Aesop.LocalRuleSet.simpTheoremsArrayNonempty","doc":"The simp theorems array must contain at least one `SimpTheorems` structure.\nWhen a simp theorem is added to a `LocalRuleSet`, it is stored in this first\n`SimpTheorems` structure.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet.simpTheoremsArrayNonempty\"><span class=\"name\">Aesop</span>.<span class=\"name\">LocalRuleSet</span>.<span class=\"name\">simpTheoremsArrayNonempty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">self</span>.simpTheoremsArray</span>.size</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L86-L86","name":"Aesop.LocalRuleSet.simpTheoremsArray","line":86,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.LocalRuleSet.simpTheoremsArray","doc":"The simp theorems used by the builtin norm simp rule.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet.simpTheoremsArray\"><span class=\"name\">Aesop</span>.<span class=\"name\">LocalRuleSet</span>.<span class=\"name\">simpTheoremsArray</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems\">Lean.Meta.SimpTheorems</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L82-L82","name":"Aesop.LocalRuleSet.mk","line":82,"kind":"ctor","docLink":"./Aesop/RuleSet.html#Aesop.LocalRuleSet.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">LocalRuleSet</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toBaseRuleSet : <a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(simpTheoremsArray : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems\">Lean.Meta.SimpTheorems</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(simpTheoremsArrayNonempty : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">simpTheoremsArray</span>.size</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(simprocsArray : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simprocs\">Lean.Meta.Simprocs</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(simprocsArrayNonempty : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">simprocsArray</span>.size</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(localNormSimpRules : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Rule.html#Aesop.LocalNormSimpRule\">Aesop.LocalNormSimpRule</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\">Aesop.LocalRuleSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L77-L105","name":"Aesop.LocalRuleSet","line":77,"kind":"structure","docLink":"./Aesop/RuleSet.html#Aesop.LocalRuleSet","doc":"The rule set used by an Aesop tactic call. A local rule set is produced by\ncombining several global rule sets and possibly adding or erasing some\nindividual rules.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.LocalRuleSet\"><span class=\"name\">Aesop</span>.<span class=\"name\">LocalRuleSet</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L75-L75","name":"Aesop.instInhabitedGlobalRuleSet","line":75,"kind":"instance","docLink":"./Aesop/RuleSet.html#Aesop.instInhabitedGlobalRuleSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.instInhabitedGlobalRuleSet\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedGlobalRuleSet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet\">Aesop.GlobalRuleSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L74-L74","name":"Aesop.GlobalRuleSet.simprocs","line":74,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.GlobalRuleSet.simprocs","doc":"The simprocs stored in this rule set.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet.simprocs\"><span class=\"name\">Aesop</span>.<span class=\"name\">GlobalRuleSet</span>.<span class=\"name\">simprocs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet\">Aesop.GlobalRuleSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simprocs\">Lean.Meta.Simprocs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L70-L70","name":"Aesop.GlobalRuleSet.simpTheorems","line":70,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.GlobalRuleSet.simpTheorems","doc":"The simp theorems stored in this rule set.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet.simpTheorems\"><span class=\"name\">Aesop</span>.<span class=\"name\">GlobalRuleSet</span>.<span class=\"name\">simpTheorems</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet\">Aesop.GlobalRuleSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems\">Lean.Meta.SimpTheorems</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L66-L66","name":"Aesop.GlobalRuleSet.mk","line":66,"kind":"ctor","docLink":"./Aesop/RuleSet.html#Aesop.GlobalRuleSet.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">GlobalRuleSet</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toBaseRuleSet : <a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(simpTheorems : <a href=\"./Lean/Meta/Tactic/Simp/SimpTheorems.html#Lean.Meta.SimpTheorems\">Lean.Meta.SimpTheorems</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(simprocs : <a href=\"./Lean/Meta/Tactic/Simp/Types.html#Lean.Meta.Simp.Simprocs\">Lean.Meta.Simprocs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet\">Aesop.GlobalRuleSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L60-L75","name":"Aesop.GlobalRuleSet","line":60,"kind":"structure","docLink":"./Aesop/RuleSet.html#Aesop.GlobalRuleSet","doc":"A global Aesop rule set. When we tag a declaration with `@[aesop]`, it is stored\nin one or more of these rule sets. Internally, a `GlobalRuleSet` is composed of\na `BaseRuleSet` (stored in an Aesop rule set extension) plus a set of simp\ntheorems (stored in a `SimpExtension`).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.GlobalRuleSet\"><span class=\"name\">Aesop</span>.<span class=\"name\">GlobalRuleSet</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L58-L58","name":"Aesop.instInhabitedBaseRuleSet","line":58,"kind":"instance","docLink":"./Aesop/RuleSet.html#Aesop.instInhabitedBaseRuleSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.instInhabitedBaseRuleSet\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedBaseRuleSet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L57-L57","name":"Aesop.BaseRuleSet.ruleNames","line":57,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.BaseRuleSet.ruleNames","doc":"A cache of the names of all rules registered in this rule set. Invariant:\n`ruleNames` contains exactly the names of the rules present in `normRules`,\n`unsafeRules`, `safeRules` and `unfoldRules` and not present in `erased`. We\nuse this cache (a) to quickly determine whether a rule is present in the rule\nset and (b) to find the full rule names associated with the fvar or const\nidentified by a name.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet.ruleNames\"><span class=\"name\">Aesop</span>.<span class=\"name\">BaseRuleSet</span>.<span class=\"name\">ruleNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PHashMap\">Lean.PHashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <span class=\"fn\">(<a href=\"./Aesop/Util/UnorderedArraySet.html#Aesop.UnorderedArraySet\">Aesop.UnorderedArraySet</a> <a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">Aesop.RuleName</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L48-L48","name":"Aesop.BaseRuleSet.erased","line":48,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.BaseRuleSet.erased","doc":"The set of rules that were erased from `normRules`, `unsafeRules` and\n`safeRules`. When we erase a rule which is present in any of these three\nindices, the rule is not removed from the indices but just added to this set.\nBy contrast, when we erase a rule from `unfoldRules`, we actually delete it.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet.erased\"><span class=\"name\">Aesop</span>.<span class=\"name\">BaseRuleSet</span>.<span class=\"name\">erased</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">Lean.PHashSet</a> <a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">Aesop.RuleName</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L41-L41","name":"Aesop.BaseRuleSet.unfoldRules","line":41,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.BaseRuleSet.unfoldRules","doc":"Rules for the builtin unfold rule. A pair `(decl, unfoldThm?)` in this map\nrepresents a declaration `decl` which should be unfolded. `unfoldThm?` should\nbe the output of `getUnfoldEqnFor? decl` and is cached here for efficiency.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet.unfoldRules\"><span class=\"name\">Aesop</span>.<span class=\"name\">BaseRuleSet</span>.<span class=\"name\">unfoldRules</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PHashMap\">Lean.PHashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L35-L35","name":"Aesop.BaseRuleSet.safeRules","line":35,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.BaseRuleSet.safeRules","doc":"Safe rules registered in this rule set.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet.safeRules\"><span class=\"name\">Aesop</span>.<span class=\"name\">BaseRuleSet</span>.<span class=\"name\">safeRules</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Index.html#Aesop.Index\">Aesop.Index</a> <a href=\"./Aesop/Rule.html#Aesop.SafeRuleInfo\">Aesop.SafeRuleInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L31-L31","name":"Aesop.BaseRuleSet.unsafeRules","line":31,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.BaseRuleSet.unsafeRules","doc":"Unsafe rules registered in this rule set.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet.unsafeRules\"><span class=\"name\">Aesop</span>.<span class=\"name\">BaseRuleSet</span>.<span class=\"name\">unsafeRules</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Index.html#Aesop.Index\">Aesop.Index</a> <a href=\"./Aesop/Rule.html#Aesop.UnsafeRuleInfo\">Aesop.UnsafeRuleInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L27-L27","name":"Aesop.BaseRuleSet.normRules","line":27,"kind":"def","docLink":"./Aesop/RuleSet.html#Aesop.BaseRuleSet.normRules","doc":"Normalisation rules registered in this rule set.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet.normRules\"><span class=\"name\">Aesop</span>.<span class=\"name\">BaseRuleSet</span>.<span class=\"name\">normRules</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Index.html#Aesop.Index\">Aesop.Index</a> <a href=\"./Aesop/Rule.html#Aesop.NormRuleInfo\">Aesop.NormRuleInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L23-L23","name":"Aesop.BaseRuleSet.mk","line":23,"kind":"ctor","docLink":"./Aesop/RuleSet.html#Aesop.BaseRuleSet.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">BaseRuleSet</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(normRules : <span class=\"fn\"><a href=\"./Aesop/Index.html#Aesop.Index\">Aesop.Index</a> <a href=\"./Aesop/Rule.html#Aesop.NormRuleInfo\">Aesop.NormRuleInfo</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(unsafeRules : <span class=\"fn\"><a href=\"./Aesop/Index.html#Aesop.Index\">Aesop.Index</a> <a href=\"./Aesop/Rule.html#Aesop.UnsafeRuleInfo\">Aesop.UnsafeRuleInfo</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(safeRules : <span class=\"fn\"><a href=\"./Aesop/Index.html#Aesop.Index\">Aesop.Index</a> <a href=\"./Aesop/Rule.html#Aesop.SafeRuleInfo\">Aesop.SafeRuleInfo</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(unfoldRules : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PHashMap\">Lean.PHashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(erased : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashSet.html#Lean.PHashSet\">Lean.PHashSet</a> <a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">Aesop.RuleName</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ruleNames : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PHashMap\">Lean.PHashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <span class=\"fn\">(<a href=\"./Aesop/Util/UnorderedArraySet.html#Aesop.UnorderedArraySet\">Aesop.UnorderedArraySet</a> <a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">Aesop.RuleName</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\">Aesop.BaseRuleSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/RuleSet.lean#L18-L58","name":"Aesop.BaseRuleSet","line":18,"kind":"structure","docLink":"./Aesop/RuleSet.html#Aesop.BaseRuleSet","doc":"The Aesop-specific parts of an Aesop rule set. A `BaseRuleSet` stores global\nAesop rules, e.g. safe and unsafe rules. It does not store simp theorems for\nthe builtin norm simp rule; these are instead stored in a simp extension.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/RuleSet.html#Aesop.BaseRuleSet\"><span class=\"name\">Aesop</span>.<span class=\"name\">BaseRuleSet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}