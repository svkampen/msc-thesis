{"name":"Mathlib.Data.Multiset.NatAntidiagonal","instances":[],"imports":["Init","Mathlib.Data.Multiset.Nodup","Mathlib.Data.List.NatAntidiagonal"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Data/Multiset/NatAntidiagonal.lean#L67-L68","name":"Multiset.Nat.map_swap_antidiagonal","line":67,"kind":"theorem","docLink":"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.map_swap_antidiagonal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.map_swap_antidiagonal\"><span class=\"name\">Multiset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">map_swap_antidiagonal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.map\">Multiset.map</a> <span class=\"fn\">Prod.swap</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.antidiagonal\">Multiset.Nat.antidiagonal</a> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.antidiagonal\">Multiset.Nat.antidiagonal</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Data/Multiset/NatAntidiagonal.lean#L61-L65","name":"Multiset.Nat.antidiagonal_succ_succ'","line":61,"kind":"theorem","docLink":"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.antidiagonal_succ_succ'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.antidiagonal_succ_succ'\"><span class=\"name\">Multiset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonal_succ_succ'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.antidiagonal\">Multiset.Nat.antidiagonal</a> <span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span>)</span> <a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.cons\">::ₘ</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">2</span></span>, <span class=\"fn\">0</span>)</span> <a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.cons\">::ₘ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.map\">Multiset.map</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Prod.map\">Prod.map</a> <a href=\"./Init/Prelude.html#Nat.succ\">Nat.succ</a> <a href=\"./Init/Prelude.html#Nat.succ\">Nat.succ</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.antidiagonal\">Multiset.Nat.antidiagonal</a> <span class=\"fn\">n</span>)</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Data/Multiset/NatAntidiagonal.lean#L56-L59","name":"Multiset.Nat.antidiagonal_succ'","line":56,"kind":"theorem","docLink":"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.antidiagonal_succ'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.antidiagonal_succ'\"><span class=\"name\">Multiset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonal_succ'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.antidiagonal\">Multiset.Nat.antidiagonal</a> <span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>, <span class=\"fn\">0</span>)</span> <a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.cons\">::ₘ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.map\">Multiset.map</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Prod.map\">Prod.map</a> <span class=\"fn\">id</span> <a href=\"./Init/Prelude.html#Nat.succ\">Nat.succ</a>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.antidiagonal\">Multiset.Nat.antidiagonal</a> <span class=\"fn\">n</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Data/Multiset/NatAntidiagonal.lean#L51-L54","name":"Multiset.Nat.antidiagonal_succ","line":51,"kind":"theorem","docLink":"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.antidiagonal_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.antidiagonal_succ\"><span class=\"name\">Multiset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonal_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.antidiagonal\">Multiset.Nat.antidiagonal</a> <span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">0</span>, <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>)</span> <a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.cons\">::ₘ</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.map\">Multiset.map</a> <span class=\"fn\">(<a href=\"./Init/Core.html#Prod.map\">Prod.map</a> <a href=\"./Init/Prelude.html#Nat.succ\">Nat.succ</a> <span class=\"fn\">id</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.antidiagonal\">Multiset.Nat.antidiagonal</a> <span class=\"fn\">n</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Data/Multiset/NatAntidiagonal.lean#L46-L49","name":"Multiset.Nat.nodup_antidiagonal","line":46,"kind":"theorem","docLink":"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.nodup_antidiagonal","doc":"The antidiagonal of `n` does not contain duplicate entries. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.nodup_antidiagonal\"><span class=\"name\">Multiset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">nodup_antidiagonal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.antidiagonal\">Multiset.Nat.antidiagonal</a> <span class=\"fn\">n</span>)</span>.Nodup</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Data/Multiset/NatAntidiagonal.lean#L41-L44","name":"Multiset.Nat.antidiagonal_zero","line":41,"kind":"theorem","docLink":"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.antidiagonal_zero","doc":"The antidiagonal of `0` is the list `[(0, 0)]` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.antidiagonal_zero\"><span class=\"name\">Multiset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonal_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.antidiagonal\">Multiset.Nat.antidiagonal</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">(<span class=\"fn\">0</span>, <span class=\"fn\">0</span>)</span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Data/Multiset/NatAntidiagonal.lean#L36-L39","name":"Multiset.Nat.card_antidiagonal","line":36,"kind":"theorem","docLink":"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.card_antidiagonal","doc":"The cardinality of the antidiagonal of `n` is `n+1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.card_antidiagonal\"><span class=\"name\">Multiset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">card_antidiagonal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Multiset.card</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.antidiagonal\">Multiset.Nat.antidiagonal</a> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Data/Multiset/NatAntidiagonal.lean#L31-L34","name":"Multiset.Nat.mem_antidiagonal","line":31,"kind":"theorem","docLink":"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.mem_antidiagonal","doc":"A pair (i, j) is contained in the antidiagonal of `n` if and only if `i + j = n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.mem_antidiagonal\"><span class=\"name\">Multiset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">mem_antidiagonal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.antidiagonal\">Multiset.Nat.antidiagonal</a> <span class=\"fn\">n</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.1</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">x</span>.2</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Data/Multiset/NatAntidiagonal.lean#L26-L29","name":"Multiset.Nat.antidiagonal","line":26,"kind":"def","docLink":"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.antidiagonal","doc":"The antidiagonal of a natural number `n` is\nthe multiset of pairs `(i, j)` such that `i + j = n`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Data/Multiset/NatAntidiagonal.html#Multiset.Nat.antidiagonal\"><span class=\"name\">Multiset</span>.<span class=\"name\">Nat</span>.<span class=\"name\">antidiagonal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset\">Multiset</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Nat\">ℕ</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span></div></div>"}]}