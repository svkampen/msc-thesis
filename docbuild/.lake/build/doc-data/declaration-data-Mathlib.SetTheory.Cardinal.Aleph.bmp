{"name":"Mathlib.SetTheory.Cardinal.Aleph","instances":[{"typeNames":["Ordinal.toType"],"name":"Cardinal.nonempty_toType_aleph","className":"Nonempty"}],"imports":["Init","Mathlib.Order.Bounded","Mathlib.SetTheory.Cardinal.PartENat","Mathlib.SetTheory.Ordinal.Enum"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L744-L746","name":"Cardinal.beth_normal","line":744,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_normal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_normal\"><span class=\"name\">Cardinal</span>.<span class=\"name\">beth_normal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">Ordinal.IsNormal</a> <span class=\"fn\">fun (<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) =&gt; <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">Cardinal.beth</a> <span class=\"fn\">o</span>)</span>.ord</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L738-L742","name":"Cardinal.isNormal_beth","line":738,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.isNormal_beth","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.isNormal_beth\"><span class=\"name\">Cardinal</span>.<span class=\"name\">isNormal_beth</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">Ordinal.IsNormal</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">Cardinal.beth</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L735-L736","name":"Cardinal.beth_ne_zero","line":735,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_ne_zero\"><span class=\"name\">Cardinal</span>.<span class=\"name\">beth_ne_zero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">Cardinal.beth</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L732-L733","name":"Cardinal.beth_pos","line":732,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_pos\"><span class=\"name\">Cardinal</span>.<span class=\"name\">beth_pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">Cardinal.beth</a> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L729-L730","name":"Cardinal.aleph0_le_beth","line":729,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph0_le_beth","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph0_le_beth\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph0_le_beth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">Cardinal.beth</a> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L719-L727","name":"Cardinal.aleph_le_beth","line":719,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_le_beth","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_le_beth\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph_le_beth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">Cardinal.beth</a> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L715-L717","name":"Cardinal.beth_le","line":715,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_le\"><span class=\"name\">Cardinal</span>.<span class=\"name\">beth_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o₁ o₂ : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">Cardinal.beth</a> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">Cardinal.beth</a> <span class=\"fn\">o₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L711-L713","name":"Cardinal.beth_lt","line":711,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_lt\"><span class=\"name\">Cardinal</span>.<span class=\"name\">beth_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o₁ o₂ : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">Cardinal.beth</a> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">Cardinal.beth</a> <span class=\"fn\">o₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L708-L709","name":"Cardinal.beth_mono","line":708,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_mono\"><span class=\"name\">Cardinal</span>.<span class=\"name\">beth_mono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#Monotone\">Monotone</a> <a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">Cardinal.beth</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L692-L706","name":"Cardinal.beth_strictMono","line":692,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_strictMono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_strictMono\"><span class=\"name\">Cardinal</span>.<span class=\"name\">beth_strictMono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#StrictMono\">StrictMono</a> <a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">Cardinal.beth</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L689-L690","name":"Cardinal.beth_limit","line":689,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_limit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_limit\"><span class=\"name\">Cardinal</span>.<span class=\"name\">beth_limit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">o</span>.IsLimit</span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">Cardinal.beth</a> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span>)</span></span>), <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">Cardinal.beth</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L685-L687","name":"Cardinal.beth_succ","line":685,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_succ\"><span class=\"name\">Cardinal</span>.<span class=\"name\">beth_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">Cardinal.beth</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">o</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">2</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">Cardinal.beth</a> <span class=\"fn\">o</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L681-L683","name":"Cardinal.beth_zero","line":681,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth_zero\"><span class=\"name\">Cardinal</span>.<span class=\"name\">beth_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\">Cardinal.beth</a> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L678-L679","name":"Cardinal.termℶ_","line":678,"kind":"def","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.termℶ_","doc":"Beth numbers are defined so that `beth 0 = ℵ₀`, `beth (succ o) = 2 ^ beth o`, and when `o` is\na limit ordinal, `beth o` is the supremum of `beth o'` for `o' < o`.\n\nAssuming the generalized continuum hypothesis, which is undecidable in ZFC, `beth o = aleph o` for\nevery `o`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.termℶ_\"><span class=\"name\">Cardinal</span>.<span class=\"name\">termℶ_</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L670-L676","name":"Cardinal.beth","line":670,"kind":"def","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth","doc":"Beth numbers are defined so that `beth 0 = ℵ₀`, `beth (succ o) = 2 ^ beth o`, and when `o` is\na limit ordinal, `beth o` is the supremum of `beth o'` for `o' < o`.\n\nAssuming the generalized continuum hypothesis, which is undecidable in ZFC, `beth o = aleph o` for\nevery `o`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.beth\"><span class=\"name\">Cardinal</span>.<span class=\"name\">beth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L658-L664","name":"Cardinal.eq_aleph_of_eq_card_ord","line":658,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.eq_aleph_of_eq_card_ord","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.eq_aleph_of_eq_card_ord\"><span class=\"name\">Cardinal</span>.<span class=\"name\">eq_aleph_of_eq_card_ord</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">o</span>.card</span>.ord</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ho' : <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">Ordinal.omega0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">a</span>)</span>.ord</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L653-L656","name":"Cardinal.ord_card_unbounded'","line":653,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.ord_card_unbounded'","doc":"Infinite ordinals that are cardinals are unbounded. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.ord_card_unbounded'\"><span class=\"name\">Cardinal</span>.<span class=\"name\">ord_card_unbounded'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#Set.Unbounded\">Set.Unbounded</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x2</span></span>)</span> <span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> | <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.card</span>.ord</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">Ordinal.omega0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L649-L651","name":"Cardinal.eq_aleph'_of_eq_card_ord","line":649,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.eq_aleph'_of_eq_card_ord","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.eq_aleph'_of_eq_card_ord\"><span class=\"name\">Cardinal</span>.<span class=\"name\">eq_aleph'_of_eq_card_ord</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">o</span>.card</span>.ord</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">a</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">Cardinal.aleph'</span> <span class=\"fn\">a</span>)</span>.ord</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L640-L647","name":"Cardinal.ord_card_unbounded","line":640,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.ord_card_unbounded","doc":"Ordinals that are cardinals are unbounded. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.ord_card_unbounded\"><span class=\"name\">Cardinal</span>.<span class=\"name\">ord_card_unbounded</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelClasses.html#Set.Unbounded\">Set.Unbounded</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x2</span></span>)</span> <span class=\"fn\">{<span class=\"fn\">b</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> | <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">b</span>.card</span>.ord</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L631-L633","name":"Cardinal.aleph'_isNormal","line":631,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'_isNormal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'_isNormal\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph'_isNormal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">Ordinal.IsNormal</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'\">Cardinal.aleph'</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L627-L629","name":"Cardinal.aleph'_pos","line":627,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'_pos\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph'_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">Cardinal.aleph'</span> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L623-L625","name":"Cardinal.aleph0_le_aleph'","line":623,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph0_le_aleph'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph0_le_aleph'\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph0_le_aleph'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">Cardinal.aleph'</span> <span class=\"fn\">o</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">Ordinal.omega0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L619-L621","name":"Cardinal.aleph_eq_aleph'","line":619,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_eq_aleph'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_eq_aleph'\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph_eq_aleph'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Cardinal.preAleph</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">Ordinal.omega0</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">o</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L614-L617","name":"Cardinal.aleph'Equiv","line":614,"kind":"def","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'Equiv","doc":"`aleph'` and `aleph_idx` form an equivalence between `Ordinal` and `Cardinal` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'Equiv\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph'Equiv</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L611-L612","name":"Cardinal.aleph'_omega","line":611,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'_omega","doc":"**Alias** of `Cardinal.aleph'_omega0`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'_omega\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph'_omega</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph'</span> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">Ordinal.omega0</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L607-L609","name":"Cardinal.aleph'_omega0","line":607,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'_omega0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'_omega0\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph'_omega0</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph'</span> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">Ordinal.omega0</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L603-L605","name":"Cardinal.aleph'_limit","line":603,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'_limit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'_limit\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph'_limit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\"><span class=\"fn\">o</span>.IsLimit</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph'</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span>)</span></span>), <span class=\"fn\"><span class=\"fn\">Cardinal.aleph'</span> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L598-L601","name":"Cardinal.aleph'_le_of_limit","line":598,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'_le_of_limit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'_le_of_limit\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph'_le_of_limit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l : <span class=\"fn\"><span class=\"fn\">o</span>.IsLimit</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph'</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">o'</span> &lt; <span class=\"fn\">o</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph'</span> <span class=\"fn\">o'</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L594-L596","name":"Cardinal.lift_aleph'","line":594,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.lift_aleph'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.lift_aleph'\"><span class=\"name\">Cardinal</span>.<span class=\"name\">lift_aleph'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">(<span class=\"fn\">Cardinal.aleph'</span> <span class=\"fn\">o</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Cardinal.aleph'</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">Ordinal.lift.{v, u}</a>    <span class=\"fn\">o</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L590-L592","name":"Cardinal.aleph'_nat","line":590,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'_nat\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph'_nat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph'</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L586-L588","name":"Cardinal.aleph'_succ","line":586,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'_succ\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph'_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph'</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">o</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">(<span class=\"fn\">Cardinal.aleph'</span> <span class=\"fn\">o</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L582-L584","name":"Cardinal.aleph'_zero","line":582,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'_zero\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph'_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph'</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L578-L580","name":"Cardinal.alephIdx_aleph'","line":578,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.alephIdx_aleph'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.alephIdx_aleph'\"><span class=\"name\">Cardinal</span>.<span class=\"name\">alephIdx_aleph'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">Cardinal.aleph'</span> <span class=\"fn\">o</span>)</span>.alephIdx</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L574-L576","name":"Cardinal.aleph'_alephIdx","line":574,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'_alephIdx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'_alephIdx\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph'_alephIdx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph'</span> <span class=\"fn\"><span class=\"fn\">c</span>.alephIdx</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L570-L572","name":"Cardinal.aleph'_max","line":570,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'_max","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'_max\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph'_max</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o₁ o₂ : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph'</span> <span class=\"fn\">(<span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">o₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph'</span> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\"><span class=\"fn\">Cardinal.aleph'</span> <span class=\"fn\">o₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L566-L568","name":"Cardinal.aleph'_le","line":566,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'_le\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph'_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o₁ o₂ : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph'</span> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">Cardinal.aleph'</span> <span class=\"fn\">o₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L562-L564","name":"Cardinal.aleph'_lt","line":562,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'_lt\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph'_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o₁ o₂ : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph'</span> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">Cardinal.aleph'</span> <span class=\"fn\">o₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L558-L560","name":"Cardinal.aleph'.relIso_coe","line":558,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'.relIso_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'.relIso_coe\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph'</span>.<span class=\"name\">relIso_coe</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.Aleph'.relIso\">Cardinal.Aleph'.relIso</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'\">Cardinal.aleph'</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L548-L556","name":"Cardinal.Aleph'.relIso","line":548,"kind":"def","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.Aleph'.relIso","doc":"The `aleph'` function gives the cardinals listed by their ordinal\nindex, and is the inverse of `aleph_idx`.\n`aleph' n = n`, `aleph' ω = ω`, `aleph' (ω + 1) = succ ℵ₀`, etc.\nIn this version, we register additionally that this function is an order isomorphism\nbetween ordinals and cardinals.\nFor the basic function version, see `aleph'`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.Aleph'.relIso\"><span class=\"name\">Cardinal</span>.<span class=\"name\">Aleph'</span>.<span class=\"name\">relIso</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L544-L546","name":"Cardinal.alephIdx.relIso_coe","line":544,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.alephIdx.relIso_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.alephIdx.relIso_coe\"><span class=\"name\">Cardinal</span>.<span class=\"name\">alephIdx</span>.<span class=\"name\">relIso_coe</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.alephIdx.relIso\">Cardinal.alephIdx.relIso</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.alephIdx\">Cardinal.alephIdx</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L535-L542","name":"Cardinal.alephIdx","line":535,"kind":"def","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.alephIdx","doc":"The `aleph'` index function, which gives the ordinal index of a cardinal.\n(The `aleph'` part is because unlike `aleph` this counts also the\nfinite stages. So `alephIdx n = n`, `alephIdx ω = ω`,\n`alephIdx ℵ₁ = ω + 1` and so on.)\nFor an upgraded version stating that the range is everything, see `AlephIdx.rel_iso`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.alephIdx\"><span class=\"name\">Cardinal</span>.<span class=\"name\">alephIdx</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a> → <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L524-L533","name":"Cardinal.alephIdx.relIso","line":524,"kind":"def","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.alephIdx.relIso","doc":"The `aleph'` index function, which gives the ordinal index of a cardinal.\n(The `aleph'` part is because unlike `aleph` this counts also the\nfinite stages. So `alephIdx n = n`, `alephIdx ℵ₀ = ω`,\n`alephIdx ℵ₁ = ω + 1` and so on.)\nIn this version, we register additionally that this function is an order isomorphism\nbetween cardinals and ordinals.\nFor the basic function version, see `alephIdx`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.alephIdx.relIso\"><span class=\"name\">Cardinal</span>.<span class=\"name\">alephIdx</span>.<span class=\"name\">relIso</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u}</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x2</span></span>)</span> <a href=\"./Mathlib/Order/RelIso/Basic.html#RelIso\">≃r</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x2</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L512-L522","name":"Cardinal.alephIdx.initialSeg","line":512,"kind":"def","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.alephIdx.initialSeg","doc":"The `aleph'` index function, which gives the ordinal index of a cardinal.\n(The `aleph'` part is because unlike `aleph` this counts also the\nfinite stages. So `alephIdx n = n`, `alephIdx ω = ω`,\n`alephIdx ℵ₁ = ω + 1` and so on.)\nIn this definition, we register additionally that this function is an initial segment,\ni.e., it is order preserving and its range is an initial segment of the ordinals.\nFor the basic function version, see `alephIdx`.\nFor an upgraded version stating that the range is everything, see `AlephIdx.rel_iso`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.alephIdx.initialSeg\"><span class=\"name\">Cardinal</span>.<span class=\"name\">alephIdx</span>.<span class=\"name\">initialSeg</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x2</span></span>)</span> <a href=\"./Mathlib/Order/InitialSeg.html#InitialSeg\">≼i</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x2</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L509-L510","name":"Cardinal.aleph'","line":509,"kind":"def","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'","doc":"**Alias** of `Cardinal.preAleph`.\n\n---\n\nThe \"pre-aleph\" function gives the cardinals listed by their ordinal index. `preAleph n = n`,\n`preAleph ω = ℵ₀`, `preAleph (ω + 1) = succ ℵ₀`, etc.\n\nFor the more common aleph function skipping over finite cardinals, see `Cardinal.aleph`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph'\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph'</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L500-L502","name":"Cardinal.lift_eq_aleph1","line":500,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.lift_eq_aleph1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.lift_eq_aleph1\"><span class=\"name\">Cardinal</span>.<span class=\"name\">lift_eq_aleph1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">1</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L496-L498","name":"Cardinal.aleph1_eq_lift","line":496,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph1_eq_lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph1_eq_lift\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph1_eq_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">c</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L492-L494","name":"Cardinal.lift_lt_aleph1","line":492,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.lift_lt_aleph1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.lift_lt_aleph1\"><span class=\"name\">Cardinal</span>.<span class=\"name\">lift_lt_aleph1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">1</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L488-L490","name":"Cardinal.aleph1_lt_lift","line":488,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph1_lt_lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph1_lt_lift\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph1_lt_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">c</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L484-L486","name":"Cardinal.lift_le_aleph1","line":484,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.lift_le_aleph1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.lift_le_aleph1\"><span class=\"name\">Cardinal</span>.<span class=\"name\">lift_le_aleph1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">1</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L480-L482","name":"Cardinal.aleph1_le_lift","line":480,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph1_le_lift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph1_le_lift\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph1_le_lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">c</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L477-L478","name":"Cardinal.countable_iff_lt_aleph_one","line":477,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.countable_iff_lt_aleph_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.countable_iff_lt_aleph_one\"><span class=\"name\">Cardinal</span>.<span class=\"name\">countable_iff_lt_aleph_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.Countable</span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <span class=\"fn\">↑<span class=\"fn\">s</span></span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">1</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L473-L475","name":"Cardinal.aleph0_lt_aleph_one","line":473,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph0_lt_aleph_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph0_lt_aleph_one\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph0_lt_aleph_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L469-L471","name":"Cardinal.succ_aleph0","line":469,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.succ_aleph0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.succ_aleph0\"><span class=\"name\">Cardinal</span>.<span class=\"name\">succ_aleph0</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L464-L467","name":"Cardinal.aleph_isNormal","line":464,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_isNormal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_isNormal\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph_isNormal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">Ordinal.IsNormal</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">Cardinal.aleph</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L459-L462","name":"Cardinal.preAleph_isNormal","line":459,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_isNormal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_isNormal\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preAleph_isNormal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">Ordinal.IsNormal</a> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.ord\">Cardinal.ord</a> <a href=\"./Init/Prelude.html#Function.comp\">∘</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\">Cardinal.preAleph</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L451-L457","name":"Cardinal.exists_aleph","line":451,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.exists_aleph","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.exists_aleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">exists_aleph</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">o</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>), <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">o</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L448-L449","name":"Cardinal.mem_range_aleph_iff","line":448,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.mem_range_aleph_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.mem_range_aleph_iff\"><span class=\"name\">Cardinal</span>.<span class=\"name\">mem_range_aleph_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">Cardinal.aleph</a></span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L441-L446","name":"Cardinal.range_aleph","line":441,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.range_aleph","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.range_aleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">range_aleph</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\">Cardinal.aleph</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ici\">Set.Ici</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L437-L439","name":"Cardinal.ord_aleph_isLimit","line":437,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.ord_aleph_isLimit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.ord_aleph_isLimit\"><span class=\"name\">Cardinal</span>.<span class=\"name\">ord_aleph_isLimit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">o</span>)</span>.ord</span>.IsLimit</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L433-L435","name":"Cardinal.isLimit_omega","line":433,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.isLimit_omega","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.isLimit_omega\"><span class=\"name\">Cardinal</span>.<span class=\"name\">isLimit_omega</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">Ordinal.omega</span> <span class=\"fn\">o</span>)</span>.IsLimit</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L429-L431","name":"Cardinal.nonempty_toType_aleph","line":429,"kind":"instance","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.nonempty_toType_aleph","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.nonempty_toType_aleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">nonempty_toType_aleph</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">o</span>)</span>.ord</span>.toType</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L425-L427","name":"Cardinal.aleph_toPartENat","line":425,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_toPartENat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_toPartENat\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph_toPartENat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.toPartENat</span> <span class=\"fn\">(<span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">o</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L421-L423","name":"Cardinal.aleph_toNat","line":421,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_toNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_toNat\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph_toNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.toNat</span> <span class=\"fn\">(<span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">o</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L418-L419","name":"Cardinal.aleph_pos","line":418,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_pos\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph_pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L414-L416","name":"Cardinal.aleph0_le_aleph","line":414,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph0_le_aleph","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph0_le_aleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph0_le_aleph</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L405-L412","name":"Cardinal.aleph_limit","line":405,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_limit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_limit\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph_limit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\"><span class=\"fn\">o</span>.IsLimit</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span>)</span></span>), <span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L399-L403","name":"Ordinal.lift_omega","line":399,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.lift_omega","doc":"For the theorem `lift ω = ω`, see `lift_omega0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.lift_omega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lift_omega</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">Ordinal.lift.{v, u}</a>    <span class=\"fn\">(<span class=\"fn\">Ordinal.omega</span> <span class=\"fn\">o</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Ordinal.omega</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">Ordinal.lift.{v, u}</a>    <span class=\"fn\">o</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L395-L397","name":"Cardinal.lift_aleph","line":395,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.lift_aleph","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.lift_aleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">lift_aleph</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">(<span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">o</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">Ordinal.lift.{v, u}</a>    <span class=\"fn\">o</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L392-L393","name":"Cardinal.aleph_zero","line":392,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_zero\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L388-L390","name":"Cardinal.aleph_succ","line":388,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_succ\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">o</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">(<span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">o</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L385-L386","name":"Cardinal.preAleph_le_aleph","line":385,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_le_aleph","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_le_aleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preAleph_le_aleph</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.preAleph</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L381-L383","name":"Cardinal.max_aleph_eq","line":381,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.max_aleph_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.max_aleph_eq\"><span class=\"name\">Cardinal</span>.<span class=\"name\">max_aleph_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o₁ o₂ : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">o₂</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">(<span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">o₂</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L378-L379","name":"Cardinal.aleph_max","line":378,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_max","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_max\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph_max</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o₁ o₂ : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">(<span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">o₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">o₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L375-L376","name":"Cardinal.aleph_le","line":375,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_le","doc":"**Alias** of `Cardinal.aleph_le_aleph`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_le\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o₁ o₂ : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">o₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L372-L373","name":"Cardinal.aleph_le_aleph","line":372,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_le_aleph","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_le_aleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph_le_aleph</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o₁ o₂ : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">o₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L369-L370","name":"Cardinal.aleph_lt","line":369,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_lt","doc":"**Alias** of `Cardinal.aleph_lt_aleph`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_lt\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o₁ o₂ : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">o₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L366-L367","name":"Cardinal.aleph_lt_aleph","line":366,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_lt_aleph","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_lt_aleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph_lt_aleph</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o₁ o₂ : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">o₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L362-L364","name":"Cardinal.ord_aleph","line":362,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.ord_aleph","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.ord_aleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">ord_aleph</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">o</span>)</span>.ord</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Ordinal.omega</span> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L358-L360","name":"Ordinal.card_omega","line":358,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.card_omega","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.card_omega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">card_omega</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">Ordinal.omega</span> <span class=\"fn\">o</span>)</span>.card</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L355-L356","name":"Cardinal.aleph_eq_preAleph","line":355,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_eq_preAleph","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph_eq_preAleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph_eq_preAleph</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.aleph</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Cardinal.preAleph</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">Ordinal.omega0</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">o</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L352-L353","name":"Cardinal.termℵ₁","line":352,"kind":"def","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.termℵ₁","doc":"`ℵ₁` is the first uncountable cardinal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.termℵ₁\"><span class=\"name\">Cardinal</span>.<span class=\"name\">termℵ₁</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L349-L350","name":"Cardinal.termℵ_","line":349,"kind":"def","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.termℵ_","doc":"The `aleph` function gives the infinite cardinals listed by their ordinal index. `aleph 0 = ℵ₀`,\n`aleph 1 = succ ℵ₀` is the first uncountable cardinal, and so on.\n\nFor a version including finite cardinals, see `Cardinal.aleph'`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.termℵ_\"><span class=\"name\">Cardinal</span>.<span class=\"name\">termℵ_</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L342-L347","name":"Cardinal.aleph","line":342,"kind":"def","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph","doc":"The `aleph` function gives the infinite cardinals listed by their ordinal index. `aleph 0 = ℵ₀`,\n`aleph 1 = succ ℵ₀` is the first uncountable cardinal, and so on.\n\nFor a version including finite cardinals, see `Cardinal.aleph'`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderEmbedding\">↪o</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L337-L340","name":"Cardinal.preAleph_limit","line":337,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_limit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_limit\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preAleph_limit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ho : <span class=\"fn\"><span class=\"fn\">o</span>.IsLimit</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.preAleph</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⨆ (<span class=\"fn\">a</span> : <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Iio\">Set.Iio</a> <span class=\"fn\">o</span>)</span></span>), <span class=\"fn\"><span class=\"fn\">Cardinal.preAleph</span> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L329-L335","name":"Cardinal.preAleph_le_of_isLimit","line":329,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_le_of_isLimit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_le_of_isLimit\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preAleph_le_of_isLimit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l : <span class=\"fn\"><span class=\"fn\">o</span>.IsLimit</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.preAleph</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">o'</span> &lt; <span class=\"fn\">o</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.preAleph</span> <span class=\"fn\">o'</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">c</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L324-L327","name":"Ordinal.lift_preOmega","line":324,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.lift_preOmega","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.lift_preOmega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">lift_preOmega</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">Ordinal.lift.{v, u}</a>    <span class=\"fn\">(<span class=\"fn\">Ordinal.preOmega</span> <span class=\"fn\">o</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Ordinal.preOmega</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">Ordinal.lift.{v, u}</a>    <span class=\"fn\">o</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L319-L322","name":"Cardinal.lift_preAleph","line":319,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.lift_preAleph","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.lift_preAleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">lift_preAleph</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.lift\">Cardinal.lift.{v, u}</a>    <span class=\"fn\">(<span class=\"fn\">Cardinal.preAleph</span> <span class=\"fn\">o</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Cardinal.preAleph</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.lift\">Ordinal.lift.{v, u}</a>    <span class=\"fn\">o</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L315-L317","name":"Cardinal.aleph0_le_preAleph","line":315,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph0_le_preAleph","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.aleph0_le_preAleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">aleph0_le_preAleph</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">Cardinal.preAleph</span> <span class=\"fn\">o</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">Ordinal.omega0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L311-L313","name":"Cardinal.preAleph_pos","line":311,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_pos\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preAleph_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">Cardinal.preAleph</span> <span class=\"fn\">o</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L307-L309","name":"Cardinal.preAleph_omega0","line":307,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_omega0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_omega0\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preAleph_omega0</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.preAleph</span> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">Ordinal.omega0</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.aleph0\">Cardinal.aleph0</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L303-L305","name":"Cardinal.preAleph_nat","line":303,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_nat\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preAleph_nat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.preAleph</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L299-L301","name":"Cardinal.preAleph_succ","line":299,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_succ\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preAleph_succ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.preAleph</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">o</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/SuccPred/Basic.html#Order.succ\">Order.succ</a> <span class=\"fn\">(<span class=\"fn\">Cardinal.preAleph</span> <span class=\"fn\">o</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L295-L297","name":"Cardinal.preAleph_zero","line":295,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_zero\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preAleph_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.preAleph</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L292-L293","name":"Cardinal.preAleph_max","line":292,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_max","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_max\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preAleph_max</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o₁ o₂ : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.preAleph</span> <span class=\"fn\">(<span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">o₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.preAleph</span> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\"><span class=\"fn\">Cardinal.preAleph</span> <span class=\"fn\">o₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L289-L290","name":"Cardinal.preAleph_le_preAleph","line":289,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_le_preAleph","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_le_preAleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preAleph_le_preAleph</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o₁ o₂ : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.preAleph</span> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">Cardinal.preAleph</span> <span class=\"fn\">o₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L286-L287","name":"Cardinal.preAleph_lt_preAleph","line":286,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_lt_preAleph","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph_lt_preAleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preAleph_lt_preAleph</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o₁ o₂ : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Cardinal.preAleph</span> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">Cardinal.preAleph</span> <span class=\"fn\">o₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L282-L284","name":"Cardinal.mk_cardinal","line":282,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.mk_cardinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.mk_cardinal\"><span class=\"name\">Cardinal</span>.<span class=\"name\">mk_cardinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal.mk\">Cardinal.mk</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u}</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Cardinal.univ\">Cardinal.univ.{u, u + 1}</a>       </span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L277-L280","name":"Cardinal.type_cardinal","line":277,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.type_cardinal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.type_cardinal\"><span class=\"name\">Cardinal</span>.<span class=\"name\">type_cardinal</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.type\">Ordinal.type</a> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u}</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x2</span></span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.univ\">Ordinal.univ.{u, u + 1}</a>       </span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L273-L275","name":"Cardinal.ord_preAleph","line":273,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.ord_preAleph","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.ord_preAleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">ord_preAleph</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">Cardinal.preAleph</span> <span class=\"fn\">o</span>)</span>.ord</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Ordinal.preOmega</span> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L269-L271","name":"Ordinal.card_preOmega","line":269,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.card_preOmega","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.card_preOmega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">card_preOmega</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">Ordinal.preOmega</span> <span class=\"fn\">o</span>)</span>.card</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Cardinal.preAleph</span> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L262-L267","name":"Cardinal.preAleph","line":262,"kind":"def","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph","doc":"The \"pre-aleph\" function gives the cardinals listed by their ordinal index. `preAleph n = n`,\n`preAleph ω = ℵ₀`, `preAleph (ω + 1) = succ ℵ₀`, etc.\n\nFor the more common aleph function skipping over finite cardinals, see `Cardinal.aleph`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Cardinal.preAleph\"><span class=\"name\">Cardinal</span>.<span class=\"name\">preAleph</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L253-L254","name":"Ordinal.mem_range_omega_iff","line":253,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.mem_range_omega_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.mem_range_omega_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mem_range_omega_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">Ordinal.omega</a></span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">Ordinal.omega0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">x</span>.IsInitial</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L241-L251","name":"Ordinal.range_omega","line":241,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.range_omega","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.range_omega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">range_omega</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">Ordinal.omega</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> | <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">Ordinal.omega0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">x</span>.IsInitial</span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L238-L239","name":"Ordinal.isNormal_omega","line":238,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isNormal_omega","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isNormal_omega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isNormal_omega</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">Ordinal.IsNormal</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">Ordinal.omega</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L235-L236","name":"Ordinal.omega_lt_omega1","line":235,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_lt_omega1","doc":"**Alias** of `Ordinal.omega0_lt_omega1`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_lt_omega1\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega_lt_omega1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">Ordinal.omega0</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">Ordinal.omega</span> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L231-L233","name":"Ordinal.omega0_lt_omega1","line":231,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega0_lt_omega1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega0_lt_omega1\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega0_lt_omega1</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">Ordinal.omega0</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">Ordinal.omega</span> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L227-L229","name":"Ordinal.omega_pos","line":227,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_pos","doc":"For the theorem `0 < ω`, see `omega0_pos`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_pos\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega_pos</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">Ordinal.omega</span> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L223-L225","name":"Ordinal.omega0_le_omega","line":223,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega0_le_omega","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega0_le_omega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega0_le_omega</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">Ordinal.omega0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">Ordinal.omega</span> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L219-L221","name":"Ordinal.omega_zero","line":219,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Ordinal.omega</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">Ordinal.omega0</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L216-L217","name":"Ordinal.le_omega_self","line":216,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.le_omega_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.le_omega_self\"><span class=\"name\">Ordinal</span>.<span class=\"name\">le_omega_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">Ordinal.omega</span> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L213-L214","name":"Ordinal.isInitial_omega","line":213,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_omega","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_omega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isInitial_omega</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">Ordinal.omega</span> <span class=\"fn\">o</span>)</span>.IsInitial</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L210-L211","name":"Ordinal.preOmega_le_omega","line":210,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_le_omega","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_le_omega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">preOmega_le_omega</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Ordinal.preOmega</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">Ordinal.omega</span> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L207-L208","name":"Ordinal.omega_max","line":207,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_max","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_max\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega_max</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o₁ o₂ : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Ordinal.omega</span> <span class=\"fn\">(<span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">o₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Ordinal.omega</span> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\"><span class=\"fn\">Ordinal.omega</span> <span class=\"fn\">o₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L204-L205","name":"Ordinal.omega_le_omega","line":204,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_le_omega","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_le_omega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega_le_omega</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o₁ o₂ : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Ordinal.omega</span> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">Ordinal.omega</span> <span class=\"fn\">o₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L201-L202","name":"Ordinal.omega_lt_omega","line":201,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_lt_omega","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_lt_omega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega_lt_omega</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o₁ o₂ : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Ordinal.omega</span> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">Ordinal.omega</span> <span class=\"fn\">o₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L198-L199","name":"Ordinal.omega_strictMono","line":198,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_strictMono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_strictMono\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega_strictMono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#StrictMono\">StrictMono</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\">Ordinal.omega</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L195-L196","name":"Ordinal.omega_eq_preOmega","line":195,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_eq_preOmega","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega_eq_preOmega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega_eq_preOmega</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Ordinal.omega</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Ordinal.preOmega</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">Ordinal.omega0</a> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">o</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L192-L193","name":"Ordinal.termω₁","line":192,"kind":"def","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.termω₁","doc":"`ω₁` is the first uncountable ordinal. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.termω₁\"><span class=\"name\">Ordinal</span>.<span class=\"name\">termω₁</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L189-L190","name":"Ordinal.termω_","line":189,"kind":"def","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.termω_","doc":"The `omega` function gives the infinite initial ordinals listed by their ordinal index.\n`omega 0 = ω`, `omega 1 = ω₁` is the first uncountable ordinal, and so on.\n\nThis is not to be confused with the first infinite ordinal `Ordinal.omega0`.\n\nFor a version including finite ordinals, see `Ordinal.preOmega`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.termω_\"><span class=\"name\">Ordinal</span>.<span class=\"name\">termω_</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L180-L187","name":"Ordinal.omega","line":180,"kind":"def","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega","doc":"The `omega` function gives the infinite initial ordinals listed by their ordinal index.\n`omega 0 = ω`, `omega 1 = ω₁` is the first uncountable ordinal, and so on.\n\nThis is not to be confused with the first infinite ordinal `Ordinal.omega0`.\n\nFor a version including finite ordinals, see `Ordinal.preOmega`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderEmbedding\">↪o</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L176-L178","name":"Ordinal.omega0_lt_preOmega_iff","line":176,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega0_lt_preOmega_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega0_lt_preOmega_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega0_lt_preOmega_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">Ordinal.omega0</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">Ordinal.preOmega</span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">Ordinal.omega0</a> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L172-L174","name":"Ordinal.omega0_le_preOmega_iff","line":172,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega0_le_preOmega_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.omega0_le_preOmega_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">omega0_le_preOmega_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">Ordinal.omega0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">Ordinal.preOmega</span> <span class=\"fn\">x</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">Ordinal.omega0</a> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L168-L170","name":"Ordinal.preOmega_omega0","line":168,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_omega0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_omega0\"><span class=\"name\">Ordinal</span>.<span class=\"name\">preOmega_omega0</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Ordinal.preOmega</span> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">Ordinal.omega0</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">Ordinal.omega0</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L166-L166","name":"Ordinal.IsInitial.mem_range_preOmega","line":166,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial.mem_range_preOmega","doc":"**Alias** of the reverse direction of `Ordinal.mem_range_preOmega_iff`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial.mem_range_preOmega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsInitial</span>.<span class=\"name\">mem_range_preOmega</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span>.IsInitial</span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">Ordinal.preOmega</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L163-L164","name":"Ordinal.mem_range_preOmega_iff","line":163,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.mem_range_preOmega_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.mem_range_preOmega_iff\"><span class=\"name\">Ordinal</span>.<span class=\"name\">mem_range_preOmega_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">Ordinal.preOmega</a></span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span>.IsInitial</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L159-L161","name":"Ordinal.range_preOmega","line":159,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.range_preOmega","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.range_preOmega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">range_preOmega</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.range\">Set.range</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">Ordinal.preOmega</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> | <span class=\"fn\"><span class=\"fn\">x</span>.IsInitial</span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L150-L157","name":"Ordinal.isNormal_preOmega","line":150,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isNormal_preOmega","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isNormal_preOmega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isNormal_preOmega</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Arithmetic.html#Ordinal.IsNormal\">Ordinal.IsNormal</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">Ordinal.preOmega</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L146-L148","name":"Ordinal.preOmega_le_of_forall_lt","line":146,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_le_of_forall_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_le_of_forall_lt\"><span class=\"name\">Ordinal</span>.<span class=\"name\">preOmega_le_of_forall_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o a : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span>.IsInitial</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\">∀ <span class=\"fn\">b</span> &lt; <span class=\"fn\">o</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Ordinal.preOmega</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">a</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Ordinal.preOmega</span> <span class=\"fn\">o</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L142-L144","name":"Ordinal.preOmega_ofNat","line":142,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_ofNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_ofNat\"><span class=\"name\">Ordinal</span>.<span class=\"name\">preOmega_ofNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">n</span>.AtLeastTwo</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Ordinal.preOmega</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#OfNat.ofNat\">OfNat.ofNat</a> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L131-L139","name":"Ordinal.preOmega_natCast","line":131,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_natCast\"><span class=\"name\">Ordinal</span>.<span class=\"name\">preOmega_natCast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Ordinal.preOmega</span> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L126-L129","name":"Ordinal.preOmega_zero","line":126,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">preOmega_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Ordinal.preOmega</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L123-L124","name":"Ordinal.le_preOmega_self","line":123,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.le_preOmega_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.le_preOmega_self\"><span class=\"name\">Ordinal</span>.<span class=\"name\">le_preOmega_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">o</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">Ordinal.preOmega</span> <span class=\"fn\">o</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L120-L121","name":"Ordinal.isInitial_preOmega","line":120,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_preOmega","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_preOmega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isInitial_preOmega</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">Ordinal.preOmega</span> <span class=\"fn\">o</span>)</span>.IsInitial</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L117-L118","name":"Ordinal.preOmega_max","line":117,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_max","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_max\"><span class=\"name\">Ordinal</span>.<span class=\"name\">preOmega_max</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o₁ o₂ : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Ordinal.preOmega</span> <span class=\"fn\">(<span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">o₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Ordinal.preOmega</span> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\"><span class=\"fn\">Ordinal.preOmega</span> <span class=\"fn\">o₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L114-L115","name":"Ordinal.preOmega_le_preOmega","line":114,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_le_preOmega","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_le_preOmega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">preOmega_le_preOmega</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o₁ o₂ : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Ordinal.preOmega</span> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">Ordinal.preOmega</span> <span class=\"fn\">o₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">o₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L111-L112","name":"Ordinal.preOmega_lt_preOmega","line":111,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_lt_preOmega","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_lt_preOmega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">preOmega_lt_preOmega</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o₁ o₂ : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Ordinal.preOmega</span> <span class=\"fn\">o₁</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">Ordinal.preOmega</span> <span class=\"fn\">o₂</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">o₁</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">o₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L108-L109","name":"Ordinal.preOmega_strictMono","line":108,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_strictMono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega_strictMono\"><span class=\"name\">Ordinal</span>.<span class=\"name\">preOmega_strictMono</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#StrictMono\">StrictMono</a> <span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">Ordinal.preOmega</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L105-L106","name":"Ordinal.coe_preOmega","line":105,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.coe_preOmega","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.coe_preOmega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">coe_preOmega</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\">Ordinal.preOmega</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Enum.html#Ordinal.enumOrd\">Ordinal.enumOrd</a> <span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> | <span class=\"fn\"><span class=\"fn\">x</span>.IsInitial</span>}</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L96-L103","name":"Ordinal.preOmega","line":96,"kind":"def","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega","doc":"The \"pre-omega\" function gives the initial ordinals listed by their ordinal index.\n`preOmega n = n`, `preOmega ω = ω`, `preOmega (ω + 1) = ω₁`, etc.\n\nFor the more common omega function skipping over finite ordinals, see `Ordinal.omega`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.preOmega\"><span class=\"name\">Ordinal</span>.<span class=\"name\">preOmega</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderEmbedding\">↪o</a> <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L88-L88","name":"Ordinal.isInitialIso_symm_apply_coe","line":88,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitialIso_symm_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitialIso_symm_apply_coe\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isInitialIso_symm_apply_coe</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Order/RelIso/Basic.html#RelIso.symm\">RelIso.symm</a> <a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitialIso\">Ordinal.isInitialIso</a>)</span> <span class=\"fn\">x</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span>.ord</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L88-L88","name":"Ordinal.isInitialIso_apply","line":88,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitialIso_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitialIso_apply\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isInitialIso_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">{ <span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> // <span class=\"fn\"><span class=\"fn\">x</span>.IsInitial</span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Ordinal.isInitialIso</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">x</span>)</span>.card</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L87-L94","name":"Ordinal.isInitialIso","line":87,"kind":"def","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitialIso","doc":"Initial ordinals are order-isomorphic to the cardinals. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitialIso\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isInitialIso</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> // <span class=\"fn\"><span class=\"fn\">x</span>.IsInitial</span> }</span> <a href=\"./Mathlib/Order/Hom/Basic.html#OrderIso\">≃o</a> <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L81-L85","name":"Ordinal.not_bddAbove_isInitial","line":81,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.not_bddAbove_isInitial","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.not_bddAbove_isInitial\"><span class=\"name\">Ordinal</span>.<span class=\"name\">not_bddAbove_isInitial</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/Order/Bounds/Defs.html#BddAbove\">BddAbove</a> <span class=\"fn\">{<span class=\"fn\">x</span> : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a> | <span class=\"fn\"><span class=\"fn\">x</span>.IsInitial</span>}</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L78-L79","name":"Ordinal.isInitial_omega0","line":78,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_omega0","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_omega0\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isInitial_omega0</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal.omega0\">Ordinal.omega0</a>.IsInitial</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L75-L76","name":"Ordinal.isInitial_one","line":75,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_one\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isInitial_one</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial\">Ordinal.IsInitial</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L72-L73","name":"Ordinal.isInitial_zero","line":72,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_zero\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isInitial_zero</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial\">Ordinal.IsInitial</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L69-L70","name":"Ordinal.isInitial_natCast","line":69,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_natCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_natCast\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isInitial_natCast</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">n</span>)</span>.IsInitial</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L66-L67","name":"Ordinal.isInitial_ord","line":66,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_ord","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.isInitial_ord\"><span class=\"name\">Ordinal</span>.<span class=\"name\">isInitial_ord</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Mathlib/SetTheory/Cardinal/Basic.html#Cardinal\">Cardinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.ord</span>.IsInitial</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L63-L64","name":"Ordinal.IsInitial.card_lt_card","line":63,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial.card_lt_card","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial.card_lt_card\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsInitial</span>.<span class=\"name\">card_lt_card</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\">b</span>.IsInitial</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.card</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">b</span>.card</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L58-L61","name":"Ordinal.IsInitial.card_le_card","line":58,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial.card_le_card","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial.card_le_card\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsInitial</span>.<span class=\"name\">card_le_card</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span>.IsInitial</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.card</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">b</span>.card</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L56-L56","name":"Ordinal.IsInitial.ord_card","line":56,"kind":"theorem","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial.ord_card","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial.ord_card\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsInitial</span>.<span class=\"name\">ord_card</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">o</span>.IsInitial</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">o</span>.card</span>.ord</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">o</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/SetTheory/Cardinal/Aleph.lean#L50-L54","name":"Ordinal.IsInitial","line":50,"kind":"def","docLink":"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial","doc":"An ordinal is initial when it is the first ordinal with a given cardinality.\n\nThis is written as `o.card.ord = o`, i.e. `o` is the smallest ordinal with cardinality `o.card`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/SetTheory/Cardinal/Aleph.html#Ordinal.IsInitial\"><span class=\"name\">Ordinal</span>.<span class=\"name\">IsInitial</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(o : <a href=\"./Mathlib/SetTheory/Ordinal/Basic.html#Ordinal\">Ordinal.{u_1}</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}