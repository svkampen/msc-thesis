{"name":"Aesop.Tree.RunMetaM","instances":[],"imports":["Init","Aesop.Tree.Data"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Tree/RunMetaM.lean#L81-L83","name":"Aesop.Rapp.runMetaMModifyingParentState","line":81,"kind":"def","docLink":"./Aesop/Tree/RunMetaM.html#Aesop.Rapp.runMetaMModifyingParentState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/RunMetaM.html#Aesop.Rapp.runMetaMModifyingParentState\"><span class=\"name\">Aesop</span>.<span class=\"name\">Rapp</span>.<span class=\"name\">runMetaMModifyingParentState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Aesop/Tree/Data.html#Aesop.Rapp\">Aesop.Rapp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Tree/RunMetaM.lean#L77-L79","name":"Aesop.Rapp.runMetaMInParentState'","line":77,"kind":"def","docLink":"./Aesop/Tree/RunMetaM.html#Aesop.Rapp.runMetaMInParentState'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/RunMetaM.html#Aesop.Rapp.runMetaMInParentState'\"><span class=\"name\">Aesop</span>.<span class=\"name\">Rapp</span>.<span class=\"name\">runMetaMInParentState'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Aesop/Tree/Data.html#Aesop.Rapp\">Aesop.Rapp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Tree/RunMetaM.lean#L73-L75","name":"Aesop.Rapp.runMetaMInParentState","line":73,"kind":"def","docLink":"./Aesop/Tree/RunMetaM.html#Aesop.Rapp.runMetaMInParentState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/RunMetaM.html#Aesop.Rapp.runMetaMInParentState\"><span class=\"name\">Aesop</span>.<span class=\"name\">Rapp</span>.<span class=\"name\">runMetaMInParentState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Aesop/Tree/Data.html#Aesop.Rapp\">Aesop.Rapp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Tree/RunMetaM.lean#L67-L71","name":"Aesop.Goal.runMetaMModifyingParentState","line":67,"kind":"def","docLink":"./Aesop/Tree/RunMetaM.html#Aesop.Goal.runMetaMModifyingParentState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/RunMetaM.html#Aesop.Goal.runMetaMModifyingParentState\"><span class=\"name\">Aesop</span>.<span class=\"name\">Goal</span>.<span class=\"name\">runMetaMModifyingParentState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <a href=\"./Aesop/Tree/Data.html#Aesop.Goal\">Aesop.Goal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Tree/RunMetaM.lean#L63-L65","name":"Aesop.Goal.runMetaMInParentState'","line":63,"kind":"def","docLink":"./Aesop/Tree/RunMetaM.html#Aesop.Goal.runMetaMInParentState'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/RunMetaM.html#Aesop.Goal.runMetaMInParentState'\"><span class=\"name\">Aesop</span>.<span class=\"name\">Goal</span>.<span class=\"name\">runMetaMInParentState'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <a href=\"./Aesop/Tree/Data.html#Aesop.Goal\">Aesop.Goal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Tree/RunMetaM.lean#L57-L61","name":"Aesop.Goal.runMetaMInParentState","line":57,"kind":"def","docLink":"./Aesop/Tree/RunMetaM.html#Aesop.Goal.runMetaMInParentState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/RunMetaM.html#Aesop.Goal.runMetaMInParentState\"><span class=\"name\">Aesop</span>.<span class=\"name\">Goal</span>.<span class=\"name\">runMetaMInParentState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <a href=\"./Aesop/Tree/Data.html#Aesop.Goal\">Aesop.Goal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Tree/RunMetaM.lean#L54-L55","name":"Aesop.Goal.runMetaMInPostNormState'","line":54,"kind":"def","docLink":"./Aesop/Tree/RunMetaM.html#Aesop.Goal.runMetaMInPostNormState'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/RunMetaM.html#Aesop.Goal.runMetaMInPostNormState'\"><span class=\"name\">Aesop</span>.<span class=\"name\">Goal</span>.<span class=\"name\">runMetaMInPostNormState'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <a href=\"./Aesop/Tree/Data.html#Aesop.Goal\">Aesop.Goal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Tree/RunMetaM.lean#L48-L52","name":"Aesop.Goal.runMetaMInPostNormState","line":48,"kind":"def","docLink":"./Aesop/Tree/RunMetaM.html#Aesop.Goal.runMetaMInPostNormState","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/RunMetaM.html#Aesop.Goal.runMetaMInPostNormState\"><span class=\"name\">Aesop</span>.<span class=\"name\">Goal</span>.<span class=\"name\">runMetaMInPostNormState</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <a href=\"./Aesop/Tree/Data.html#Aesop.Goal\">Aesop.Goal</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Tree/RunMetaM.lean#L43-L46","name":"Aesop.RappRef.runMetaMModifying","line":43,"kind":"def","docLink":"./Aesop/Tree/RunMetaM.html#Aesop.RappRef.runMetaMModifying","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/RunMetaM.html#Aesop.RappRef.runMetaMModifying\"><span class=\"name\">Aesop</span>.<span class=\"name\">RappRef</span>.<span class=\"name\">runMetaMModifying</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rref : <a href=\"./Aesop/Tree/Data.html#Aesop.RappRef\">Aesop.RappRef</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Tree/RunMetaM.lean#L39-L41","name":"Aesop.Rapp.runMetaMModifying","line":39,"kind":"def","docLink":"./Aesop/Tree/RunMetaM.html#Aesop.Rapp.runMetaMModifying","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/RunMetaM.html#Aesop.Rapp.runMetaMModifying\"><span class=\"name\">Aesop</span>.<span class=\"name\">Rapp</span>.<span class=\"name\">runMetaMModifying</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Aesop/Tree/Data.html#Aesop.Rapp\">Aesop.Rapp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Aesop/Tree/Data.html#Aesop.Rapp\">Aesop.Rapp</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Tree/RunMetaM.lean#L36-L37","name":"Aesop.Rapp.runMetaM'","line":36,"kind":"def","docLink":"./Aesop/Tree/RunMetaM.html#Aesop.Rapp.runMetaM'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/RunMetaM.html#Aesop.Rapp.runMetaM'\"><span class=\"name\">Aesop</span>.<span class=\"name\">Rapp</span>.<span class=\"name\">runMetaM'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Aesop/Tree/Data.html#Aesop.Rapp\">Aesop.Rapp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Tree/RunMetaM.lean#L33-L34","name":"Aesop.Rapp.runMetaM","line":33,"kind":"def","docLink":"./Aesop/Tree/RunMetaM.html#Aesop.Rapp.runMetaM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Tree/RunMetaM.html#Aesop.Rapp.runMetaM\"><span class=\"name\">Aesop</span>.<span class=\"name\">Rapp</span>.<span class=\"name\">runMetaM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <a href=\"./Aesop/Tree/Data.html#Aesop.Rapp\">Aesop.Rapp</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Meta/Basic.html#Lean.Meta.SavedState\">Lean.Meta.SavedState</a>)</span></span></div></div>"}]}