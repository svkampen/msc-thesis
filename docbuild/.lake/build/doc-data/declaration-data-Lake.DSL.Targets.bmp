{"name":"Lake.DSL.Targets","instances":[{"typeNames":["Lake.DSL.LeanLibDecl","Lean.Syntax.Command"],"name":"Lake.DSL.instCoeLeanLibDeclCommand","className":"Coe"},{"typeNames":["Lake.DSL.LeanExeDecl","Lean.Syntax.Command"],"name":"Lake.DSL.instCoeLeanExeDeclCommand","className":"Coe"}],"imports":["Init","Lake.DSL.DeclUtil","Lake.Build.Index"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/DSL/Targets.lean#L241-L258","name":"Lake.DSL.externLibDecl","line":241,"kind":"def","docLink":"./Lake/DSL/Targets.html#Lake.DSL.externLibDecl","doc":"Define a new external library target for the package. Has one form:\n\n```lean\nextern_lib «target-name» (pkg : NPackage _package.name) :=\n  /- build term of type `FetchM (BuildJob FilePath)` -/\n```\n\nThe `pkg` parameter (and its type specifier) is optional.\nIt is of type `NPackage _package.name` to provably demonstrate the package\nprovided is the package in which the target is defined.\n\nThe term should build the external library's **static** library.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Targets.html#Lake.DSL.externLibDecl\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">externLibDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/DSL/Targets.lean#L224-L225","name":"Lake.DSL.externLibDeclSpec","line":224,"kind":"def","docLink":"./Lake/DSL/Targets.html#Lake.DSL.externLibDeclSpec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Targets.html#Lake.DSL.externLibDeclSpec\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">externLibDeclSpec</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/DSL/Targets.lean#L217-L218","name":"Lake.DSL.instCoeLeanExeDeclCommand","line":217,"kind":"instance","docLink":"./Lake/DSL/Targets.html#Lake.DSL.instCoeLeanExeDeclCommand","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Targets.html#Lake.DSL.instCoeLeanExeDeclCommand\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">instCoeLeanExeDeclCommand</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Lake/DSL/Targets.html#Lake.DSL.LeanExeDecl\">Lake.DSL.LeanExeDecl</a> <a href=\"./Init/Meta.html#Lean.Syntax.Command\">Lean.Command</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/DSL/Targets.lean#L215-L215","name":"Lake.DSL.LeanExeDecl","line":215,"kind":"def","docLink":"./Lake/DSL/Targets.html#Lake.DSL.LeanExeDecl","doc":"Define a new Lean binary executable target for the package.\nCan optionally be provided with a configuration of type `LeanExeConfig`.\nHas many forms:\n\n```lean\nlean_exe «target-name»\nlean_exe «target-name» { /- config opts -/ }\nlean_exe «target-name» where /- config opts -/\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Targets.html#Lake.DSL.LeanExeDecl\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">LeanExeDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/DSL/Targets.lean#L197-L213","name":"Lake.DSL.leanExeDecl","line":197,"kind":"def","docLink":"./Lake/DSL/Targets.html#Lake.DSL.leanExeDecl","doc":"Define a new Lean binary executable target for the package.\nCan optionally be provided with a configuration of type `LeanExeConfig`.\nHas many forms:\n\n```lean\nlean_exe «target-name»\nlean_exe «target-name» { /- config opts -/ }\nlean_exe «target-name» where /- config opts -/\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Targets.html#Lake.DSL.leanExeDecl\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">leanExeDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/DSL/Targets.lean#L194-L195","name":"Lake.DSL.instCoeLeanLibDeclCommand","line":194,"kind":"instance","docLink":"./Lake/DSL/Targets.html#Lake.DSL.instCoeLeanLibDeclCommand","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Targets.html#Lake.DSL.instCoeLeanLibDeclCommand\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">instCoeLeanLibDeclCommand</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Coe.html#Coe\">Coe</a> <a href=\"./Lake/DSL/Targets.html#Lake.DSL.LeanLibDecl\">Lake.DSL.LeanLibDecl</a> <a href=\"./Init/Meta.html#Lean.Syntax.Command\">Lean.Command</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/DSL/Targets.lean#L192-L192","name":"Lake.DSL.LeanLibDecl","line":192,"kind":"def","docLink":"./Lake/DSL/Targets.html#Lake.DSL.LeanLibDecl","doc":"Define a new Lean library target for the package.\nCan optionally be provided with a configuration of type `LeanLibConfig`.\nHas many forms:\n\n```lean\nlean_lib «target-name»\nlean_lib «target-name» { /- config opts -/ }\nlean_lib «target-name» where /- config opts -/\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Targets.html#Lake.DSL.LeanLibDecl\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">LeanLibDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/DSL/Targets.lean#L174-L190","name":"Lake.DSL.leanLibDecl","line":174,"kind":"def","docLink":"./Lake/DSL/Targets.html#Lake.DSL.leanLibDecl","doc":"Define a new Lean library target for the package.\nCan optionally be provided with a configuration of type `LeanLibConfig`.\nHas many forms:\n\n```lean\nlean_lib «target-name»\nlean_lib «target-name» { /- config opts -/ }\nlean_lib «target-name» where /- config opts -/\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Targets.html#Lake.DSL.leanLibDecl\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">leanLibDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/DSL/Targets.lean#L153-L167","name":"Lake.DSL.targetDecl","line":153,"kind":"def","docLink":"./Lake/DSL/Targets.html#Lake.DSL.targetDecl","doc":"Define a new custom target for the package. Has one form:\n\n```lean\ntarget «target-name» (pkg : NPackage _package.name) : α :=\n  /- build term of type `FetchM (BuildJob α)` -/\n```\n\nThe `pkg` parameter (and its type specifier) is optional.\nIt is of type `NPackage _package.name` to provably demonstrate the package\nprovided is the package in which the target is defined.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Targets.html#Lake.DSL.targetDecl\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">targetDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/DSL/Targets.lean#L133-L139","name":"Lake.DSL.mkTargetDecl","line":133,"kind":"def","docLink":"./Lake/DSL/Targets.html#Lake.DSL.mkTargetDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Targets.html#Lake.DSL.mkTargetDecl\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">mkTargetDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pkgName target : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Util/Family.html#Lake.FamilyDef\">Lake.FamilyDef</a> <a href=\"./Lake/Build/Data.html#Lake.CustomData\">Lake.CustomData</a> <span class=\"fn\">(<span class=\"fn\">pkgName</span>, <span class=\"fn\">target</span>)</span> <span class=\"fn\">(<a href=\"./Lake/Build/Job.html#Lake.BuildJob\">Lake.BuildJob</a> <span class=\"fn\">α</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\"><a href=\"./Lake/Config/Package.html#Lake.NPackage\">Lake.NPackage</a> <span class=\"fn\">pkgName</span></span> → <span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.FetchM\">Lake.FetchM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job.html#Lake.BuildJob\">Lake.BuildJob</a> <span class=\"fn\">α</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/TargetConfig.html#Lake.TargetDecl\">Lake.TargetDecl</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/DSL/Targets.lean#L112-L127","name":"Lake.DSL.libraryFacetDecl","line":112,"kind":"def","docLink":"./Lake/DSL/Targets.html#Lake.DSL.libraryFacetDecl","doc":"Define a new library facet. Has one form:\n\n```lean\nlibrary_facet «facet-name» (lib : LeanLib) : α :=\n  /- build term of type `FetchM (BuildJob α)` -/\n```\n\nThe `lib` parameter (and its type specifier) is optional.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Targets.html#Lake.DSL.libraryFacetDecl\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">libraryFacetDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/DSL/Targets.lean#L94-L100","name":"Lake.DSL.mkLibraryFacetDecl","line":94,"kind":"def","docLink":"./Lake/DSL/Targets.html#Lake.DSL.mkLibraryFacetDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Targets.html#Lake.DSL.mkLibraryFacetDecl\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">mkLibraryFacetDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(facet : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Util/Family.html#Lake.FamilyDef\">Lake.FamilyDef</a> <a href=\"./Lake/Build/Data.html#Lake.LibraryData\">Lake.LibraryData</a> <span class=\"fn\">facet</span> <span class=\"fn\">(<a href=\"./Lake/Build/Job.html#Lake.BuildJob\">Lake.BuildJob</a> <span class=\"fn\">α</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Lake/Config/LeanLib.html#Lake.LeanLib\">Lake.LeanLib</a> → <span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.FetchM\">Lake.FetchM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job.html#Lake.BuildJob\">Lake.BuildJob</a> <span class=\"fn\">α</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/FacetConfig.html#Lake.LibraryFacetDecl\">Lake.LibraryFacetDecl</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/DSL/Targets.lean#L77-L92","name":"Lake.DSL.packageFacetDecl","line":77,"kind":"def","docLink":"./Lake/DSL/Targets.html#Lake.DSL.packageFacetDecl","doc":"Define a new package facet. Has one form:\n\n```lean\npackage_facet «facet-name» (pkg : Package) : α :=\n  /- build term of type `FetchM (BuildJob α)` -/\n```\n\nThe `pkg` parameter (and its type specifier) is optional.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Targets.html#Lake.DSL.packageFacetDecl\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">packageFacetDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/DSL/Targets.lean#L59-L65","name":"Lake.DSL.mkPackageFacetDecl","line":59,"kind":"def","docLink":"./Lake/DSL/Targets.html#Lake.DSL.mkPackageFacetDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Targets.html#Lake.DSL.mkPackageFacetDecl\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">mkPackageFacetDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(facet : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Util/Family.html#Lake.FamilyDef\">Lake.FamilyDef</a> <a href=\"./Lake/Build/Data.html#Lake.PackageData\">Lake.PackageData</a> <span class=\"fn\">facet</span> <span class=\"fn\">(<a href=\"./Lake/Build/Job.html#Lake.BuildJob\">Lake.BuildJob</a> <span class=\"fn\">α</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Lake/Config/Package.html#Lake.Package\">Lake.Package</a> → <span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.FetchM\">Lake.FetchM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job.html#Lake.BuildJob\">Lake.BuildJob</a> <span class=\"fn\">α</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/FacetConfig.html#Lake.PackageFacetDecl\">Lake.PackageFacetDecl</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/DSL/Targets.lean#L42-L57","name":"Lake.DSL.moduleFacetDecl","line":42,"kind":"def","docLink":"./Lake/DSL/Targets.html#Lake.DSL.moduleFacetDecl","doc":"Define a new module facet. Has one form:\n\n```lean\nmodule_facet «facet-name» (mod : Module) : α :=\n  /- build term of type `FetchM (BuildJob α)` -/\n```\n\nThe `mod` parameter (and its type specifier) is optional.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Targets.html#Lake.DSL.moduleFacetDecl\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">moduleFacetDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/DSL/Targets.lean#L24-L30","name":"Lake.DSL.mkModuleFacetDecl","line":24,"kind":"def","docLink":"./Lake/DSL/Targets.html#Lake.DSL.mkModuleFacetDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Targets.html#Lake.DSL.mkModuleFacetDecl\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">mkModuleFacetDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(facet : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Util/Family.html#Lake.FamilyDef\">Lake.FamilyDef</a> <a href=\"./Lake/Build/Data.html#Lake.ModuleData\">Lake.ModuleData</a> <span class=\"fn\">facet</span> <span class=\"fn\">(<a href=\"./Lake/Build/Job.html#Lake.BuildJob\">Lake.BuildJob</a> <span class=\"fn\">α</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Lake/Config/Module.html#Lake.Module\">Lake.Module</a> → <span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.FetchM\">Lake.FetchM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job.html#Lake.BuildJob\">Lake.BuildJob</a> <span class=\"fn\">α</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Config/FacetConfig.html#Lake.ModuleFacetDecl\">Lake.ModuleFacetDecl</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/DSL/Targets.lean#L17-L18","name":"Lake.DSL.buildDeclSig","line":17,"kind":"def","docLink":"./Lake/DSL/Targets.html#Lake.DSL.buildDeclSig","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/DSL/Targets.html#Lake.DSL.buildDeclSig\"><span class=\"name\">Lake</span>.<span class=\"name\">DSL</span>.<span class=\"name\">buildDeclSig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"}]}