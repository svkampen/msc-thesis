{"name":"Lake.Build.Basic","instances":[{"typeNames":["Lake.JobCore"],"name":"Lake.instInhabitedJobCore","className":"Inhabited"},{"typeNames":["Lake.OpaqueJobTask"],"name":"Lake.instNonemptyOpaqueJobTask","className":"Nonempty"}],"imports":["Init","Lake.Util.Log","Lake.Util.Exit","Lake.Util.Lift","Lake.Config.Context","Lake.Build.Trace"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L116-L124","name":"Lake.logStep","line":116,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.logStep","doc":"Logs a build step with `message`.\n\n**Deprecated:**  Build steps are now managed by a top-level build monitor.\nAs a result, this no longer functions the way it used to. It now just logs the\n`message` via `logVerbose`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.logStep\"><span class=\"name\">Lake</span>.<span class=\"name\">logStep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Util/Log.html#Lake.MonadLog\">Lake.MonadLog</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(message : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L113-L114","name":"Lake.CoreBuildM","line":113,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.CoreBuildM","doc":"The internal core monad of Lake builds.  Not intended for user use. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.CoreBuildM\"><span class=\"name\">Lake</span>.<span class=\"name\">CoreBuildM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L110-L111","name":"Lake.getIsQuiet","line":110,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.getIsQuiet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.getIsQuiet\"><span class=\"name\">Lake</span>.<span class=\"name\">getIsQuiet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Functor\">Functor</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Basic.html#Lake.MonadBuild\">Lake.MonadBuild</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L107-L108","name":"Lake.getIsVerbose","line":107,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.getIsVerbose","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.getIsVerbose\"><span class=\"name\">Lake</span>.<span class=\"name\">getIsVerbose</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Functor\">Functor</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Basic.html#Lake.MonadBuild\">Lake.MonadBuild</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L104-L105","name":"Lake.getVerbosity","line":104,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.getVerbosity","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.getVerbosity\"><span class=\"name\">Lake</span>.<span class=\"name\">getVerbosity</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Functor\">Functor</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Basic.html#Lake.MonadBuild\">Lake.MonadBuild</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lake/Util/Log.html#Lake.Verbosity\">Lake.Verbosity</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L101-L102","name":"Lake.getNoBuild","line":101,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.getNoBuild","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.getNoBuild\"><span class=\"name\">Lake</span>.<span class=\"name\">getNoBuild</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Functor\">Functor</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Basic.html#Lake.MonadBuild\">Lake.MonadBuild</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L98-L99","name":"Lake.getTrustHash","line":98,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.getTrustHash","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.getTrustHash\"><span class=\"name\">Lake</span>.<span class=\"name\">getTrustHash</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Functor\">Functor</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Basic.html#Lake.MonadBuild\">Lake.MonadBuild</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L95-L96","name":"Lake.getIsOldMode","line":95,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.getIsOldMode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.getIsOldMode\"><span class=\"name\">Lake</span>.<span class=\"name\">getIsOldMode</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Functor\">Functor</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Basic.html#Lake.MonadBuild\">Lake.MonadBuild</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L92-L93","name":"Lake.getBuildConfig","line":92,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.getBuildConfig","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.getBuildConfig\"><span class=\"name\">Lake</span>.<span class=\"name\">getBuildConfig</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Functor\">Functor</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Basic.html#Lake.MonadBuild\">Lake.MonadBuild</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lake/Build/Basic.html#Lake.BuildConfig\">Lake.BuildConfig</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L89-L90","name":"Lake.getLeanTrace","line":89,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.getLeanTrace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.getLeanTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">getLeanTrace</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Functor\">Functor</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Basic.html#Lake.MonadBuild\">Lake.MonadBuild</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">Lake.BuildTrace</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L86-L87","name":"Lake.getBuildContext","line":86,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.getBuildContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.getBuildContext\"><span class=\"name\">Lake</span>.<span class=\"name\">getBuildContext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Build/Basic.html#Lake.MonadBuild\">Lake.MonadBuild</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lake/Build/Basic.html#Lake.BuildContext\">Lake.BuildContext</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L82-L84","name":"Lake.MonadBuild","line":82,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.MonadBuild","doc":"A monad equipped with a Lake build context. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.MonadBuild\"><span class=\"name\">Lake</span>.<span class=\"name\">MonadBuild</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L79-L80","name":"Lake.BuildT","line":79,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.BuildT","doc":"A transformer to equip a monad with a `BuildContext`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.BuildT\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildT</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L77-L77","name":"Lake.BuildContext.registeredJobs","line":77,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.BuildContext.registeredJobs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.BuildContext.registeredJobs\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildContext</span>.<span class=\"name\">registeredJobs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lake/Build/Basic.html#Lake.BuildContext\">Lake.BuildContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lake/Build/Basic.html#Lake.OpaqueJob\">Lake.OpaqueJob</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L76-L76","name":"Lake.BuildContext.leanTrace","line":76,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.BuildContext.leanTrace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.BuildContext.leanTrace\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildContext</span>.<span class=\"name\">leanTrace</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lake/Build/Basic.html#Lake.BuildContext\">Lake.BuildContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">Lake.BuildTrace</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L75-L75","name":"Lake.BuildContext.mk","line":75,"kind":"ctor","docLink":"./Lake/Build/Basic.html#Lake.BuildContext.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.BuildContext.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildContext</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toBuildConfig : <a href=\"./Lake/Build/Basic.html#Lake.BuildConfig\">Lake.BuildConfig</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(toContext : <a href=\"./Lake/Config/Context.html#Lake.Context\">Lake.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(leanTrace : <a href=\"./Lake/Build/Trace.html#Lake.BuildTrace\">Lake.BuildTrace</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(registeredJobs : <span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lake/Build/Basic.html#Lake.OpaqueJob\">Lake.OpaqueJob</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Basic.html#Lake.BuildContext\">Lake.BuildContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L74-L77","name":"Lake.BuildContext","line":74,"kind":"structure","docLink":"./Lake/Build/Basic.html#Lake.BuildContext","doc":"A Lake context with a build configuration and additional build data. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.BuildContext\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildContext</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lake/Build/Basic.html#Lake.BuildConfig\">Lake.BuildConfig</a>, <a href=\"./Lake/Config/Context.html#Lake.Context\">Lake.Context</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L71-L72","name":"Lake.OpaqueJob","line":71,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.OpaqueJob","doc":"A Lake job with an opaque value type in `Type`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.OpaqueJob\"><span class=\"name\">Lake</span>.<span class=\"name\">OpaqueJob</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L68-L69","name":"Lake.instNonemptyOpaqueJobTask","line":68,"kind":"instance","docLink":"./Lake/Build/Basic.html#Lake.instNonemptyOpaqueJobTask","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.instNonemptyOpaqueJobTask\"><span class=\"name\">Lake</span>.<span class=\"name\">instNonemptyOpaqueJobTask</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <a href=\"./Lake/Build/Basic.html#Lake.OpaqueJobTask\">Lake.OpaqueJobTask</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L68-L69","name":"Lake.OpaqueJobTask","line":68,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.OpaqueJobTask","doc":"A Lake job task with an opaque value type in `Type`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.OpaqueJobTask\"><span class=\"name\">Lake</span>.<span class=\"name\">OpaqueJobTask</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L68-L69","name":"Lake.OpaqueJobTask.nonemptyType","line":68,"kind":"opaque","docLink":"./Lake/Build/Basic.html#Lake.OpaqueJobTask.nonemptyType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.OpaqueJobTask.nonemptyType\"><span class=\"name\">Lake</span>.<span class=\"name\">OpaqueJobTask</span>.<span class=\"name\">nonemptyType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#NonemptyType\">NonemptyType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L66-L66","name":"Lake.instInhabitedJobCore","line":66,"kind":"instance","docLink":"./Lake/Build/Basic.html#Lake.instInhabitedJobCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.instInhabitedJobCore\"><span class=\"name\">Lake</span>.<span class=\"name\">instInhabitedJobCore</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a✝ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">a✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Lake/Build/Basic.html#Lake.JobCore\">Lake.JobCore</a> <span class=\"fn\">a✝</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L65-L65","name":"Lake.JobCore.optional","line":65,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.JobCore.optional","doc":"Whether this job failing should cause the build to fail. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.JobCore.optional\"><span class=\"name\">Lake</span>.<span class=\"name\">JobCore</span>.<span class=\"name\">optional</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lake/Build/Basic.html#Lake.JobCore\">Lake.JobCore</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L63-L63","name":"Lake.JobCore.caption","line":63,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.JobCore.caption","doc":"A caption for the job in Lake's build monitor.\nWill be formatted like `✔ [3/5] Ran <caption>`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.JobCore.caption\"><span class=\"name\">Lake</span>.<span class=\"name\">JobCore</span>.<span class=\"name\">caption</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lake/Build/Basic.html#Lake.JobCore\">Lake.JobCore</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L58-L58","name":"Lake.JobCore.task","line":58,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.JobCore.task","doc":"The Lean `Task` object for the job. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.JobCore.task\"><span class=\"name\">Lake</span>.<span class=\"name\">JobCore</span>.<span class=\"name\">task</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lake/Build/Basic.html#Lake.JobCore\">Lake.JobCore</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L56-L56","name":"Lake.JobCore.mk","line":56,"kind":"ctor","docLink":"./Lake/Build/Basic.html#Lake.JobCore.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.JobCore.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">JobCore</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(task : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(caption : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(optional : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Basic.html#Lake.JobCore\">Lake.JobCore</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L55-L66","name":"Lake.JobCore","line":55,"kind":"structure","docLink":"./Lake/Build/Basic.html#Lake.JobCore","doc":"The core structure of a Lake job. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.JobCore\"><span class=\"name\">Lake</span>.<span class=\"name\">JobCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L46-L53","name":"Lake.BuildConfig.showProgress","line":46,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.BuildConfig.showProgress","doc":"Whether the build should show progress information.\n\n`Verbosity.quiet` hides progress and, for a `noBuild`,\n`Verbosity.verbose` shows progress.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.BuildConfig.showProgress\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildConfig</span>.<span class=\"name\">showProgress</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(cfg : <a href=\"./Lake/Build/Basic.html#Lake.BuildConfig\">Lake.BuildConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L44-L44","name":"Lake.BuildConfig.ansiMode","line":44,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.BuildConfig.ansiMode","doc":"Whether to use ANSI escape codes in build output. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.BuildConfig.ansiMode\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildConfig</span>.<span class=\"name\">ansiMode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lake/Build/Basic.html#Lake.BuildConfig\">Lake.BuildConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Util/Log.html#Lake.AnsiMode\">Lake.AnsiMode</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L42-L42","name":"Lake.BuildConfig.out","line":42,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.BuildConfig.out","doc":"The stream to which Lake reports build progress.\nBy default, Lake uses `stderr`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.BuildConfig.out\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildConfig</span>.<span class=\"name\">out</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lake/Build/Basic.html#Lake.BuildConfig\">Lake.BuildConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Util/Log.html#Lake.OutStream\">Lake.OutStream</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L37-L37","name":"Lake.BuildConfig.outLv","line":37,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.BuildConfig.outLv","doc":"The minimum log level for an log entry to be reported. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.BuildConfig.outLv\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildConfig</span>.<span class=\"name\">outLv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lake/Build/Basic.html#Lake.BuildConfig\">Lake.BuildConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Util/Log.html#Lake.LogLevel\">Lake.LogLevel</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L35-L35","name":"Lake.BuildConfig.failLv","line":35,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.BuildConfig.failLv","doc":"Fail the top-level build if entries of at least this level have been logged.\n\nUnlike some build systems, this does **NOT** convert such log entries to\nerrors, and it does not abort jobs when warnings are logged (i.e.,\ndependent jobs will still continue unimpeded).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.BuildConfig.failLv\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildConfig</span>.<span class=\"name\">failLv</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lake/Build/Basic.html#Lake.BuildConfig\">Lake.BuildConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Util/Log.html#Lake.LogLevel\">Lake.LogLevel</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L27-L27","name":"Lake.BuildConfig.verbosity","line":27,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.BuildConfig.verbosity","doc":"Verbosity level (`-q`, `-v`, or neither). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.BuildConfig.verbosity\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildConfig</span>.<span class=\"name\">verbosity</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lake/Build/Basic.html#Lake.BuildConfig\">Lake.BuildConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Util/Log.html#Lake.Verbosity\">Lake.Verbosity</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L25-L25","name":"Lake.BuildConfig.noBuild","line":25,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.BuildConfig.noBuild","doc":"Early exit if a target has to be rebuilt. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.BuildConfig.noBuild\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildConfig</span>.<span class=\"name\">noBuild</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lake/Build/Basic.html#Lake.BuildConfig\">Lake.BuildConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L23-L23","name":"Lake.BuildConfig.trustHash","line":23,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.BuildConfig.trustHash","doc":"Whether to trust `.hash` files. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.BuildConfig.trustHash\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildConfig</span>.<span class=\"name\">trustHash</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lake/Build/Basic.html#Lake.BuildConfig\">Lake.BuildConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L21-L21","name":"Lake.BuildConfig.oldMode","line":21,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.BuildConfig.oldMode","doc":"Use modification times for trace checking. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.BuildConfig.oldMode\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildConfig</span>.<span class=\"name\">oldMode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lake/Build/Basic.html#Lake.BuildConfig\">Lake.BuildConfig</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L19-L19","name":"Lake.BuildConfig.mk","line":19,"kind":"ctor","docLink":"./Lake/Build/Basic.html#Lake.BuildConfig.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.BuildConfig.mk\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildConfig</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(oldMode trustHash noBuild : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(verbosity : <a href=\"./Lake/Util/Log.html#Lake.Verbosity\">Lake.Verbosity</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(failLv outLv : <a href=\"./Lake/Util/Log.html#Lake.LogLevel\">Lake.LogLevel</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(out : <a href=\"./Lake/Util/Log.html#Lake.OutStream\">Lake.OutStream</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ansiMode : <a href=\"./Lake/Util/Log.html#Lake.AnsiMode\">Lake.AnsiMode</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Build/Basic.html#Lake.BuildConfig\">Lake.BuildConfig</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L18-L44","name":"Lake.BuildConfig","line":18,"kind":"structure","docLink":"./Lake/Build/Basic.html#Lake.BuildConfig","doc":"Configuration options for a Lake build. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.BuildConfig\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildConfig</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Basic.lean#L15-L16","name":"Lake.noBuildCode","line":15,"kind":"def","docLink":"./Lake/Build/Basic.html#Lake.noBuildCode","doc":"Exit code to return if `--no-build` is set and a build is required. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Basic.html#Lake.noBuildCode\"><span class=\"name\">Lake</span>.<span class=\"name\">noBuildCode</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lake/Util/Exit.html#Lake.ExitCode\">Lake.ExitCode</a></div></div>"}]}