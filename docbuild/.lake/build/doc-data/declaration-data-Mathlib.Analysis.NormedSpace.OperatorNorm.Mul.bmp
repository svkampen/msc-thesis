{"name":"Mathlib.Analysis.NormedSpace.OperatorNorm.Mul","instances":[{"typeNames":[],"name":"NormedAlgebra.instRegularNormedAlgebra","className":"RegularNormedAlgebra"}],"imports":["Init","Mathlib.Analysis.NormedSpace.OperatorNorm.NormedSpace"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L279-L279","name":"ContinuousLinearMap.op_norm_lsmul","line":279,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.op_norm_lsmul","doc":"**Alias** of `ContinuousLinearMap.opNorm_lsmul`.\n\n---\n\nThe norm of `lsmul` equals 1 in any nontrivial normed group.\n\nThis is `ContinuousLinearMap.opNorm_lsmul_le` as an equality. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.op_norm_lsmul\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">op_norm_lsmul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedAlgebra\">NormedAlgebra</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜'</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.lsmul\">ContinuousLinearMap.lsmul</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L264-L277","name":"ContinuousLinearMap.opNorm_lsmul","line":264,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.opNorm_lsmul","doc":"The norm of `lsmul` equals 1 in any nontrivial normed group.\n\nThis is `ContinuousLinearMap.opNorm_lsmul_le` as an equality. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.opNorm_lsmul\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">opNorm_lsmul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedAlgebra\">NormedAlgebra</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜'</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.lsmul\">ContinuousLinearMap.lsmul</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L260-L260","name":"ContinuousLinearMap.op_nnnorm_mul","line":260,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.op_nnnorm_mul","doc":"**Alias** of `ContinuousLinearMap.opNNNorm_mul`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.op_nnnorm_mul\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">op_nnnorm_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalNormedRing\">NonUnitalNormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#RegularNormedAlgebra\">RegularNormedAlgebra</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mul\">ContinuousLinearMap.mul</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‖₊</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L256-L258","name":"ContinuousLinearMap.opNNNorm_mul","line":256,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.opNNNorm_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.opNNNorm_mul\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">opNNNorm_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalNormedRing\">NonUnitalNormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#RegularNormedAlgebra\">RegularNormedAlgebra</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mul\">ContinuousLinearMap.mul</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‖₊</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L254-L254","name":"ContinuousLinearMap.op_norm_mul","line":254,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.op_norm_mul","doc":"**Alias** of `ContinuousLinearMap.opNorm_mul`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.op_norm_mul\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">op_norm_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalNormedRing\">NonUnitalNormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#RegularNormedAlgebra\">RegularNormedAlgebra</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mul\">ContinuousLinearMap.mul</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L250-L252","name":"ContinuousLinearMap.opNorm_mul","line":250,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.opNorm_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.opNorm_mul\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">opNorm_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalNormedRing\">NonUnitalNormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#RegularNormedAlgebra\">RegularNormedAlgebra</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mul\">ContinuousLinearMap.mul</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L230-L230","name":"ContinuousLinearMap.op_norm_lsmul_le","line":230,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.op_norm_lsmul_le","doc":"**Alias** of `ContinuousLinearMap.opNorm_lsmul_le`.\n\n---\n\nThe norm of `lsmul` is at most 1 in any semi-normed group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.op_norm_lsmul_le\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">op_norm_lsmul_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedAlgebra\">NormedAlgebra</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜'</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.lsmul\">ContinuousLinearMap.lsmul</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L224-L228","name":"ContinuousLinearMap.opNorm_lsmul_le","line":224,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.opNorm_lsmul_le","doc":"The norm of `lsmul` is at most 1 in any semi-normed group. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.opNorm_lsmul_le\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">opNorm_lsmul_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedAlgebra\">NormedAlgebra</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜'</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.lsmul\">ContinuousLinearMap.lsmul</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L222-L222","name":"ContinuousLinearMap.op_norm_lsmul_apply_le","line":222,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.op_norm_lsmul_apply_le","doc":"**Alias** of `ContinuousLinearMap.opNorm_lsmul_apply_le`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.op_norm_lsmul_apply_le\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">op_norm_lsmul_apply_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedAlgebra\">NormedAlgebra</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜'</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">𝕜'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.lsmul\">ContinuousLinearMap.lsmul</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span>)</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L219-L220","name":"ContinuousLinearMap.opNorm_lsmul_apply_le","line":219,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.opNorm_lsmul_apply_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.opNorm_lsmul_apply_le\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">opNorm_lsmul_apply_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedAlgebra\">NormedAlgebra</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜'</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">𝕜'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.lsmul\">ContinuousLinearMap.lsmul</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span>)</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L210-L215","name":"ContinuousLinearMap.norm_toSpanSingleton","line":210,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.norm_toSpanSingleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.norm_toSpanSingleton\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">norm_toSpanSingleton</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap.toSpanSingleton\">ContinuousLinearMap.toSpanSingleton</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L204-L206","name":"ContinuousLinearMap.lsmul_apply","line":204,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.lsmul_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.lsmul_apply\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">lsmul_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedAlgebra\">NormedAlgebra</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜'</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">𝕜'</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">E</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.lsmul\">ContinuousLinearMap.lsmul</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span>)</span> <span class=\"fn\">c</span>)</span> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Algebra/Group/Operations.html#HSMul.hSMul\">•</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L199-L202","name":"ContinuousLinearMap.lsmul","line":199,"kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.lsmul","doc":"Scalar multiplication as a continuous bilinear map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.lsmul\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">lsmul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormedField\">NormedField</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedAlgebra\">NormedAlgebra</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜'</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">𝕜'</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">E</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">E</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L179-L188","name":"ContinuousLinearMap.ring_lmap_equiv_self","line":179,"kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.ring_lmap_equiv_self","doc":"If `M` is a normed space over `𝕜`, then the space of maps `𝕜 →L[𝕜] M` is linearly isometrically\nequivalent to `M`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.ring_lmap_equiv_self\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">ring_lmap_equiv_self</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(E : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">𝕜</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">E</span>)</span> <a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometryEquiv\">≃ₗᵢ[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometryEquiv\">]</a> <span class=\"fn\">E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L169-L177","name":"ContinuousLinearMap.ring_lmap_equiv_selfₗ","line":169,"kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.ring_lmap_equiv_selfₗ","doc":"If `M` is a normed space over `𝕜`, then the space of maps `𝕜 →L[𝕜] M` is linearly equivalent\nto `M`. (See `ring_lmap_equiv_self` for a stronger statement.) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.ring_lmap_equiv_selfₗ\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">ring_lmap_equiv_selfₗ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(E : <a href=\"./foundational_types.html\">Type</a> u_2)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#SeminormedAddCommGroup\">SeminormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">𝕜</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">E</span>)</span> <a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">≃ₗ[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Algebra/Module/Equiv/Defs.html#LinearEquiv\">]</a> <span class=\"fn\">E</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L159-L161","name":"ContinuousLinearMap.coe_mulₗᵢ","line":159,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.coe_mulₗᵢ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.coe_mulₗᵢ\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">coe_mulₗᵢ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#RegularNormedAlgebra\">RegularNormedAlgebra</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mulₗᵢ\">ContinuousLinearMap.mulₗᵢ</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mul\">ContinuousLinearMap.mul</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L153-L157","name":"ContinuousLinearMap.mulₗᵢ","line":153,"kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mulₗᵢ","doc":"Multiplication in a normed algebra as a linear isometry to the space of\ncontinuous linear maps. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mulₗᵢ\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">mulₗᵢ</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#RegularNormedAlgebra\">RegularNormedAlgebra</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">𝕜'</span> <a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometry\">→ₗᵢ[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Analysis/Normed/Operator/LinearIsometry.html#LinearIsometry\">]</a> <span class=\"fn\"><span class=\"fn\">𝕜'</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">𝕜'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L151-L151","name":"ContinuousLinearMap.op_nnnorm_mul_apply","line":151,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.op_nnnorm_mul_apply","doc":"**Alias** of `ContinuousLinearMap.opNNNorm_mul_apply`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.op_nnnorm_mul_apply\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">op_nnnorm_mul_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#RegularNormedAlgebra\">RegularNormedAlgebra</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">𝕜'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‖</a><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mul\">ContinuousLinearMap.mul</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span>)</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‖₊</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‖₊</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L147-L149","name":"ContinuousLinearMap.opNNNorm_mul_apply","line":147,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.opNNNorm_mul_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.opNNNorm_mul_apply\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">opNNNorm_mul_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#RegularNormedAlgebra\">RegularNormedAlgebra</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">𝕜'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‖</a><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mul\">ContinuousLinearMap.mul</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span>)</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‖₊</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NNNorm.nnnorm\">‖₊</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L145-L145","name":"ContinuousLinearMap.op_norm_mul_apply","line":145,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.op_norm_mul_apply","doc":"**Alias** of `ContinuousLinearMap.opNorm_mul_apply`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.op_norm_mul_apply\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">op_norm_mul_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#RegularNormedAlgebra\">RegularNormedAlgebra</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">𝕜'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mul\">ContinuousLinearMap.mul</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span>)</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L141-L143","name":"ContinuousLinearMap.opNorm_mul_apply","line":141,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.opNorm_mul_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.opNorm_mul_apply\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">opNorm_mul_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#RegularNormedAlgebra\">RegularNormedAlgebra</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">𝕜'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mul\">ContinuousLinearMap.mul</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span>)</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L138-L139","name":"ContinuousLinearMap.isometry_mul","line":138,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.isometry_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.isometry_mul\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">isometry_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#RegularNormedAlgebra\">RegularNormedAlgebra</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Isometry.html#Isometry\">Isometry</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mul\">ContinuousLinearMap.mul</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L128-L134","name":"NormedAlgebra.instRegularNormedAlgebra","line":128,"kind":"instance","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#NormedAlgebra.instRegularNormedAlgebra","doc":"Every (unital) normed algebra such that `‖1‖ = 1` is a `RegularNormedAlgebra`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#NormedAlgebra.instRegularNormedAlgebra\"><span class=\"name\">NormedAlgebra</span>.<span class=\"name\">instRegularNormedAlgebra</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜 : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜' : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#SeminormedRing\">SeminormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedAlgebra\">NormedAlgebra</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NormOneClass\">NormOneClass</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#RegularNormedAlgebra\">RegularNormedAlgebra</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L126-L126","name":"RegularNormedAlgebra.isometry_mul'","line":126,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#RegularNormedAlgebra.isometry_mul'","doc":"The left regular representation of the algebra on itself is an isometry. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#RegularNormedAlgebra.isometry_mul'\"><span class=\"name\">RegularNormedAlgebra</span>.<span class=\"name\">isometry_mul'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst✝ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst✝¹ : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">𝕜'</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst✝² : <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst✝³ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst✝⁴ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#RegularNormedAlgebra\">RegularNormedAlgebra</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Isometry.html#Isometry\">Isometry</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mul\">ContinuousLinearMap.mul</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L124-L124","name":"RegularNormedAlgebra.mk","line":124,"kind":"ctor","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#RegularNormedAlgebra.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#RegularNormedAlgebra.mk\"><span class=\"name\">RegularNormedAlgebra</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(isometry_mul' : <span class=\"fn\"><a href=\"./Mathlib/Topology/MetricSpace/Isometry.html#Isometry\">Isometry</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mul\">ContinuousLinearMap.mul</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#RegularNormedAlgebra\">RegularNormedAlgebra</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L116-L126","name":"RegularNormedAlgebra","line":116,"kind":"class","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#RegularNormedAlgebra","doc":"This is a mixin class for non-unital normed algebras which states that the left-regular\nrepresentation of the algebra on itself is isometric. Every unital normed algebra with `‖1‖ = 1` is\na regular normed algebra (see `NormedAlgebra.instRegularNormedAlgebra`). In addition, so is every\nC⋆-algebra, non-unital included (see `CStarRing.instRegularNormedAlgebra`), but there are yet other\nexamples. Any algebra with an approximate identity (e.g., $$L^1$$) is also regular.\n\nThis is a useful class because it gives rise to a nice norm on the unitization; in particular it is\na C⋆-norm when the norm on `A` is a C⋆-norm. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#RegularNormedAlgebra\"><span class=\"name\">RegularNormedAlgebra</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L114-L114","name":"ContinuousLinearMap.op_norm_mulLeftRight_le","line":114,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.op_norm_mulLeftRight_le","doc":"**Alias** of `ContinuousLinearMap.opNorm_mulLeftRight_le`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.op_norm_mulLeftRight_le\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">op_norm_mulLeftRight_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mulLeftRight\">ContinuousLinearMap.mulLeftRight</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L110-L112","name":"ContinuousLinearMap.opNorm_mulLeftRight_le","line":110,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.opNorm_mulLeftRight_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.opNorm_mulLeftRight_le\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">opNorm_mulLeftRight_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mulLeftRight\">ContinuousLinearMap.mulLeftRight</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L97-L98","name":"ContinuousLinearMap.op_norm_mulLeftRight_apply_le","line":97,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.op_norm_mulLeftRight_apply_le","doc":"**Alias** of `ContinuousLinearMap.opNorm_mulLeftRight_apply_le`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.op_norm_mulLeftRight_apply_le\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">op_norm_mulLeftRight_apply_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">𝕜'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mulLeftRight\">ContinuousLinearMap.mulLeftRight</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span>)</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L94-L95","name":"ContinuousLinearMap.opNorm_mulLeftRight_apply_le","line":94,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.opNorm_mulLeftRight_apply_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.opNorm_mulLeftRight_apply_le\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">opNorm_mulLeftRight_apply_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">𝕜'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mulLeftRight\">ContinuousLinearMap.mulLeftRight</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span>)</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L90-L92","name":"ContinuousLinearMap.op_norm_mulLeftRight_apply_apply_le","line":90,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.op_norm_mulLeftRight_apply_apply_le","doc":"**Alias** of `ContinuousLinearMap.opNorm_mulLeftRight_apply_apply_le`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.op_norm_mulLeftRight_apply_apply_le\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">op_norm_mulLeftRight_apply_apply_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x y : <span class=\"fn\">𝕜'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mulLeftRight\">ContinuousLinearMap.mulLeftRight</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span>)</span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">y</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">y</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L83-L88","name":"ContinuousLinearMap.opNorm_mulLeftRight_apply_apply_le","line":83,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.opNorm_mulLeftRight_apply_apply_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.opNorm_mulLeftRight_apply_apply_le\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">opNorm_mulLeftRight_apply_apply_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x y : <span class=\"fn\">𝕜'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mulLeftRight\">ContinuousLinearMap.mulLeftRight</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span>)</span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">y</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">y</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L79-L81","name":"ContinuousLinearMap.mulLeftRight_apply","line":79,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mulLeftRight_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mulLeftRight_apply\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">mulLeftRight_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x y z : <span class=\"fn\">𝕜'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mulLeftRight\">ContinuousLinearMap.mulLeftRight</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span>)</span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">y</span>)</span> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">z</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L73-L77","name":"ContinuousLinearMap.mulLeftRight","line":73,"kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mulLeftRight","doc":"Simultaneous left- and right-multiplication in a non-unital normed algebra, considered as a\ncontinuous trilinear map. This is akin to its non-continuous version `LinearMap.mulLeftRight`,\nbut there is a minor difference: `LinearMap.mulLeftRight` is uncurried. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mulLeftRight\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">mulLeftRight</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">𝕜'</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">𝕜'</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">𝕜'</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">𝕜'</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L69-L71","name":"NonUnitalAlgHom.coe_Lmul","line":69,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#NonUnitalAlgHom.coe_Lmul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#NonUnitalAlgHom.coe_Lmul\"><span class=\"name\">NonUnitalAlgHom</span>.<span class=\"name\">coe_Lmul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#NonUnitalAlgHom.Lmul\">NonUnitalAlgHom.Lmul</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mul\">ContinuousLinearMap.mul</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L55-L66","name":"NonUnitalAlgHom.Lmul","line":55,"kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#NonUnitalAlgHom.Lmul","doc":"Multiplication on the left in a non-unital normed algebra `𝕜'` as a non-unital algebra\nhomomorphism into the algebra of *continuous* linear maps. This is the left regular representation\nof `A` acting on itself.\n\nThis has more algebraic structure than `ContinuousLinearMap.mul`, but there is no longer continuity\nbundled in the first coordinate.  An alternative viewpoint is that this upgrades\n`NonUnitalAlgHom.lmul` from a homomorphism into linear maps to a homomorphism into *continuous*\nlinear maps. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#NonUnitalAlgHom.Lmul\"><span class=\"name\">NonUnitalAlgHom</span>.<span class=\"name\">Lmul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">𝕜'</span> <a href=\"./Mathlib/Algebra/Algebra/NonUnitalHom.html#NonUnitalAlgHom\">→ₙₐ[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Algebra/Algebra/NonUnitalHom.html#NonUnitalAlgHom\">]</a> <span class=\"fn\"><span class=\"fn\">𝕜'</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">𝕜'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L53-L53","name":"ContinuousLinearMap.op_norm_mul_le","line":53,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.op_norm_mul_le","doc":"**Alias** of `ContinuousLinearMap.opNorm_mul_le`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.op_norm_mul_le\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">op_norm_mul_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mul\">ContinuousLinearMap.mul</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L50-L51","name":"ContinuousLinearMap.opNorm_mul_le","line":50,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.opNorm_mul_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.opNorm_mul_le\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">opNorm_mul_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mul\">ContinuousLinearMap.mul</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L48-L48","name":"ContinuousLinearMap.op_norm_mul_apply_le","line":48,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.op_norm_mul_apply_le","doc":"**Alias** of `ContinuousLinearMap.opNorm_mul_apply_le`."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.op_norm_mul_apply_le\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">op_norm_mul_apply_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">𝕜'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mul\">ContinuousLinearMap.mul</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span>)</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L44-L46","name":"ContinuousLinearMap.opNorm_mul_apply_le","line":44,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.opNorm_mul_apply_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.opNorm_mul_apply_le\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">opNorm_mul_apply_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">𝕜'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mul\">ContinuousLinearMap.mul</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span>)</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\">x</span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L40-L42","name":"ContinuousLinearMap.mul_apply'","line":40,"kind":"theorem","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mul_apply'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mul_apply'\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">mul_apply'</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x y : <span class=\"fn\">𝕜'</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mul\">ContinuousLinearMap.mul</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span>)</span> <span class=\"fn\">x</span>)</span> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.lean#L36-L38","name":"ContinuousLinearMap.mul","line":36,"kind":"def","docLink":"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mul","doc":"Multiplication in a non-unital normed algebra as a continuous bilinear map. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/NormedSpace/OperatorNorm/Mul.html#ContinuousLinearMap.mul\"><span class=\"name\">ContinuousLinearMap</span>.<span class=\"name\">mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜 : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NontriviallyNormedField\">NontriviallyNormedField</a> <span class=\"fn\">𝕜</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(𝕜' : <a href=\"./foundational_types.html\">Type</a> u_3)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Field/Basic.html#NonUnitalSeminormedRing\">NonUnitalSeminormedRing</a> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#IsScalarTower\">IsScalarTower</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Action/Defs.html#SMulCommClass\">SMulCommClass</a> <span class=\"fn\">𝕜</span> <span class=\"fn\">𝕜'</span> <span class=\"fn\">𝕜'</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">𝕜'</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\"><span class=\"fn\">𝕜'</span> <a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">→L[</a><span class=\"fn\">𝕜</span><a href=\"./Mathlib/Topology/Algebra/Module/Basic.html#ContinuousLinearMap\">]</a> <span class=\"fn\">𝕜'</span></span></span></div></div>"}]}