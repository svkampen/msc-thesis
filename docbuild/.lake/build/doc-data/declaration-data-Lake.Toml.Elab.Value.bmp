{"name":"Lake.Toml.Elab.Value","instances":[],"imports":["Init","Lean.CoreM","Lake.Toml.Data.Value","Lake.Toml.Grammar"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/Elab/Value.lean#L231-L243","name":"Lake.Toml.elabVal","line":231,"kind":"opaque","docLink":"./Lake/Toml/Elab/Value.html#Lake.Toml.elabVal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Elab/Value.html#Lake.Toml.elabVal\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">elabVal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lake.Toml.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Lake/Toml/Data/Value.html#Lake.Toml.Value\">Lake.Toml.Value</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/Elab/Value.lean#L207-L229","name":"Lake.Toml.elabInlineTable","line":207,"kind":"def","docLink":"./Lake/Toml/Elab/Value.html#Lake.Toml.elabInlineTable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Elab/Value.html#Lake.Toml.elabInlineTable\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">elabInlineTable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lake.Toml.inlineTable</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(elabVal : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lake.Toml.val</span></span> → <span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Lake/Toml/Data/Value.html#Lake.Toml.Value\">Lake.Toml.Value</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Lake/Toml/Data/Value.html#Lake.Toml.Table\">Lake.Toml.Table</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/Elab/Value.lean#L202-L205","name":"Lake.Toml.elabArray","line":202,"kind":"def","docLink":"./Lake/Toml/Elab/Value.html#Lake.Toml.elabArray","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Elab/Value.html#Lake.Toml.elabArray\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">elabArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lake.Toml.array</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(elabVal : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lake.Toml.val</span></span> → <span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/Elab/Value.lean#L191-L196","name":"Lake.Toml.elabSimpleKey","line":191,"kind":"def","docLink":"./Lake/Toml/Elab/Value.html#Lake.Toml.elabSimpleKey","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Elab/Value.html#Lake.Toml.elabSimpleKey\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">elabSimpleKey</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lake.Toml.simpleKey</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/Elab/Value.lean#L188-L189","name":"Lake.Toml.elabUnquotedKey","line":188,"kind":"def","docLink":"./Lake/Toml/Elab/Value.html#Lake.Toml.elabUnquotedKey","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Elab/Value.html#Lake.Toml.elabUnquotedKey\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">elabUnquotedKey</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lake.Toml.unquotedKey</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/Elab/Value.lean#L180-L186","name":"Lake.Toml.elabString","line":180,"kind":"def","docLink":"./Lake/Toml/Elab/Value.html#Lake.Toml.elabString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Elab/Value.html#Lake.Toml.elabString\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">elabString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lake.Toml.string</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/Elab/Value.lean#L176-L178","name":"Lake.Toml.elabMlBasicString","line":176,"kind":"def","docLink":"./Lake/Toml/Elab/Value.html#Lake.Toml.elabMlBasicString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Elab/Value.html#Lake.Toml.elabMlBasicString\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">elabMlBasicString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lake.Toml.mlBasicString</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/Elab/Value.lean#L172-L174","name":"Lake.Toml.elabMlLiteralString","line":172,"kind":"def","docLink":"./Lake/Toml/Elab/Value.html#Lake.Toml.elabMlLiteralString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Elab/Value.html#Lake.Toml.elabMlLiteralString\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">elabMlLiteralString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lake.Toml.mlLiteralString</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/Elab/Value.lean#L164-L170","name":"Lake.Toml.dropInitialNewline","line":164,"kind":"def","docLink":"./Lake/Toml/Elab/Value.html#Lake.Toml.dropInitialNewline","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Elab/Value.html#Lake.Toml.dropInitialNewline\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">dropInitialNewline</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/Elab/Value.lean#L160-L162","name":"Lake.Toml.elabBasicString","line":160,"kind":"def","docLink":"./Lake/Toml/Elab/Value.html#Lake.Toml.elabBasicString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Elab/Value.html#Lake.Toml.elabBasicString\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">elabBasicString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lake.Toml.basicString</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/Elab/Value.lean#L126-L158","name":"Lake.Toml.elabBasicStringCore","line":126,"kind":"opaque","docLink":"./Lake/Toml/Elab/Value.html#Lake.Toml.elabBasicStringCore","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Elab/Value.html#Lake.Toml.elabBasicStringCore\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">elabBasicStringCore</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lit : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a> := <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(out : <a href=\"./Init/Prelude.html#String\">String</a> := <span class=\"fn\">&quot;&quot;</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/Elab/Value.lean#L123-L124","name":"Lake.Toml.decodeHexDigits","line":123,"kind":"def","docLink":"./Lake/Toml/Elab/Value.html#Lake.Toml.decodeHexDigits","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Elab/Value.html#Lake.Toml.decodeHexDigits\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">decodeHexDigits</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#Substring\">Substring</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/Elab/Value.lean#L120-L121","name":"Lake.Toml.elabLiteralString","line":120,"kind":"def","docLink":"./Lake/Toml/Elab/Value.html#Lake.Toml.elabLiteralString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Elab/Value.html#Lake.Toml.elabLiteralString\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">elabLiteralString</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lake.Toml.literalString</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/Elab/Value.lean#L110-L114","name":"Lake.Toml.elabDateTime","line":110,"kind":"def","docLink":"./Lake/Toml/Elab/Value.html#Lake.Toml.elabDateTime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Elab/Value.html#Lake.Toml.elabDateTime\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">elabDateTime</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lake.Toml.dateTime</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Lake/Toml/Data/DateTime.html#Lake.Toml.DateTime\">Lake.Toml.DateTime</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/Elab/Value.lean#L105-L108","name":"Lake.Toml.elabHexNum","line":105,"kind":"def","docLink":"./Lake/Toml/Elab/Value.html#Lake.Toml.elabHexNum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Elab/Value.html#Lake.Toml.elabHexNum\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">elabHexNum</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lake.Toml.hexNum</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/Elab/Value.lean#L100-L103","name":"Lake.Toml.decodeHexDigit","line":100,"kind":"def","docLink":"./Lake/Toml/Elab/Value.html#Lake.Toml.decodeHexDigit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Elab/Value.html#Lake.Toml.decodeHexDigit\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">decodeHexDigit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/Elab/Value.lean#L95-L98","name":"Lake.Toml.elabOctNum","line":95,"kind":"def","docLink":"./Lake/Toml/Elab/Value.html#Lake.Toml.elabOctNum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Elab/Value.html#Lake.Toml.elabOctNum\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">elabOctNum</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lake.Toml.octNum</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/Elab/Value.lean#L90-L93","name":"Lake.Toml.elabBinNum","line":90,"kind":"def","docLink":"./Lake/Toml/Elab/Value.html#Lake.Toml.elabBinNum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Elab/Value.html#Lake.Toml.elabBinNum\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">elabBinNum</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lake.Toml.binNum</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/Elab/Value.lean#L87-L88","name":"Lake.Toml.elabFloat","line":87,"kind":"def","docLink":"./Lake/Toml/Elab/Value.html#Lake.Toml.elabFloat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Elab/Value.html#Lake.Toml.elabFloat\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">elabFloat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lake.Toml.float</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Data/Float.html#Float\">Float</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/Elab/Value.lean#L76-L85","name":"Lake.Toml.decodeFloat","line":76,"kind":"def","docLink":"./Lake/Toml/Elab/Value.html#Lake.Toml.decodeFloat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Elab/Value.html#Lake.Toml.decodeFloat\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">decodeFloat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Float.html#Float\">Float</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/Elab/Value.lean#L65-L74","name":"Lake.Toml.decodeFrExp","line":65,"kind":"def","docLink":"./Lake/Toml/Elab/Value.html#Lake.Toml.decodeFrExp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Elab/Value.html#Lake.Toml.decodeFrExp\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">decodeFrExp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/Elab/Value.lean#L57-L63","name":"Lake.Toml.decodeMantissa","line":57,"kind":"def","docLink":"./Lake/Toml/Elab/Value.html#Lake.Toml.decodeMantissa","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Elab/Value.html#Lake.Toml.decodeMantissa\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">decodeMantissa</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/Elab/Value.lean#L54-L55","name":"Lake.Toml.elabDecInt","line":54,"kind":"def","docLink":"./Lake/Toml/Elab/Value.html#Lake.Toml.elabDecInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Elab/Value.html#Lake.Toml.elabDecInt\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">elabDecInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lake.Toml.decInt</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/Elab/Value.lean#L47-L52","name":"Lake.Toml.decodeDecInt","line":47,"kind":"def","docLink":"./Lake/Toml/Elab/Value.html#Lake.Toml.decodeDecInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Elab/Value.html#Lake.Toml.decodeDecInt\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">decodeDecInt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/Elab/Value.lean#L39-L45","name":"Lake.Toml.decodeSign","line":39,"kind":"def","docLink":"./Lake/Toml/Elab/Value.html#Lake.Toml.decodeSign","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Elab/Value.html#Lake.Toml.decodeSign\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">decodeSign</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Bool\">Bool</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/Elab/Value.lean#L35-L37","name":"Lake.Toml.decodeDecNum","line":35,"kind":"def","docLink":"./Lake/Toml/Elab/Value.html#Lake.Toml.decodeDecNum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Elab/Value.html#Lake.Toml.decodeDecNum\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">decodeDecNum</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/Elab/Value.lean#L25-L29","name":"Lake.Toml.elabBoolean","line":25,"kind":"def","docLink":"./Lake/Toml/Elab/Value.html#Lake.Toml.elabBoolean","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Elab/Value.html#Lake.Toml.elabBoolean\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">elabBoolean</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`Lake.Toml.boolean</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/Elab/Value.lean#L20-L23","name":"Lake.Toml.elabLit","line":20,"kind":"def","docLink":"./Lake/Toml/Elab/Value.html#Lake.Toml.elabLit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/Elab/Value.html#Lake.Toml.elabLit\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">elabLit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"}]}