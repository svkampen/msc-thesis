{"name":"Batteries.Lean.Syntax","instances":[],"imports":["Init","Lean.Syntax"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/batteries/blob/8d6c853f11a5172efa0e96b9f2be1a83d861cdd9/Batteries/Lean/Syntax.lean#L14-L21","name":"Lean.TSyntax.replaceM","line":14,"kind":"def","docLink":"./Batteries/Lean/Syntax.html#Lean.TSyntax.replaceM","doc":"Applies the given function to every subsyntax.\n\nLike `Syntax.replaceM` but for typed syntax.\n(Note there are no guarantees of type correctness here.)\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Batteries/Lean/Syntax.html#Lean.TSyntax.replaceM\"><span class=\"name\">Lean</span>.<span class=\"name\">TSyntax</span>.<span class=\"name\">replaceM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKinds\">Lean.SyntaxNodeKinds</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> → <span class=\"fn\"><span class=\"fn\">M</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stx : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">M</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">k</span>)</span></span></div></div>"}]}