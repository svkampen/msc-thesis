{"name":"Mathlib.RingTheory.UniqueFactorizationDomain.Ideal","instances":[],"imports":["Init","Mathlib.RingTheory.Ideal.Operations","Mathlib.RingTheory.UniqueFactorizationDomain.Defs"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/UniqueFactorizationDomain/Ideal.lean#L47-L56","name":"WfDvdMonoid.of_setOf_isPrincipal_wellFoundedOn_gt","line":47,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain/Ideal.html#WfDvdMonoid.of_setOf_isPrincipal_wellFoundedOn_gt","doc":"The ascending chain condition on principal ideals in a domain is sufficient to prove that\nthe domain is `WfDvdMonoid`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain/Ideal.html#WfDvdMonoid.of_setOf_isPrincipal_wellFoundedOn_gt\"><span class=\"name\">WfDvdMonoid</span>.<span class=\"name\">of_setOf_isPrincipal_wellFoundedOn_gt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">α</span></span> | <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Span/Defs.html#Submodule.IsPrincipal\">Submodule.IsPrincipal</a> <span class=\"fn\">I</span></span>}</span>.WellFoundedOn</span> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">x2</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain/Defs.html#WfDvdMonoid\">WfDvdMonoid</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/UniqueFactorizationDomain/Ideal.lean#L36-L45","name":"Ideal.setOf_isPrincipal_wellFoundedOn_gt","line":36,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain/Ideal.html#Ideal.setOf_isPrincipal_wellFoundedOn_gt","doc":"The ascending chain condition on principal ideals holds in a `WfDvdMonoid` domain. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain/Ideal.html#Ideal.setOf_isPrincipal_wellFoundedOn_gt\"><span class=\"name\">Ideal</span>.<span class=\"name\">setOf_isPrincipal_wellFoundedOn_gt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain/Defs.html#WfDvdMonoid\">WfDvdMonoid</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">I</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">α</span></span> | <span class=\"fn\"><a href=\"./Mathlib/LinearAlgebra/Span/Defs.html#Submodule.IsPrincipal\">Submodule.IsPrincipal</a> <span class=\"fn\">I</span></span>}</span>.WellFoundedOn</span> <span class=\"fn\">fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">α</span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">x2</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/UniqueFactorizationDomain/Ideal.lean#L21-L32","name":"Ideal.IsPrime.exists_mem_prime_of_ne_bot","line":21,"kind":"theorem","docLink":"./Mathlib/RingTheory/UniqueFactorizationDomain/Ideal.html#Ideal.IsPrime.exists_mem_prime_of_ne_bot","doc":"Every non-zero prime ideal in a unique factorization domain contains a prime element. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/UniqueFactorizationDomain/Ideal.html#Ideal.IsPrime.exists_mem_prime_of_ne_bot\"><span class=\"name\">Ideal</span>.<span class=\"name\">IsPrime</span>.<span class=\"name\">exists_mem_prime_of_ne_bot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommSemiring\">CommSemiring</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/UniqueFactorizationDomain/Defs.html#UniqueFactorizationMonoid\">UniqueFactorizationMonoid</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Defs.html#Ideal\">Ideal</a> <span class=\"fn\">R</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hI₂ : <span class=\"fn\"><span class=\"fn\">I</span>.IsPrime</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hI : <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Core.html#Ne\">≠</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">x</span> ∈ <span class=\"fn\">I</span>, <span class=\"fn\"><a href=\"./Mathlib/Algebra/Prime/Defs.html#Prime\">Prime</a> <span class=\"fn\">x</span></span></span></div></div>"}]}