{"name":"Mathlib.Tactic.Linter.TextBased","instances":[{"typeNames":["Mathlib.Linter.TextBased.BroadImports"],"name":"Mathlib.Linter.TextBased.instBEqBroadImports","className":"BEq"},{"typeNames":["Mathlib.Linter.TextBased.StyleError"],"name":"Mathlib.Linter.TextBased.instBEqStyleError","className":"BEq"},{"typeNames":["Mathlib.Linter.TextBased.ErrorFormat"],"name":"Mathlib.Linter.TextBased.instBEqErrorFormat","className":"BEq"},{"typeNames":["Mathlib.Linter.TextBased.ComparisonResult"],"name":"Mathlib.Linter.TextBased.instBEqComparisonResult","className":"BEq"}],"imports":["Init","Batteries.Data.String.Matcher","Mathlib.Data.Nat.Notation"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L275-L316","name":"Mathlib.Linter.TextBased.lintModules","line":275,"kind":"def","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.lintModules","doc":"Lint a collection of modules for style violations.\nPrint formatted errors for all unexpected style violations to standard output;\ncorrect automatically fixable style errors if configured so.\nReturn the number of files which had new style errors.\n`moduleNames` are all the modules to lint,\n`mode` specifies what kind of output this script should produce,\n`fix` configures whether fixable errors should be corrected in-place. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.lintModules\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">lintModules</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(moduleNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(style : <a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorFormat\">Mathlib.Linter.TextBased.ErrorFormat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fix : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L237-L273","name":"Mathlib.Linter.TextBased.lintFile","line":237,"kind":"def","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.lintFile","doc":"Read a file and apply all text-based linters.\nReturn a list of all unexpected errors, and, if some errors could be fixed automatically,\nthe collection of all lines with every automatic fix applied.\n`exceptions` are any pre-existing style exceptions for this file. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.lintFile\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">lintFile</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(path : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exceptions : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorContext\">Mathlib.Linter.TextBased.ErrorContext</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorContext\">Mathlib.Linter.TextBased.ErrorContext</a></span> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L231-L234","name":"Mathlib.Linter.TextBased.allLinters","line":231,"kind":"def","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.allLinters","doc":"All text-based linters registered in this file. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.allLinters\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">allLinters</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.TextbasedLinter\">Mathlib.Linter.TextBased.TextbasedLinter</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L222-L227","name":"Mathlib.Linter.TextBased.isImportsOnlyFile","line":222,"kind":"def","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.isImportsOnlyFile","doc":"Whether a collection of lines consists *only* of imports, blank lines and single-line comments.\nIn practice, this means it's an imports-only file and exempt from almost all linting. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.isImportsOnlyFile\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">isImportsOnlyFile</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lines : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L211-L219","name":"Mathlib.Linter.TextBased.trailingWhitespaceLinter","line":211,"kind":"def","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.trailingWhitespaceLinter","doc":"Lint a collection of input strings if one of them contains trailing whitespace. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.trailingWhitespaceLinter\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">trailingWhitespaceLinter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.TextbasedLinter\">Mathlib.Linter.TextBased.TextbasedLinter</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L201-L208","name":"Mathlib.Linter.TextBased.adaptationNoteLinter","line":201,"kind":"def","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.adaptationNoteLinter","doc":"Lint on any occurrences of the string \"Adaptation note:\" or variants thereof. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.adaptationNoteLinter\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">adaptationNoteLinter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.TextbasedLinter\">Mathlib.Linter.TextBased.TextbasedLinter</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L191-L196","name":"Mathlib.Linter.TextBased.TextbasedLinter","line":191,"kind":"def","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.TextbasedLinter","doc":"Core logic of a text based linter: given a collection of lines,\nreturn an array of all style errors with line numbers. If possible,\nalso return the collection of all lines, changed as needed to fix the linter errors.\n(Such automatic fixes are only possible for some kinds of `StyleError`s.)\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.TextbasedLinter\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">TextbasedLinter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L184-L189","name":"Mathlib.Linter.TextBased.formatErrors","line":184,"kind":"def","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.formatErrors","doc":"Print information about all errors encountered to standard output.\n`style` specifies if the error should be formatted for humans to read, github problem matchers\nto consume, or for the style exceptions file. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.formatErrors\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">formatErrors</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(errors : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorContext\">Mathlib.Linter.TextBased.ErrorContext</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(style : <a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorFormat\">Mathlib.Linter.TextBased.ErrorFormat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L178-L182","name":"Mathlib.Linter.TextBased.parseStyleExceptions","line":178,"kind":"def","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.parseStyleExceptions","doc":"Parse all style exceptions for a line of input.\nReturn an array of all exceptions which could be parsed: invalid input is ignored. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.parseStyleExceptions\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">parseStyleExceptions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lines : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorContext\">Mathlib.Linter.TextBased.ErrorContext</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L152-L176","name":"Mathlib.Linter.TextBased.parse?_errorContext","line":152,"kind":"def","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.parse?_errorContext","doc":"Try parsing an `ErrorContext` from a string: return `some` if successful, `none` otherwise. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.parse?_errorContext\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">parse?_errorContext</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(line : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorContext\">Mathlib.Linter.TextBased.ErrorContext</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L132-L150","name":"Mathlib.Linter.TextBased.outputMessage","line":132,"kind":"def","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.outputMessage","doc":"Output the formatted error message, containing its context.\n`style` specifies if the error should be formatted for humans to read, github problem matchers\nto consume, or for the style exceptions file. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.outputMessage\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">outputMessage</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(errctx : <a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorContext\">Mathlib.Linter.TextBased.ErrorContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(style : <a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorFormat\">Mathlib.Linter.TextBased.ErrorFormat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L127-L130","name":"Mathlib.Linter.TextBased.ErrorContext.find?_comparable","line":127,"kind":"def","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorContext.find?_comparable","doc":"Find the first style exception in `exceptions` (if any) which covers a style exception `e`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorContext.find?_comparable\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">ErrorContext</span>.<span class=\"name\">find?_comparable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorContext\">Mathlib.Linter.TextBased.ErrorContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exceptions : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorContext\">Mathlib.Linter.TextBased.ErrorContext</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorContext\">Mathlib.Linter.TextBased.ErrorContext</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L113-L125","name":"Mathlib.Linter.TextBased.compare","line":113,"kind":"def","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.compare","doc":"Determine whether a `new` `ErrorContext` is covered by an `existing` exception,\nand, if it is, if we prefer replacing the new exception or keeping the previous one. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.compare\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">compare</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(existing new : <a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorContext\">Mathlib.Linter.TextBased.ErrorContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ComparisonResult\">Mathlib.Linter.TextBased.ComparisonResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L111-L111","name":"Mathlib.Linter.TextBased.instBEqComparisonResult","line":111,"kind":"instance","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.instBEqComparisonResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.instBEqComparisonResult\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">instBEqComparisonResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ComparisonResult\">Mathlib.Linter.TextBased.ComparisonResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L108-L110","name":"Mathlib.Linter.TextBased.ComparisonResult.Comparable","line":108,"kind":"ctor","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ComparisonResult.Comparable","doc":"The existing exception also covers the new error:\nwe keep the existing exception. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ComparisonResult.Comparable\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">ComparisonResult</span>.<span class=\"name\">Comparable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ComparisonResult\">Mathlib.Linter.TextBased.ComparisonResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L105-L107","name":"Mathlib.Linter.TextBased.ComparisonResult.Different","line":105,"kind":"ctor","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ComparisonResult.Different","doc":"The contexts describe different errors: two separate style exceptions are required\nto cover both. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ComparisonResult.Different\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">ComparisonResult</span>.<span class=\"name\">Different</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ComparisonResult\">Mathlib.Linter.TextBased.ComparisonResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L101-L111","name":"Mathlib.Linter.TextBased.ComparisonResult","line":101,"kind":"inductive","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ComparisonResult","doc":"Possible results of comparing an `ErrorContext` to an `existing` entry:\nmost often, they are different --- if the existing entry covers the new exception,\ndepending on the error, we prefer the new or the existing entry. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ComparisonResult\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">ComparisonResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L99-L99","name":"Mathlib.Linter.TextBased.ErrorContext.path","line":99,"kind":"def","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorContext.path","doc":"The path to the file which was linted "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorContext.path\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">ErrorContext</span>.<span class=\"name\">path</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorContext\">Mathlib.Linter.TextBased.ErrorContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L97-L97","name":"Mathlib.Linter.TextBased.ErrorContext.lineNumber","line":97,"kind":"def","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorContext.lineNumber","doc":"The line number of the error (1-based) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorContext.lineNumber\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">ErrorContext</span>.<span class=\"name\">lineNumber</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorContext\">Mathlib.Linter.TextBased.ErrorContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">â„•</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L95-L95","name":"Mathlib.Linter.TextBased.ErrorContext.error","line":95,"kind":"def","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorContext.error","doc":"The underlying `StyleError`"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorContext.error\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">ErrorContext</span>.<span class=\"name\">error</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorContext\">Mathlib.Linter.TextBased.ErrorContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.StyleError\">Mathlib.Linter.TextBased.StyleError</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L93-L93","name":"Mathlib.Linter.TextBased.ErrorContext.mk","line":93,"kind":"ctor","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorContext.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorContext.mk\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">ErrorContext</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(error : <a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.StyleError\">Mathlib.Linter.TextBased.StyleError</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lineNumber : <a href=\"./Init/Prelude.html#Nat\">â„•</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(path : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorContext\">Mathlib.Linter.TextBased.ErrorContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L91-L99","name":"Mathlib.Linter.TextBased.ErrorContext","line":91,"kind":"structure","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorContext","doc":"Context for a style error: the actual error, the line number in the file we're reading\nand the path to the file. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorContext\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">ErrorContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L83-L89","name":"Mathlib.Linter.TextBased.StyleError.errorCode","line":83,"kind":"def","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.StyleError.errorCode","doc":"The error code for a given style error. Keep this in sync with `parse?_errorContext` below! "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.StyleError.errorCode\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">StyleError</span>.<span class=\"name\">errorCode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(err : <a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.StyleError\">Mathlib.Linter.TextBased.StyleError</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L75-L81","name":"Mathlib.Linter.TextBased.StyleError.errorMessage","line":75,"kind":"def","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.StyleError.errorMessage","doc":"Create the underlying error message for a given `StyleError`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.StyleError.errorMessage\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">StyleError</span>.<span class=\"name\">errorMessage</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(err : <a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.StyleError\">Mathlib.Linter.TextBased.StyleError</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L73-L73","name":"Mathlib.Linter.TextBased.instBEqErrorFormat","line":73,"kind":"instance","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.instBEqErrorFormat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.instBEqErrorFormat\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">instBEqErrorFormat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorFormat\">Mathlib.Linter.TextBased.ErrorFormat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L70-L72","name":"Mathlib.Linter.TextBased.ErrorFormat.github","line":70,"kind":"ctor","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorFormat.github","doc":"Produce output suitable for Github error annotations: in particular,\nduplicate the file path, line number and error code "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorFormat.github\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">ErrorFormat</span>.<span class=\"name\">github</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorFormat\">Mathlib.Linter.TextBased.ErrorFormat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L67-L69","name":"Mathlib.Linter.TextBased.ErrorFormat.exceptionsFile","line":67,"kind":"ctor","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorFormat.exceptionsFile","doc":"Produce an entry in the style-exceptions file: mention the error code, slightly uglier\nthan humand-readable output "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorFormat.exceptionsFile\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">ErrorFormat</span>.<span class=\"name\">exceptionsFile</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorFormat\">Mathlib.Linter.TextBased.ErrorFormat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L65-L66","name":"Mathlib.Linter.TextBased.ErrorFormat.humanReadable","line":65,"kind":"ctor","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorFormat.humanReadable","doc":"Produce style error output aimed at humans: no error code, clickable file name "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorFormat.humanReadable\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">ErrorFormat</span>.<span class=\"name\">humanReadable</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorFormat\">Mathlib.Linter.TextBased.ErrorFormat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L63-L73","name":"Mathlib.Linter.TextBased.ErrorFormat","line":63,"kind":"inductive","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorFormat","doc":"How to format style errors "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.ErrorFormat\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">ErrorFormat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L61-L61","name":"Mathlib.Linter.TextBased.instBEqStyleError","line":61,"kind":"instance","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.instBEqStyleError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.instBEqStyleError\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">instBEqStyleError</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.StyleError\">Mathlib.Linter.TextBased.StyleError</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L59-L60","name":"Mathlib.Linter.TextBased.StyleError.trailingWhitespace","line":59,"kind":"ctor","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.StyleError.trailingWhitespace","doc":"A line contains trailing whitespace. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.StyleError.trailingWhitespace\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">StyleError</span>.<span class=\"name\">trailingWhitespace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.StyleError\">Mathlib.Linter.TextBased.StyleError</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L57-L58","name":"Mathlib.Linter.TextBased.StyleError.windowsLineEnding","line":57,"kind":"ctor","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.StyleError.windowsLineEnding","doc":"A line ends with windows line endings (\\r\\n) instead of unix ones (\\n). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.StyleError.windowsLineEnding\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">StyleError</span>.<span class=\"name\">windowsLineEnding</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.StyleError\">Mathlib.Linter.TextBased.StyleError</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L54-L56","name":"Mathlib.Linter.TextBased.StyleError.adaptationNote","line":54,"kind":"ctor","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.StyleError.adaptationNote","doc":"The bare string \"Adaptation note\" (or variants thereof): instead, the\n#adaptation_note command should be used. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.StyleError.adaptationNote\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">StyleError</span>.<span class=\"name\">adaptationNote</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.StyleError\">Mathlib.Linter.TextBased.StyleError</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L51-L61","name":"Mathlib.Linter.TextBased.StyleError","line":51,"kind":"inductive","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.StyleError","doc":"Possible errors that text-based linters can report. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.StyleError\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">StyleError</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L49-L49","name":"Mathlib.Linter.TextBased.instBEqBroadImports","line":49,"kind":"instance","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.instBEqBroadImports","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.instBEqBroadImports\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">instBEqBroadImports</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.BroadImports\">Mathlib.Linter.TextBased.BroadImports</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L46-L48","name":"Mathlib.Linter.TextBased.BroadImports.Lake","line":46,"kind":"ctor","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.BroadImports.Lake","doc":"Importing any module in `Lake`, unless carefully measured\nThis has caused unexpected regressions in the past. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.BroadImports.Lake\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">BroadImports</span>.<span class=\"name\">Lake</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.BroadImports\">Mathlib.Linter.TextBased.BroadImports</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L44-L45","name":"Mathlib.Linter.TextBased.BroadImports.TacticFolder","line":44,"kind":"ctor","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.BroadImports.TacticFolder","doc":"Importing the entire \"Mathlib.Tactic\" folder "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.BroadImports.TacticFolder\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">BroadImports</span>.<span class=\"name\">TacticFolder</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.BroadImports\">Mathlib.Linter.TextBased.BroadImports</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Linter/TextBased.lean#L42-L49","name":"Mathlib.Linter.TextBased.BroadImports","line":42,"kind":"inductive","docLink":"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.BroadImports","doc":"Different kinds of \"broad imports\" that are linted against. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Linter/TextBased.html#Mathlib.Linter.TextBased.BroadImports\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Linter</span>.<span class=\"name\">TextBased</span>.<span class=\"name\">BroadImports</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}