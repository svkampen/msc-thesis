{"name":"Lake.Build.Fetch","instances":[{"typeNames":["Lake.LogIO","Lake.RecBuildM"],"name":"Lake.instMonadLiftLogIORecBuildM","className":"MonadLift"},{"typeNames":["Lake.JobM","Lake.RecBuildM"],"name":"Lake.instMonadLiftJobMRecBuildM","className":"MonadLift"},{"typeNames":["Lake.BuildKey","Lake.RecBuildM"],"name":"Lake.instMonadCycleOfBuildKeyRecBuildM","className":"Lake.MonadCycleOf"}],"imports":["Init","Lake.Util.Error","Lake.Util.Cycle","Lake.Util.EquipT","Lake.Build.Info","Lake.Build.Store"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Fetch.lean#L124-L134","name":"Lake.maybeRegisterJob","line":124,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.maybeRegisterJob","doc":"Registers the produced job for the top-level build monitor\nif it is not already (i.e., it has an empty caption).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.maybeRegisterJob\"><span class=\"name\">Lake</span>.<span class=\"name\">maybeRegisterJob</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(caption : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(job : <span class=\"fn\"><a href=\"./Lake/Build/Job.html#Lake.Job\">Lake.Job</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.FetchM\">Lake.FetchM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job.html#Lake.Job\">Lake.Job</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Fetch.lean#L112-L122","name":"Lake.withRegisterJob","line":112,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.withRegisterJob","doc":"Registers the produced job for the top-level build monitor\n(e.g., the Lake CLI progress UI), assigning it `caption`.\n\nStray I/O, logs, and errors produced by `x` will be wrapped into the job.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.withRegisterJob\"><span class=\"name\">Lake</span>.<span class=\"name\">withRegisterJob</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(caption : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.FetchM\">Lake.FetchM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job.html#Lake.Job\">Lake.Job</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(optional : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.FetchM\">Lake.FetchM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job.html#Lake.Job\">Lake.Job</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Fetch.lean#L103-L110","name":"Lake.registerJob","line":103,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.registerJob","doc":"Registers the job for the top-level build monitor,\n(e.g., the Lake CLI progress UI), assigning it `caption`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.registerJob\"><span class=\"name\">Lake</span>.<span class=\"name\">registerJob</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(caption : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(job : <span class=\"fn\"><a href=\"./Lake/Build/Job.html#Lake.Job\">Lake.Job</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(optional : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.FetchM\">Lake.FetchM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job.html#Lake.Job\">Lake.Job</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Fetch.lean#L89-L101","name":"Lake.ensureJob","line":89,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.ensureJob","doc":"Wraps stray I/O, logs, and errors in `x` into the produced job.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.ensureJob\"><span class=\"name\">Lake</span>.<span class=\"name\">ensureJob</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.FetchM\">Lake.FetchM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job.html#Lake.Job\">Lake.Job</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.FetchM\">Lake.FetchM</a> <span class=\"fn\">(<a href=\"./Lake/Build/Job.html#Lake.Job\">Lake.Job</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Fetch.lean#L83-L85","name":"Lake.BuildInfo.fetch","line":83,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.BuildInfo.fetch","doc":"Fetch the result associated with the info using the Lake build index. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.BuildInfo.fetch\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildInfo</span>.<span class=\"name\">fetch</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lake/Build/Info.html#Lake.BuildInfo\">Lake.BuildInfo</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Util/Family.html#Lake.FamilyOut\">Lake.FamilyOut</a> <a href=\"./Lake/Build/Data.html#Lake.BuildData\">Lake.BuildData</a> <span class=\"fn\"><span class=\"fn\">self</span>.key</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.FetchM\">Lake.FetchM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Fetch.lean#L80-L81","name":"Lake.BuildM","line":80,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.BuildM","doc":"The old build monad. **Uses should generally be replaced by `FetchM`.** "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.BuildM\"><span class=\"name\">Lake</span>.<span class=\"name\">BuildM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Fetch.lean#L77-L78","name":"Lake.IndexBuildM","line":77,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.IndexBuildM","doc":"The top-level monad for Lake build functions. **Renamed `FetchM`.** "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.IndexBuildM\"><span class=\"name\">Lake</span>.<span class=\"name\">IndexBuildM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Fetch.lean#L68-L69","name":"Lake.FetchM","line":68,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.FetchM","doc":"The top-level monad for Lake build functions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.FetchM\"><span class=\"name\">Lake</span>.<span class=\"name\">FetchM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Fetch.lean#L65-L66","name":"Lake.IndexT","line":65,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.IndexT","doc":"A transformer to equip a monad with a build function for the Lake index. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.IndexT\"><span class=\"name\">Lake</span>.<span class=\"name\">IndexT</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> v</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> v</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Fetch.lean#L60-L63","name":"Lake.IndexBuildFn","line":60,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.IndexBuildFn","doc":"A build function for any element of the Lake build index. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.IndexBuildFn\"><span class=\"name\">Lake</span>.<span class=\"name\">IndexBuildFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> v</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> v</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Fetch.lean#L57-L58","name":"Lake.instMonadCycleOfBuildKeyRecBuildM","line":57,"kind":"instance","docLink":"./Lake/Build/Fetch.html#Lake.instMonadCycleOfBuildKeyRecBuildM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.instMonadCycleOfBuildKeyRecBuildM\"><span class=\"name\">Lake</span>.<span class=\"name\">instMonadCycleOfBuildKeyRecBuildM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Util/Cycle.html#Lake.MonadCycleOf\">Lake.MonadCycleOf</a> <a href=\"./Lake/Build/Key.html#Lake.BuildKey\">Lake.BuildKey</a> <a href=\"./Lake/Build/Fetch.html#Lake.RecBuildM\">Lake.RecBuildM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Fetch.lean#L53-L55","name":"Lake.buildCycleError","line":53,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.buildCycleError","doc":"Log build cycle and error. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.buildCycleError\"><span class=\"name\">Lake</span>.<span class=\"name\">buildCycleError</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lake/Util/Error.html#Lake.MonadError\">Lake.MonadError</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(cycle : <span class=\"fn\"><a href=\"./Lake/Util/Cycle.html#Lake.Cycle\">Lake.Cycle</a> <a href=\"./Lake/Build/Key.html#Lake.BuildKey\">Lake.BuildKey</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Fetch.lean#L49-L51","name":"Lake.RecBuildM.run'","line":49,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.RecBuildM.run'","doc":"Run a recursive build in a fresh build store. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.RecBuildM.run'\"><span class=\"name\">Lake</span>.<span class=\"name\">RecBuildM</span>.<span class=\"name\">run'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(build : <span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.RecBuildM\">Lake.RecBuildM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Basic.html#Lake.CoreBuildM\">Lake.CoreBuildM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Fetch.lean#L41-L47","name":"Lake.RecBuildM.run","line":41,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.RecBuildM.run","doc":"Run a recursive build. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.RecBuildM.run\"><span class=\"name\">Lake</span>.<span class=\"name\">RecBuildM</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(stack : <span class=\"fn\"><a href=\"./Lake/Util/Cycle.html#Lake.CallStack\">Lake.CallStack</a> <a href=\"./Lake/Build/Key.html#Lake.BuildKey\">Lake.BuildKey</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(store : <a href=\"./Lake/Build/Store.html#Lake.BuildStore\">Lake.BuildStore</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(build : <span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.RecBuildM\">Lake.RecBuildM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Basic.html#Lake.CoreBuildM\">Lake.CoreBuildM</a> <span class=\"fn\">(<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lake/Build/Store.html#Lake.BuildStore\">Lake.BuildStore</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Fetch.lean#L39-L39","name":"Lake.instMonadLiftJobMRecBuildM","line":39,"kind":"instance","docLink":"./Lake/Build/Fetch.html#Lake.instMonadLiftJobMRecBuildM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.instMonadLiftJobMRecBuildM\"><span class=\"name\">Lake</span>.<span class=\"name\">instMonadLiftJobMRecBuildM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <a href=\"./Lake/Build/Job.html#Lake.JobM\">Lake.JobM</a> <a href=\"./Lake/Build/Fetch.html#Lake.RecBuildM\">Lake.RecBuildM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Fetch.lean#L28-L37","name":"Lake.RecBuildM.runJobM","line":28,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.RecBuildM.runJobM","doc":"Run a `JobM` action in `RecBuildM` (and thus `FetchM`).\n\nGenerally, this should not be done, and instead a job action\nshould be run asynchronously in a Job (e.g., via `Job.async`).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.RecBuildM.runJobM\"><span class=\"name\">Lake</span>.<span class=\"name\">RecBuildM</span>.<span class=\"name\">runJobM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lake/Build/Job.html#Lake.JobM\">Lake.JobM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lake/Build/Fetch.html#Lake.RecBuildM\">Lake.RecBuildM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Fetch.lean#L26-L26","name":"Lake.instMonadLiftLogIORecBuildM","line":26,"kind":"instance","docLink":"./Lake/Build/Fetch.html#Lake.instMonadLiftLogIORecBuildM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.instMonadLiftLogIORecBuildM\"><span class=\"name\">Lake</span>.<span class=\"name\">instMonadLiftLogIORecBuildM</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <a href=\"./Lake/Util/Log.html#Lake.LogIO\">Lake.LogIO</a> <a href=\"./Lake/Build/Fetch.html#Lake.RecBuildM\">Lake.RecBuildM</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Build/Fetch.lean#L22-L24","name":"Lake.RecBuildM","line":22,"kind":"def","docLink":"./Lake/Build/Fetch.html#Lake.RecBuildM","doc":"A recursive build of a Lake build store that may encounter a cycle. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Build/Fetch.html#Lake.RecBuildM\"><span class=\"name\">Lake</span>.<span class=\"name\">RecBuildM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}