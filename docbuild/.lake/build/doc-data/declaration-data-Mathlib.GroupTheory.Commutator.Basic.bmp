{"name":"Mathlib.GroupTheory.Commutator.Basic","instances":[{"typeNames":["Subgroup","Subgroup"],"name":"Subgroup.commutator","className":"Bracket"},{"typeNames":["Bracket.bracket"],"name":"Subgroup.commutator_normal","className":"Subgroup.Normal"},{"typeNames":["Bracket.bracket"],"name":"Subgroup.commutator_characteristic","className":"Subgroup.Characteristic"},{"typeNames":["Set.Elem"],"name":"instNonemptyElemCommutatorSet","className":"Nonempty"}],"imports":["Init","Mathlib.GroupTheory.Subgroup.Centralizer","Mathlib.Tactic.Group"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L212-L213","name":"commutator_mem_commutatorSet","line":212,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#commutator_mem_commutatorSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#commutator_mem_commutatorSet\"><span class=\"name\">commutator_mem_commutatorSet</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g₁ g₂ : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">g₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">g₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Commutator/Basic.html#commutatorSet\">commutatorSet</a> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L209-L210","name":"mem_commutatorSet_iff","line":209,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#mem_commutatorSet_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#mem_commutatorSet_iff\"><span class=\"name\">mem_commutatorSet_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Commutator/Basic.html#commutatorSet\">commutatorSet</a> <span class=\"fn\">G</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ (<span class=\"fn\">g₁</span> : <span class=\"fn\">G</span>) (<span class=\"fn\">g₂</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">g₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">g₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L204-L205","name":"instNonemptyElemCommutatorSet","line":204,"kind":"instance","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#instNonemptyElemCommutatorSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#instNonemptyElemCommutatorSet\"><span class=\"name\">instNonemptyElemCommutatorSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nonempty\">Nonempty</a> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/Commutator/Basic.html#commutatorSet\">commutatorSet</a> <span class=\"fn\">G</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L201-L202","name":"one_mem_commutatorSet","line":201,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#one_mem_commutatorSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#one_mem_commutatorSet\"><span class=\"name\">one_mem_commutatorSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Commutator/Basic.html#commutatorSet\">commutatorSet</a> <span class=\"fn\">G</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L198-L199","name":"commutatorSet_def","line":198,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#commutatorSet_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#commutatorSet_def\"><span class=\"name\">commutatorSet_def</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Commutator/Basic.html#commutatorSet\">commutatorSet</a> <span class=\"fn\">G</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">G</span> | <span class=\"fn\">∃ (<span class=\"fn\">g₁</span> : <span class=\"fn\">G</span>) (<span class=\"fn\">g₂</span> : <span class=\"fn\">G</span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">g₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">g₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L194-L196","name":"commutatorSet","line":194,"kind":"def","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#commutatorSet","doc":"The set of commutator elements `⁅g₁, g₂⁆` in `G`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#commutatorSet\"><span class=\"name\">commutatorSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(G : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <span class=\"fn\">G</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L181-L188","name":"Subgroup.commutator_pi_pi_le","line":181,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_pi_pi_le","doc":"The commutator of direct product is contained in the direct product of the commutators.\n\nSee `commutator_pi_pi_of_finite` for equality given `Fintype η`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_pi_pi_le\"><span class=\"name\">Subgroup</span>.<span class=\"name\">commutator_pi_pi_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{η : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{Gs : <span class=\"fn\"><span class=\"fn\">η</span> → <a href=\"./foundational_types.html\">Type</a> u_5</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">(<span class=\"fn\">Gs</span> <span class=\"fn\">i</span>)</span></span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H K : <span class=\"fn\">(<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) → <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">(<span class=\"fn\">Gs</span> <span class=\"fn\">i</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#Subgroup.pi\">Subgroup.pi</a> <span class=\"fn\">Set.univ</span> <span class=\"fn\">H</span></span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#Subgroup.pi\">Subgroup.pi</a> <span class=\"fn\">Set.univ</span> <span class=\"fn\">K</span></span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#Subgroup.pi\">Subgroup.pi</a> <span class=\"fn\">Set.univ</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <span class=\"fn\">η</span>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\"><span class=\"fn\">H</span> <span class=\"fn\">i</span></span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\"><span class=\"fn\">K</span> <span class=\"fn\">i</span></span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L168-L179","name":"Subgroup.commutator_prod_prod","line":168,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_prod_prod","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_prod_prod\"><span class=\"name\">Subgroup</span>.<span class=\"name\">commutator_prod_prod</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H₁ H₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(K₁ K₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H₁</span>.prod</span> <span class=\"fn\">K₁</span></span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">H₂</span>.prod</span> <span class=\"fn\">K₂</span></span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">H₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">H₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span>.prod</span> <span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">K₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">K₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L162-L166","name":"Subgroup.commutator_characteristic","line":162,"kind":"instance","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_characteristic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_characteristic\"><span class=\"name\">Subgroup</span>.<span class=\"name\">commutator_characteristic</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H₁ H₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h₁ : <span class=\"fn\"><span class=\"fn\">H₁</span>.Characteristic</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h₂ : <span class=\"fn\"><span class=\"fn\">H₂</span>.Characteristic</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">H₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">H₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span>.Characteristic</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L156-L158","name":"Subgroup.commutator_le_map_commutator","line":156,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_le_map_commutator","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_le_map_commutator\"><span class=\"name\">Subgroup</span>.<span class=\"name\">commutator_le_map_commutator</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₁ H₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G'</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{K₁ K₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G'</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\">K₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H₁</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\">K₂</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">K₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">K₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">H₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">H₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L145-L152","name":"Subgroup.map_commutator","line":145,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.map_commutator","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.map_commutator\"><span class=\"name\">Subgroup</span>.<span class=\"name\">map_commutator</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H₁ H₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">H₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">H₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H₁</span></span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">f</span> <span class=\"fn\">H₂</span></span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L140-L141","name":"Subgroup.commutator_le_inf","line":140,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_le_inf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_le_inf\"><span class=\"name\">Subgroup</span>.<span class=\"name\">commutator_le_inf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H₁ H₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">H₁</span>.Normal</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">H₂</span>.Normal</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">H₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">H₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\">H₁</span> <a href=\"./Init/Prelude.html#Min.min\">⊓</a> <span class=\"fn\">H₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L136-L138","name":"Subgroup.commutator_bot_right","line":136,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_bot_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_bot_right\"><span class=\"name\">Subgroup</span>.<span class=\"name\">commutator_bot_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">H₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L132-L134","name":"Subgroup.commutator_bot_left","line":132,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_bot_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_bot_left\"><span class=\"name\">Subgroup</span>.<span class=\"name\">commutator_bot_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H₁ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">H₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L129-L130","name":"Subgroup.commutator_le_left","line":129,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_le_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_le_left\"><span class=\"name\">Subgroup</span>.<span class=\"name\">commutator_le_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H₁ H₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">H₁</span>.Normal</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">H₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">H₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H₁</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L126-L127","name":"Subgroup.commutator_le_right","line":126,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_le_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_le_right\"><span class=\"name\">Subgroup</span>.<span class=\"name\">commutator_le_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H₁ H₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><span class=\"fn\">H₂</span>.Normal</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">H₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">H₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L122-L124","name":"Subgroup.commutator_def'","line":122,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_def'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_def'\"><span class=\"name\">Subgroup</span>.<span class=\"name\">commutator_def'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H₁ H₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">H₁</span>.Normal</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">H₂</span>.Normal</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">H₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">H₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Basic.html#Subgroup.normalClosure\">Subgroup.normalClosure</a> <span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">G</span> | <span class=\"fn\">∃ <span class=\"fn\">g₁</span> ∈ <span class=\"fn\">H₁</span>, <span class=\"fn\">∃ <span class=\"fn\">g₂</span> ∈ <span class=\"fn\">H₂</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">g₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">g₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></span></span>}</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L111-L120","name":"Subgroup.commutator_normal","line":111,"kind":"instance","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_normal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_normal\"><span class=\"name\">Subgroup</span>.<span class=\"name\">commutator_normal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H₁ H₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h₁ : <span class=\"fn\"><span class=\"fn\">H₁</span>.Normal</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h₂ : <span class=\"fn\"><span class=\"fn\">H₂</span>.Normal</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">H₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">H₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span>.Normal</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L106-L107","name":"Subgroup.commutator_comm","line":106,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_comm\"><span class=\"name\">Subgroup</span>.<span class=\"name\">commutator_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H₁ H₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">H₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">H₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">H₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">H₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L102-L104","name":"Subgroup.commutator_comm_le","line":102,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_comm_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_comm_le\"><span class=\"name\">Subgroup</span>.<span class=\"name\">commutator_comm_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H₁ H₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">H₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">H₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">H₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">H₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L89-L98","name":"Subgroup.commutator_commutator_eq_bot_of_rotate","line":89,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_commutator_eq_bot_of_rotate","doc":"**The Three Subgroups Lemma** (via the Hall-Witt identity) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_commutator_eq_bot_of_rotate\"><span class=\"name\">Subgroup</span>.<span class=\"name\">commutator_commutator_eq_bot_of_rotate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₁ H₂ H₃ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h1 : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">H₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">H₃</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">H₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h2 : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">H₃</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">H₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">H₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">H₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">H₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">H₃</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L83-L87","name":"Subgroup.commutator_eq_bot_iff_le_centralizer","line":83,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_eq_bot_iff_le_centralizer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_eq_bot_iff_le_centralizer\"><span class=\"name\">Subgroup</span>.<span class=\"name\">commutator_eq_bot_iff_le_centralizer</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₁ H₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">H₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">H₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Mathlib/Order/Notation.html#Bot.bot\">⊥</a></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">H₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/Subgroup/Centralizer.html#Subgroup.centralizer\">Subgroup.centralizer</a> <span class=\"fn\">↑<span class=\"fn\">H₂</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L80-L81","name":"Subgroup.commutator_mono","line":80,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_mono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_mono\"><span class=\"name\">Subgroup</span>.<span class=\"name\">commutator_mono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₁ H₂ K₁ K₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\">H₁</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\">H₂</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">K₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">H₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">H₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">K₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">K₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L76-L78","name":"Subgroup.commutator_le","line":76,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_le\"><span class=\"name\">Subgroup</span>.<span class=\"name\">commutator_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₁ H₂ H₃ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">H₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">H₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">H₃</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∀ <span class=\"fn\">g₁</span> ∈ <span class=\"fn\">H₁</span>, <span class=\"fn\">∀ <span class=\"fn\">g₂</span> ∈ <span class=\"fn\">H₂</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">g₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">g₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H₃</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L73-L74","name":"Subgroup.commutator_mem_commutator","line":73,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_mem_commutator","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_mem_commutator\"><span class=\"name\">Subgroup</span>.<span class=\"name\">commutator_mem_commutator</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₁ g₂ : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{H₁ H₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\">g₁</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\">g₂</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">H₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">g₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">g₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">H₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">H₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L67-L69","name":"Subgroup.commutator_def","line":67,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator_def\"><span class=\"name\">Subgroup</span>.<span class=\"name\">commutator_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H₁ H₂ : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">H₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">H₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Lattice.html#Subgroup.closure\">Subgroup.closure</a> <span class=\"fn\">{<span class=\"fn\">g</span> : <span class=\"fn\">G</span> | <span class=\"fn\">∃ <span class=\"fn\">g₁</span> ∈ <span class=\"fn\">H₁</span>, <span class=\"fn\">∃ <span class=\"fn\">g₂</span> ∈ <span class=\"fn\">H₂</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">g₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">g₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">g</span></span></span></span>}</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L63-L65","name":"Subgroup.commutator","line":63,"kind":"instance","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator","doc":"The commutator of two subgroups `H₁` and `H₂`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#Subgroup.commutator\"><span class=\"name\">Subgroup</span>.<span class=\"name\">commutator</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket\">Bracket</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/Defs.html#Subgroup\">Subgroup</a> <span class=\"fn\">G</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L58-L59","name":"conjugate_commutatorElement","line":58,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#conjugate_commutatorElement","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#conjugate_commutatorElement\"><span class=\"name\">conjugate_commutatorElement</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g₁ g₂ g₃ : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g₃</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">g₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">g₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">g₃</span><a href=\"./Mathlib/Algebra/Group/Operations.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g₃</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g₁</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">g₃</span><a href=\"./Mathlib/Algebra/Group/Operations.html#Inv.inv\">⁻¹</a></span></span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g₃</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g₂</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">g₃</span><a href=\"./Mathlib/Algebra/Group/Operations.html#Inv.inv\">⁻¹</a></span></span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L55-L56","name":"map_commutatorElement","line":55,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#map_commutatorElement","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#map_commutatorElement\"><span class=\"name\">map_commutatorElement</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">F</span> <span class=\"fn\">G</span> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHomClass\">MonoidHomClass</a> <span class=\"fn\">F</span> <span class=\"fn\">G</span> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">F</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g₁ g₂ : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">g₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">g₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">g₁</span></span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">g₂</span></span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L51-L53","name":"commutatorElement_inv","line":51,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#commutatorElement_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#commutatorElement_inv\"><span class=\"name\">commutatorElement_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g₁ g₂ : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">g₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">g₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span><a href=\"./Mathlib/Algebra/Group/Operations.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">g₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">g₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L47-L49","name":"commutatorElement_self","line":47,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#commutatorElement_self","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#commutatorElement_self\"><span class=\"name\">commutatorElement_self</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">g</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">g</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L43-L45","name":"commutatorElement_one_left","line":43,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#commutatorElement_one_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#commutatorElement_one_left\"><span class=\"name\">commutatorElement_one_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">1</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">g</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L39-L41","name":"commutatorElement_one_right","line":39,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#commutatorElement_one_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#commutatorElement_one_right\"><span class=\"name\">commutatorElement_one_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\">G</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">g</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">1</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L34-L35","name":"Commute.commutator_eq","line":34,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#Commute.commutator_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#Commute.commutator_eq\"><span class=\"name\">Commute</span>.<span class=\"name\">commutator_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₁ g₂ : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Commute/Defs.html#Commute\">Commute</a> <span class=\"fn\">g₁</span> <span class=\"fn\">g₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">g₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">g₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L31-L32","name":"commutatorElement_eq_one_iff_commute","line":31,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#commutatorElement_eq_one_iff_commute","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#commutatorElement_eq_one_iff_commute\"><span class=\"name\">commutatorElement_eq_one_iff_commute</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₁ g₂ : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">g₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">g₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Commute/Defs.html#Commute\">Commute</a> <span class=\"fn\">g₁</span> <span class=\"fn\">g₂</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/GroupTheory/Commutator/Basic.lean#L28-L29","name":"commutatorElement_eq_one_iff_mul_comm","line":28,"kind":"theorem","docLink":"./Mathlib/GroupTheory/Commutator/Basic.html#commutatorElement_eq_one_iff_mul_comm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/GroupTheory/Commutator/Basic.html#commutatorElement_eq_one_iff_mul_comm\"><span class=\"name\">commutatorElement_eq_one_iff_mul_comm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#Group\">Group</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g₁ g₂ : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁅</a><span class=\"fn\">g₁</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">,</a> <span class=\"fn\">g₂</span><a href=\"./Mathlib/Data/Bracket.html#Bracket.bracket\">⁆</a></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">g₁</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g₂</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">g₂</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">g₁</span></span></span></span></div></div>"}]}