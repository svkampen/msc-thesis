{"name":"Lake.Toml.ParserUtil","instances":[],"imports":["Init","Lean.Parser","Lean.PrettyPrinter.Formatter"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L300-L301","name":"Lake.Toml.skipInsideQuot","line":300,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.skipInsideQuot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipInsideQuot\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">skipInsideQuot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L297-L298","name":"Lake.Toml.skipInsideQuotFn","line":297,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.skipInsideQuotFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipInsideQuotFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">skipInsideQuotFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L293-L295","name":"Lake.Toml.sepBy1Linebreak","line":293,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.sepBy1Linebreak","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.sepBy1Linebreak\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">sepBy1Linebreak</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(allowTrailingLinebreak : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L289-L291","name":"Lake.Toml.sepByLinebreak","line":289,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.sepByLinebreak","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.sepByLinebreak\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">sepByLinebreak</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(allowTrailingLinebreak : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L287-L287","name":"Lake.Toml.recNodeWithAntiquot.go","line":287,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.recNodeWithAntiquot.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.recNodeWithAntiquot.go\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">recNodeWithAntiquot</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.ParserMapFn\">Lake.Toml.ParserMapFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(anonymous : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L284-L287","name":"Lake.Toml.recNodeWithAntiquot","line":284,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.recNodeWithAntiquot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.recNodeWithAntiquot\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">recNodeWithAntiquot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.ParserMapFn\">Lake.Toml.ParserMapFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(anonymous : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L281-L282","name":"Lake.Toml.recNode","line":281,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.recNode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.recNode\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">recNode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.ParserMapFn\">Lake.Toml.ParserMapFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L275-L279","name":"Lake.Toml.ParserMapFn","line":275,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.ParserMapFn","doc":"`Parser → Parser` hidden by an `abbrev`.\nPrevents the formatter/parenthesizer generator from transforming it.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.ParserMapFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">ParserMapFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L272-L273","name":"Lake.Toml.recNodeFn","line":272,"kind":"opaque","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.recNodeFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.recNodeFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">recNodeFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L268-L270","name":"Lake.Toml.dynamicNode.parenthesizer","line":268,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.dynamicNode.parenthesizer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.dynamicNode.parenthesizer\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">dynamicNode</span>.<span class=\"name\">parenthesizer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer\">Lean.PrettyPrinter.Parenthesizer</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L264-L266","name":"Lake.Toml.dynamicNode.formatter","line":264,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.dynamicNode.formatter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.dynamicNode.formatter\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">dynamicNode</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L261-L262","name":"Lake.Toml.dynamicNode","line":261,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.dynamicNode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.dynamicNode\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">dynamicNode</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L258-L259","name":"Lake.Toml.trailing","line":258,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.trailing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.trailing\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">trailing</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L247-L256","name":"Lake.Toml.extendTrailingFn","line":247,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.extendTrailingFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.extendTrailingFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">extendTrailingFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L240-L245","name":"Lake.Toml.modifyTailInfo","line":240,"kind":"opaque","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.modifyTailInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.modifyTailInfo\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">modifyTailInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.SourceInfo\">Lean.SourceInfo</a> → <a href=\"./Init/Prelude.html#Lean.SourceInfo\">Lean.SourceInfo</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L236-L238","name":"Lake.Toml.SourceInfo.updateTrailing","line":236,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.SourceInfo.updateTrailing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.SourceInfo.updateTrailing\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">SourceInfo</span>.<span class=\"name\">updateTrailing</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(trailing : <a href=\"./Init/Prelude.html#Substring\">Substring</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.SourceInfo\">Lean.SourceInfo</a> → <a href=\"./Init/Prelude.html#Lean.SourceInfo\">Lean.SourceInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L233-L234","name":"Lake.Toml.epsilon.parenthesizer","line":233,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.epsilon.parenthesizer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.epsilon.parenthesizer\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">epsilon</span>.<span class=\"name\">parenthesizer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer\">Lean.PrettyPrinter.Parenthesizer</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L230-L231","name":"Lake.Toml.epsilon.formatter","line":230,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.epsilon.formatter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.epsilon.formatter\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">epsilon</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L227-L228","name":"Lake.Toml.epsilon","line":227,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.epsilon","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.epsilon\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">epsilon</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fn : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L224-L225","name":"Lake.Toml.litWithAntiquot","line":224,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.litWithAntiquot","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.litWithAntiquot\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">litWithAntiquot</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(trailingFn : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> := <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\">Lake.Toml.skipFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(anonymous : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L220-L222","name":"Lake.Toml.lit.parenthesizer","line":220,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.lit.parenthesizer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.lit.parenthesizer\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">lit</span>.<span class=\"name\">parenthesizer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a> → <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer\">Lean.PrettyPrinter.Parenthesizer</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L216-L218","name":"Lake.Toml.lit.formatter","line":216,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.lit.formatter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.lit.formatter\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">lit</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L213-L214","name":"Lake.Toml.lit","line":213,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.lit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.lit\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">lit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(trailingFn : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> := <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\">Lake.Toml.skipFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L207-L211","name":"Lake.Toml.litFn","line":207,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.litFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.litFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">litFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(trailingFn : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> := <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\">Lake.Toml.skipFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L195-L205","name":"Lake.Toml.pushLit","line":195,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.pushLit","doc":"Push `(Syntax.node kind <new-atom>)` onto the syntax stack. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.pushLit\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">pushLit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Init/Prelude.html#Lean.SyntaxNodeKind\">Lean.SyntaxNodeKind</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(startPos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(trailingFn : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> := <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\">Lake.Toml.skipFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L191-L193","name":"Lake.Toml.strAtom.parenthesizer","line":191,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.strAtom.parenthesizer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.strAtom.parenthesizer\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">strAtom</span>.<span class=\"name\">parenthesizer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> → <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer\">Lean.PrettyPrinter.Parenthesizer</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L187-L189","name":"Lake.Toml.strAtom.formatter","line":187,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.strAtom.formatter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.strAtom.formatter\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">strAtom</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> → <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L183-L185","name":"Lake.Toml.strAtom","line":183,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.strAtom","doc":"Parse the trimmed string as an atom (but use the full string for formatting). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.strAtom\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">strAtom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expected : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">&quot;'&quot;</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">s</span></span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">&quot;'&quot;</span></span></span>]</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(trailingFn : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> := <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\">Lake.Toml.skipFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L179-L181","name":"Lake.Toml.chAtom.parenthesizer","line":179,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.chAtom.parenthesizer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.chAtom.parenthesizer\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">chAtom</span>.<span class=\"name\">parenthesizer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Char\">Char</a> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> → <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer\">Lean.PrettyPrinter.Parenthesizer</a></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L175-L177","name":"Lake.Toml.chAtom.formatter","line":175,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.chAtom.formatter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.chAtom.formatter\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">chAtom</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> → <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L171-L173","name":"Lake.Toml.chAtom","line":171,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.chAtom","doc":"Parse a single character as an atom. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.chAtom\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">chAtom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expected : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">&quot;'&quot;</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">c</span></span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">&quot;'&quot;</span></span></span>]</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(trailingFn : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> := <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\">Lake.Toml.skipFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L167-L169","name":"Lake.Toml.atom.parenthesizer","line":167,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.atom.parenthesizer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.atom.parenthesizer\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">atom</span>.<span class=\"name\">parenthesizer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Parenthesizer.html#Lean.PrettyPrinter.Parenthesizer\">Lean.PrettyPrinter.Parenthesizer</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L159-L165","name":"Lake.Toml.atom.formatter","line":159,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.atom.formatter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.atom.formatter\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">atom</span>.<span class=\"name\">formatter</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> → <a href=\"./Lean/PrettyPrinter/Formatter.html#Lean.PrettyPrinter.Formatter\">Lean.PrettyPrinter.Formatter</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L152-L156","name":"Lake.Toml.getSyntaxExprPos?","line":152,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.getSyntaxExprPos?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.getSyntaxExprPos?\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">getSyntaxExprPos?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L148-L150","name":"Lake.Toml.getInfoExprPos?","line":148,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.getInfoExprPos?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.getInfoExprPos?\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">getInfoExprPos?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.SourceInfo\">Lean.SourceInfo</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L145-L146","name":"Lake.Toml.atom","line":145,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.atom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.atom\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">atom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(trailingFn : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> := <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\">Lake.Toml.skipFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.Parser\">Lean.Parser.Parser</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L138-L143","name":"Lake.Toml.atomFn","line":138,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.atomFn","doc":"Match an arbitrary `ParserFn` and return the consumed String in a `Syntax.atom`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.atomFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">atomFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(trailingFn : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> := <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\">Lake.Toml.skipFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L126-L136","name":"Lake.Toml.pushAtom","line":126,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.pushAtom","doc":"Push a new atom onto the syntax stack. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.pushAtom\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">pushAtom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(startPos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(trailingFn : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a> := <a href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\">Lake.Toml.skipFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L109-L122","name":"Lake.Toml.sepByChar1Fn","line":109,"kind":"opaque","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.sepByChar1Fn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.sepByChar1Fn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">sepByChar1Fn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Init/Prelude.html#Char\">Char</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sep : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expected : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <span class=\"fn\">[]</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L95-L107","name":"Lake.Toml.sepByChar1AuxFn","line":95,"kind":"opaque","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.sepByChar1AuxFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.sepByChar1AuxFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">sepByChar1AuxFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Init/Prelude.html#Char\">Char</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sep : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expected : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <span class=\"fn\">[]</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L89-L91","name":"Lake.Toml.strFn","line":89,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.strFn","doc":"Consume a matching string atomically. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.strFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">strFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(str : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expected : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">&quot;'&quot;</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">str</span></span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">&quot;'&quot;</span></span></span>]</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L82-L87","name":"Lake.Toml.strAuxFn","line":82,"kind":"opaque","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.strAuxFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.strAuxFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">strAuxFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(str : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expected : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(strPos : <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L78-L80","name":"Lake.Toml.chFn","line":78,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.chFn","doc":"Consume a single matching character. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.chFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">chFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expected : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <span class=\"fn\">[<span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">&quot;'&quot;</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">c</span></span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString.toString\">toString</a> <span class=\"fn\">&quot;'&quot;</span></span></span>]</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L74-L76","name":"Lake.Toml.digitPairFn","line":74,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.digitPairFn","doc":"Consume a two digits (i.e., `Char.isDigit`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.digitPairFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">digitPairFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(expected : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <span class=\"fn\">[<span class=\"fn\">&quot;digit&quot;</span>]</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L70-L72","name":"Lake.Toml.digitFn","line":70,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.digitFn","doc":"Consume a single digit (i.e., `Char.isDigit`). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.digitFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">digitFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(expected : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <span class=\"fn\">[<span class=\"fn\">&quot;digit&quot;</span>]</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L67-L68","name":"Lake.Toml.takeWhile1Fn","line":67,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.takeWhile1Fn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.takeWhile1Fn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">takeWhile1Fn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Init/Prelude.html#Char\">Char</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expected : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <span class=\"fn\">[]</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L56-L65","name":"Lake.Toml.satisfyFn","line":56,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.satisfyFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.satisfyFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">satisfyFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Init/Prelude.html#Char\">Char</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expected : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <span class=\"fn\">[]</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L53-L54","name":"Lake.Toml.mkUnexpectedCharError","line":53,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.mkUnexpectedCharError","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.mkUnexpectedCharError\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">mkUnexpectedCharError</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expected : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#String\">String</a></span> := <span class=\"fn\">[]</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pushMissing : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L46-L50","name":"Lake.Toml.repeatFn.loop","line":46,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.repeatFn.loop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.repeatFn.loop\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">repeatFn</span>.<span class=\"name\">loop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserContext\">Lean.Parser.ParserContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserState\">Lean.Parser.ParserState</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L44-L51","name":"Lake.Toml.repeatFn","line":44,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.repeatFn","doc":"A sequence of `n` repetitions of a parser function. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.repeatFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">repeatFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L37-L42","name":"Lake.Toml.optFn","line":37,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.optFn","doc":"Match an arbitrary parser or do nothing. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.optFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">optFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L33-L35","name":"Lake.Toml.usePosFn","line":33,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.usePosFn","doc":"`ParserFn` combinator that runs `f` with the current position. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.usePosFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">usePosFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a> → <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L30-L31","name":"Lake.Toml.instAndThenParserFn_lake","line":30,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.instAndThenParserFn_lake","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.instAndThenParserFn_lake\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">instAndThenParserFn_lake</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#AndThen\">AndThen</a> <a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L28-L28","name":"Lake.Toml.skipFn","line":28,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.skipFn\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">skipFn</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Parser/Types.html#Lean.Parser.ParserFn\">Lean.Parser.ParserFn</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L25-L26","name":"Lake.Toml.isHexDigit","line":25,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.isHexDigit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.isHexDigit\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">isHexDigit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L22-L23","name":"Lake.Toml.isOctDigit","line":22,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.isOctDigit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.isOctDigit\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">isOctDigit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/lake/Lake/Toml/ParserUtil.lean#L19-L20","name":"Lake.Toml.isBinDigit","line":19,"kind":"def","docLink":"./Lake/Toml/ParserUtil.html#Lake.Toml.isBinDigit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lake/Toml/ParserUtil.html#Lake.Toml.isBinDigit\"><span class=\"name\">Lake</span>.<span class=\"name\">Toml</span>.<span class=\"name\">isBinDigit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Prelude.html#Char\">Char</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"}]}