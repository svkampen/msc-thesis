{"name":"Thesis.InfReductionSeq","instances":[],"imports":["Init","Mathlib.Tactic","Mathlib.Logic.Relation","Thesis.ReductionSeq"],"declarations":[{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/e87fa416f69f513e3fa0619fcae18c9f6caa7471/Thesis/InfReductionSeq.lean#L546-L575","name":"Thesis.InfReductionSeq.rt_seq_imp_regular_seq","line":546,"kind":"theorem","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.rt_seq_imp_regular_seq","doc":"A statement that is \"obvious\" when written down in a pen-and-paper proof, but which\nis non-trivial to formalize:\n\nIf we have an infinite r∗-reduction sequence\n`a₀ ->* a₁ ->* a₂ ...`\nthere must be some (finite or infinite) reduction sequence\n`a₀ -> ... -> a₁ -> ... -> a₂ -> ...`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.rt_seq_imp_regular_seq\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">rt_seq_imp_regular_seq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.reflTransGen\">∗</a></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">N</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>) (<span class=\"fn\">f'</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\">r</span> <span class=\"fn\">N</span> <span class=\"fn\">f'</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">∃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">N</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f'</span> <span class=\"fn\">m</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f'</span> <span class=\"fn\">0</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/e87fa416f69f513e3fa0619fcae18c9f6caa7471/Thesis/InfReductionSeq.lean#L268-L281","name":"Thesis.InfReductionSeq.inf_reduction_seq.exists_regular_of_trans","line":268,"kind":"theorem","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.inf_reduction_seq.exists_regular_of_trans","doc":"Any infinite r⁺-reduction sequence has a corresponding infinite r-reduction\nsequence, which contains all of the elements of the transitive sequence and\nstarts with the same element.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.inf_reduction_seq.exists_regular_of_trans\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">inf_reduction_seq</span>.<span class=\"name\">exists_regular_of_trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.transGen\">⁺</a></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">f'</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\">r</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f'</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">∃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f'</span> <span class=\"fn\">m</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f'</span> <span class=\"fn\">0</span></span></span></span></span></span></div></div>"}]}