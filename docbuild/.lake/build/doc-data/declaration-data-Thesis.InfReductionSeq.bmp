{"name":"Thesis.InfReductionSeq","instances":[],"imports":["Init","Mathlib.Tactic","Mathlib.Logic.Relation","Thesis.ReductionSeq"],"declarations":[{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L527-L556","name":"Thesis.InfReductionSeq.regular_seq_of_rt_seq","line":527,"kind":"theorem","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.regular_seq_of_rt_seq","doc":"A statement that is \"obvious\" when written down in a pen-and-paper proof, but which\nis non-trivial to formalize:\n\nIf we have an infinite r∗-reduction sequence\n`a₀ ->* a₁ ->* a₂ ...`\nthere must be some (finite or infinite) reduction sequence\n`a₀ -> ... -> a₁ -> ... -> a₂ -> ...`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.regular_seq_of_rt_seq\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">regular_seq_of_rt_seq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.reflTransGen\">∗</a></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">N</span> : <a href=\"./Mathlib/Data/ENat/Defs.html#ENat\">ℕ∞</a>) (<span class=\"fn\">f'</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\">r</span> <span class=\"fn\">N</span> <span class=\"fn\">f'</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">∃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (_ : <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">N</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f'</span> <span class=\"fn\">m</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f'</span> <span class=\"fn\">0</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L509-L524","name":"Thesis.InfReductionSeq.finite_seq_flatten","line":509,"kind":"theorem","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.finite_seq_flatten","doc":"We can flatten a finite r∗-reduction sequence, by round-tripping through\nthe inductive `ReductionSeq` definition.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.finite_seq_flatten\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">finite_seq_flatten</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(N : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hrs : <span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.reflTransGen\">∗</a></span> <span class=\"fn\">(↑<span class=\"fn\">N</span>)</span> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">N'</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">f'</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\">r</span> <span class=\"fn\">(↑<span class=\"fn\">N'</span>)</span> <span class=\"fn\">f'</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f'</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ <span class=\"fn\">n</span> ≤ <span class=\"fn\">N</span>, <span class=\"fn\">∃ <span class=\"fn\">m</span> &lt; <span class=\"fn\"><span class=\"fn\">N'</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f'</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L479-L506","name":"Thesis.InfReductionSeq.finite_of_degenerate","line":479,"kind":"theorem","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.finite_of_degenerate","doc":"If the infinite r∗-reduction sequence is degenerate, there must be\nsome finite r∗-reduction sequence which contains all of the elements of the\ninfinite r∗-reduction sequence, and starts with the same element.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.finite_of_degenerate\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">finite_of_degenerate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.reflTransGen\">∗</a></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hdg : <span class=\"fn\"><span class=\"fn\">hf</span>.degenerate</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">N</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) (<span class=\"fn\">f'</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.reflTransGen\">∗</a></span> <span class=\"fn\">(↑<span class=\"fn\">N</span>)</span> <span class=\"fn\">f'</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">∃ <span class=\"fn\">m</span> ≤ <span class=\"fn\">N</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f'</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f'</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L448-L474","name":"Thesis.InfReductionSeq.exists_inf_regular_seq_of_not_degenerate","line":448,"kind":"theorem","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.exists_inf_regular_seq_of_not_degenerate","doc":"If `hf` is not degenerate, there must be an infinite r-reduction\nsequence which contains all elements of `f` and starts with `f 0`.\n\nThis lemma first translates `hf` to an infinite r⁺-reduction sequence, and\nthen uses the techniques for transitive reduction sequences developed above.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.exists_inf_regular_seq_of_not_degenerate\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">exists_inf_regular_seq_of_not_degenerate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.reflTransGen\">∗</a></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hnd : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">hf</span>.degenerate</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">f'</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\">r</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f'</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">∃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f'</span> <span class=\"fn\">m</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f'</span> <span class=\"fn\">0</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L441-L444","name":"Thesis.InfReductionSeq.trans_seq_contains_elems","line":441,"kind":"theorem","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_seq_contains_elems","doc":"`trans_seq f hgs` contains all elements of `f`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_seq_contains_elems\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">trans_seq_contains_elems</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.reflTransGen\">∗</a></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(htsg : <span class=\"fn\"><a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.transitive_step_guarantee\">Thesis.InfReductionSeq.transitive_step_guarantee</a> <span class=\"fn\">hf</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_seq\">Thesis.InfReductionSeq.trans_seq</a> <span class=\"fn\">hf</span> <span class=\"fn\">htsg</span> <span class=\"fn\">m</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L419-L438","name":"Thesis.InfReductionSeq.trans_seq_inf_reduction_seq","line":419,"kind":"theorem","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_seq_inf_reduction_seq","doc":"`trans_seq f hgs` is an infinite r⁺-reduction sequence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_seq_inf_reduction_seq\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">trans_seq_inf_reduction_seq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.reflTransGen\">∗</a></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(htsg : <span class=\"fn\"><a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.transitive_step_guarantee\">Thesis.InfReductionSeq.transitive_step_guarantee</a> <span class=\"fn\">hf</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.transGen\">⁺</a></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">(<a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_seq\">Thesis.InfReductionSeq.trans_seq</a> <span class=\"fn\">hf</span> <span class=\"fn\">htsg</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L385-L416","name":"Thesis.InfReductionSeq.trans_idxs_sandwich","line":385,"kind":"theorem","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_idxs_sandwich","doc":"All `n` are sandwiched by two subsequent elements in `trans_idxs f hgs`.\nCombining this lemma with `trans_idxs_inbetween` above yields the proof\nthat `trans_seq f hgs` contains all elements of `f`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_idxs_sandwich\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">trans_idxs_sandwich</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.reflTransGen\">∗</a></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(htsg : <span class=\"fn\"><a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.transitive_step_guarantee\">Thesis.InfReductionSeq.transitive_step_guarantee</a> <span class=\"fn\">hf</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ico\">Set.Ico</a> <span class=\"fn\">(<a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_idxs\">Thesis.InfReductionSeq.trans_idxs</a> <span class=\"fn\">hf</span> <span class=\"fn\">htsg</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_idxs\">Thesis.InfReductionSeq.trans_idxs</a> <span class=\"fn\">hf</span> <span class=\"fn\">htsg</span> <span class=\"fn\">(<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L366-L383","name":"Thesis.InfReductionSeq.trans_idxs_inbetween","line":366,"kind":"theorem","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_idxs_inbetween","doc":"If `n` is inbetween `trans_idxs f hgs k` and `trans_idxs f hgs (k + 1)`,\nthen `f n` must be equal to `f (trans_idxs f hgs k)`. Hence `f n` is an\nelement of `trans_seq f hgs`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_idxs_inbetween\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">trans_idxs_inbetween</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.reflTransGen\">∗</a></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(htsg : <span class=\"fn\"><a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.transitive_step_guarantee\">Thesis.InfReductionSeq.transitive_step_guarantee</a> <span class=\"fn\">hf</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ico\">Set.Ico</a> <span class=\"fn\">(<a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_idxs\">Thesis.InfReductionSeq.trans_idxs</a> <span class=\"fn\">hf</span> <span class=\"fn\">htsg</span> <span class=\"fn\">k</span>)</span> <span class=\"fn\">(<a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_idxs\">Thesis.InfReductionSeq.trans_idxs</a> <span class=\"fn\">hf</span> <span class=\"fn\">htsg</span> <span class=\"fn\">(<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span>)</span></span></span> →\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_idxs\">Thesis.InfReductionSeq.trans_idxs</a> <span class=\"fn\">hf</span> <span class=\"fn\">htsg</span> <span class=\"fn\">k</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L355-L364","name":"Thesis.InfReductionSeq.trans_idxs_tends_to_infty","line":355,"kind":"theorem","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_idxs_tends_to_infty","doc":"For all n, there is an element of `trans_idxs` that is larger than n. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_idxs_tends_to_infty\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">trans_idxs_tends_to_infty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.reflTransGen\">∗</a></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(htsg : <span class=\"fn\"><a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.transitive_step_guarantee\">Thesis.InfReductionSeq.transitive_step_guarantee</a> <span class=\"fn\">hf</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">k</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_idxs\">Thesis.InfReductionSeq.trans_idxs</a> <span class=\"fn\">hf</span> <span class=\"fn\">htsg</span> <span class=\"fn\">k</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L351-L353","name":"Thesis.InfReductionSeq.trans_idxs_inc","line":351,"kind":"theorem","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_idxs_inc","doc":"Doing an extra iteration of `trans_idx_step` yields a larger index. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_idxs_inc\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">trans_idxs_inc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.reflTransGen\">∗</a></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(htsg : <span class=\"fn\"><a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.transitive_step_guarantee\">Thesis.InfReductionSeq.transitive_step_guarantee</a> <span class=\"fn\">hf</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_idxs\">Thesis.InfReductionSeq.trans_idxs</a> <span class=\"fn\">hf</span> <span class=\"fn\">htsg</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_idxs\">Thesis.InfReductionSeq.trans_idxs</a> <span class=\"fn\">hf</span> <span class=\"fn\">htsg</span> <span class=\"fn\">(<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L346-L349","name":"Thesis.InfReductionSeq.trans_idx_step_inc","line":346,"kind":"theorem","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_idx_step_inc","doc":"Taking a step from index `k` yields an index greater than `k`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_idx_step_inc\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">trans_idx_step_inc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.reflTransGen\">∗</a></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(htsg : <span class=\"fn\"><a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.transitive_step_guarantee\">Thesis.InfReductionSeq.transitive_step_guarantee</a> <span class=\"fn\">hf</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_idx_step\">Thesis.InfReductionSeq.trans_idx_step</a> <span class=\"fn\">hf</span> <span class=\"fn\">htsg</span> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L340-L344","name":"Thesis.InfReductionSeq.trans_seq","line":340,"kind":"def","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_seq","doc":"We form the sequence by getting the element at each index given by `trans_idxs`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_seq\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">trans_seq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.reflTransGen\">∗</a></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(htsg : <span class=\"fn\"><a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.transitive_step_guarantee\">Thesis.InfReductionSeq.transitive_step_guarantee</a> <span class=\"fn\">hf</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L333-L338","name":"Thesis.InfReductionSeq.trans_idxs","line":333,"kind":"def","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_idxs","doc":"By iterating `trans_idx_step`, we can generate a sequence of indices into `f`\nwhich represent all transitive steps in `f`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_idxs\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">trans_idxs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.reflTransGen\">∗</a></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(htsg : <span class=\"fn\"><a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.transitive_step_guarantee\">Thesis.InfReductionSeq.transitive_step_guarantee</a> <span class=\"fn\">hf</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L326-L331","name":"Thesis.InfReductionSeq.trans_idx_step","line":326,"kind":"def","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_idx_step","doc":"From some index `n` we step to a next index `choose (htsg n) + 1`, which is the\nend of a transitive step.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_idx_step\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">trans_idx_step</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.reflTransGen\">∗</a></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(htsg : <span class=\"fn\"><a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.transitive_step_guarantee\">Thesis.InfReductionSeq.transitive_step_guarantee</a> <span class=\"fn\">hf</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L295-L320","name":"Thesis.InfReductionSeq.tsg_of_not_degenerate","line":295,"kind":"theorem","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.tsg_of_not_degenerate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.tsg_of_not_degenerate\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">tsg_of_not_degenerate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hseq : <span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\">r</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hndeg : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">hseq</span>.degenerate</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.transitive_step_guarantee\">Thesis.InfReductionSeq.transitive_step_guarantee</a> <span class=\"fn\">hseq</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L292-L293","name":"Thesis.InfReductionSeq.transitive_step_guarantee","line":292,"kind":"def","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.transitive_step_guarantee","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.transitive_step_guarantee\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">transitive_step_guarantee</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hseq : <span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\">r</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L285-L290","name":"Thesis.reduction_seq.degenerate","line":285,"kind":"def","docLink":"./Thesis/InfReductionSeq.html#Thesis.reduction_seq.degenerate","doc":"We call an infinite reduction sequence _degenerate_ if, from some point onwards,\nit only contains steps from one element to itself.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.reduction_seq.degenerate\"><span class=\"name\">Thesis</span>.<span class=\"name\">reduction_seq</span>.<span class=\"name\">degenerate</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hseq : <span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\">r</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L245-L258","name":"Thesis.InfReductionSeq.exists_regular_of_trans","line":245,"kind":"theorem","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.exists_regular_of_trans","doc":"Any infinite r⁺-reduction sequence has a corresponding infinite r-reduction\nsequence, which contains all of the elements of the transitive sequence and\nstarts with the same element.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.exists_regular_of_trans\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">exists_regular_of_trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.transGen\">⁺</a></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">f'</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\">r</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f'</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\">∃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f'</span> <span class=\"fn\">m</span></span></span></span>)</span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">0</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f'</span> <span class=\"fn\">0</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L225-L241","name":"Thesis.InfReductionSeq.seq_inf_reduction_seq","line":225,"kind":"theorem","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.seq_inf_reduction_seq","doc":"`seq f hf` forms an infinite r-reduction sequence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.seq_inf_reduction_seq\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">seq_inf_reduction_seq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.transGen\">⁺</a></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\">r</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">(<a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.seq\">Thesis.InfReductionSeq.seq</a> <span class=\"fn\">f</span> <span class=\"fn\">hf</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L214-L223","name":"Thesis.InfReductionSeq.seq_contains_elems","line":214,"kind":"theorem","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.seq_contains_elems","doc":"`seq` contains all elements of the infinite transitive sequence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.seq_contains_elems\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">seq_contains_elems</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.transGen\">⁺</a></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">m</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.seq\">Thesis.InfReductionSeq.seq</a> <span class=\"fn\">f</span> <span class=\"fn\">hf</span> <span class=\"fn\">m</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L206-L212","name":"Thesis.InfReductionSeq.seq","line":206,"kind":"def","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.seq","doc":"We form our expanded sequence by starting with `f 0`, and then continuing with\nall reducts of `f 0` in the infinite transitive sequence, as generated by `aux`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.seq\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">seq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.transGen\">⁺</a></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L168-L204","name":"Thesis.InfReductionSeq.aux_inf_reduction_seq","line":168,"kind":"theorem","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.aux_inf_reduction_seq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.aux_inf_reduction_seq\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">aux_inf_reduction_seq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.transGen\">⁺</a></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\">r</span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">(<a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.aux\">Thesis.InfReductionSeq.aux</a> <span class=\"fn\">(<a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.inf_trans_lists\">Thesis.InfReductionSeq.inf_trans_lists</a> <span class=\"fn\">f</span> <span class=\"fn\">hf</span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">0</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L148-L160","name":"Thesis.InfReductionSeq.aux_elem","line":148,"kind":"theorem","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.aux_elem","doc":"By `aux_skip_i`, `aux_elem'` can be modified to prove each element of `f` is\nreachable from the first list. Given that `aux _ _ 0` is the basis of our\neventual sequence, this essentially proves that all elements in `f` (except `f 0`)\nappear in the expanded sequence.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.aux_elem\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">aux_elem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.transGen\">⁺</a></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">n'</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.aux\">Thesis.InfReductionSeq.aux</a> <span class=\"fn\">(<a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.inf_trans_lists\">Thesis.InfReductionSeq.inf_trans_lists</a> <span class=\"fn\">f</span> <span class=\"fn\">hf</span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">0</span> <span class=\"fn\">n'</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L128-L146","name":"Thesis.InfReductionSeq.aux_elem'","line":128,"kind":"theorem","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.aux_elem'","doc":"If `f` is an infinite transitive reduction sequence, each element > 0 appears\nas the last element of the `n - 1`th list in the sequence generated by `aux ...`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.aux_elem'\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">aux_elem'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.transGen\">⁺</a></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">let <span class=\"fn\">ls</span> := <span class=\"fn\"><a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.inf_trans_lists\">Thesis.InfReductionSeq.inf_trans_lists</a> <span class=\"fn\">f</span> <span class=\"fn\">hf</span></span>;\n<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.aux\">Thesis.InfReductionSeq.aux</a> <span class=\"fn\">ls</span> <span class=\"fn\">⋯</span> <span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">ls</span> <span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>)</span>)</span>.length</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L114-L126","name":"Thesis.InfReductionSeq.aux_skip_i","line":114,"kind":"theorem","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.aux_skip_i","doc":"An extension of `aux_skip`; we can get the `k`th element starting from list `m + i`\nby starting from list `m` and getting the `k + n`th element, where `n` is the\nsum of the lengths of the intermediate lists.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.aux_skip_i\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">aux_skip_i</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l_seq : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hne : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l_seq</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">[]</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i m k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.aux\">Thesis.InfReductionSeq.aux</a> <span class=\"fn\">l_seq</span> <span class=\"fn\">hne</span> <span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.aux\">Thesis.InfReductionSeq.aux</a> <span class=\"fn\">l_seq</span> <span class=\"fn\">hne</span> <span class=\"fn\">(<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">i</span>)</span> <span class=\"fn\">k</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L104-L112","name":"Thesis.InfReductionSeq.aux_skip","line":104,"kind":"theorem","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.aux_skip","doc":"If `x := aux l_seq hne (m + 1) k`, i.e. the `k`th element starting from list\n`m + 1`, we can get the same element starting from the previous list `m` by\nadding some `n`, which is the length of list `m`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.aux_skip\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">aux_skip</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l_seq : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hne : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l_seq</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">[]</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.aux\">Thesis.InfReductionSeq.aux</a> <span class=\"fn\">l_seq</span> <span class=\"fn\">hne</span> <span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">n</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.aux\">Thesis.InfReductionSeq.aux</a> <span class=\"fn\">l_seq</span> <span class=\"fn\">hne</span> <span class=\"fn\">(<span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <span class=\"fn\">k</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L89-L102","name":"Thesis.InfReductionSeq.aux","line":89,"kind":"def","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.aux","doc":"Starting at list no. `list_idx`, get the `elem_idx`th element, going to the next\nlist if `elem_idx ≥ (l_seq list_idx).length`.\n\nThis definition is largely due to Edward van de Meent on the Lean Zulip.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.aux\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l_seq : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hne : <span class=\"fn\">∀ (<span class=\"fn\">n</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l_seq</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">[]</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(list_idx elem_idx : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L73-L76","name":"Thesis.InfReductionSeq.inf_trans_lists.nonempty","line":73,"kind":"theorem","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.inf_trans_lists.nonempty","doc":"Each of the lists in `inf_trans_lists f hf` is nonempty. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.inf_trans_lists.nonempty\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">inf_trans_lists</span>.<span class=\"name\">nonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hf : <span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.transGen\">⁺</a></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.inf_trans_lists\">Thesis.InfReductionSeq.inf_trans_lists</a> <span class=\"fn\">f</span> <span class=\"fn\">hf</span> <span class=\"fn\">n</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">[]</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L66-L71","name":"Thesis.InfReductionSeq.inf_trans_lists","line":66,"kind":"def","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.inf_trans_lists","doc":"An infinite r⁺-reduction sequence can be turned into an infinite\nsequence of lists of reducts, as given by `trans_chain'`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.inf_trans_lists\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">inf_trans_lists</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Thesis/ReductionSeq.html#Thesis.reduction_seq\">Thesis.reduction_seq</a> <span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.transGen\">⁺</a></span> <a href=\"./Mathlib/Order/Notation.html#Top.top\">⊤</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L59-L63","name":"Thesis.InfReductionSeq.trans_chain'.nonempty","line":59,"kind":"theorem","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_chain'.nonempty","doc":"`trans_chain' h` is nonempty. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_chain'.nonempty\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">trans_chain'</span>.<span class=\"name\">nonempty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.transGen\">⁺</a></span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_chain'\">Thesis.InfReductionSeq.trans_chain'</a> <span class=\"fn\">h</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">[]</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L52-L57","name":"Thesis.InfReductionSeq.trans_chain'.spec","line":52,"kind":"theorem","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_chain'.spec","doc":"The list returned by `trans_chain'` has the properties given by `trans_chain`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_chain'.spec\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">trans_chain'</span>.<span class=\"name\">spec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.transGen\">⁺</a></span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_chain'\">Thesis.InfReductionSeq.trans_chain'</a> <span class=\"fn\">h</span>)</span>.getLast?</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Batteries/Data/List/Basic.html#List.Chain\">List.Chain</a> <span class=\"fn\">r</span> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_chain'\">Thesis.InfReductionSeq.trans_chain'</a> <span class=\"fn\">h</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L46-L50","name":"Thesis.InfReductionSeq.trans_chain'","line":46,"kind":"def","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_chain'","doc":"`trans_chain'` chooses a list that has the properties given by `trans_chain`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_chain'\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">trans_chain'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.transGen\">⁺</a></span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/svkampen/msc-thesis/blob/1a9bf769df9f3c2bd498779938d2cd985420ccc1/Thesis/InfReductionSeq.lean#L29-L43","name":"Thesis.InfReductionSeq.trans_chain","line":29,"kind":"theorem","docLink":"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_chain","doc":"A single transitive step `r⁺ a b` can be expanded to a list of reducts `l`,\nending in `b`, such that `List.Chain r a l`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Thesis/InfReductionSeq.html#Thesis.InfReductionSeq.trans_chain\"><span class=\"name\">Thesis</span>.<span class=\"name\">InfReductionSeq</span>.<span class=\"name\">trans_chain</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{r : <span class=\"fn\"><a href=\"./Mathlib/Data/Rel.html#Rel\">Rel</a> <span class=\"fn\">α</span> <span class=\"fn\">α</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">r</span><a href=\"./Thesis/Misc.html#Rel.transGen\">⁺</a></span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> → <span class=\"fn\">∃ (<span class=\"fn\">l</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span>.getLast?</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">b</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><a href=\"./Batteries/Data/List/Basic.html#List.Chain\">List.Chain</a> <span class=\"fn\">r</span> <span class=\"fn\">a</span> <span class=\"fn\">l</span></span></span></span></span></div></div>"}]}