{"name":"Mathlib.Order.JordanHolder","instances":[],"imports":["Init","Mathlib.Order.Lattice","Mathlib.Data.List.Sort","Mathlib.Logic.Equiv.Fin","Mathlib.Logic.Equiv.Functor","Mathlib.Data.Fintype.Card","Mathlib.Order.RelSeries"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L410-L427","name":"CompositionSeries.jordan_holder","line":410,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.jordan_holder","doc":"The **Jordan-Hölder** theorem, stated for any `JordanHolderLattice`.\nIf two composition series start and finish at the same place, they are equivalent. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.jordan_holder\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">jordan_holder</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s₁ s₂ : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">s₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">s₂</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ht : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span>.Equivalent</span> <span class=\"fn\">s₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L369-L408","name":"CompositionSeries.exists_last_eq_snoc_equivalent","line":369,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.exists_last_eq_snoc_equivalent","doc":"Given a `CompositionSeries`, `s`, and an element `x`\nsuch that `x` is maximal inside `s.last` there is a series, `t`,\nsuch that `t.last = x`, `t.head = s.head`\nand `snoc t s.last _` is equivalent to `s`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.exists_last_eq_snoc_equivalent\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">exists_last_eq_snoc_equivalent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">X</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\">x</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">t</span> : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>),\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">s</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a>     <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">t</span>.length</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">s</span>.length</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∃ (<span class=\"fn\">htx</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">t</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">x</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.Equivalent</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.snoc\">RelSeries.snoc</a> <span class=\"fn\">t</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span>)</span> <span class=\"fn\">⋯</span>)</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L356-L367","name":"CompositionSeries.eq_of_head_eq_head_of_last_eq_last_of_length_eq_zero","line":356,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.eq_of_head_eq_head_of_last_eq_last_of_length_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.eq_of_head_eq_head_of_last_eq_last_of_length_eq_zero\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">eq_of_head_eq_head_of_last_eq_last_of_length_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₁ s₂ : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">s₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">s₂</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ht : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s₂</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs₁0 : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span>.length</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">s₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L349-L354","name":"CompositionSeries.length_pos_of_head_eq_head_of_last_eq_last_of_length_pos","line":349,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.length_pos_of_head_eq_head_of_last_eq_last_of_length_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.length_pos_of_head_eq_head_of_last_eq_last_of_length_pos\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">length_pos_of_head_eq_head_of_last_eq_last_of_length_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₁ s₂ : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">s₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">s₂</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ht : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s₂</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s₁</span>.length</span></span> → <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s₂</span>.length</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L342-L347","name":"CompositionSeries.length_eq_zero_of_head_eq_head_of_last_eq_last_of_length_eq_zero","line":342,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.length_eq_zero_of_head_eq_head_of_last_eq_last_of_length_eq_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.length_eq_zero_of_head_eq_head_of_last_eq_last_of_length_eq_zero\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">length_eq_zero_of_head_eq_head_of_last_eq_last_of_length_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₁ s₂ : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">s₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">s₂</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ht : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s₂</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span>.length</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₂</span>.length</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L308-L338","name":"CompositionSeries.Equivalent.snoc_snoc_swap","line":308,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.snoc_snoc_swap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.snoc_snoc_swap\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">Equivalent</span>.<span class=\"name\">snoc_snoc_swap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ x₂ y₁ y₂ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hsat₁ : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span>)</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hsat₂ : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span>)</span> <span class=\"fn\">x₂</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hsaty₁ : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.snoc\">RelSeries.snoc</a> <span class=\"fn\">s</span> <span class=\"fn\">x₁</span> <span class=\"fn\">hsat₁</span>)</span>.last</span> <span class=\"fn\">y₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hsaty₂ : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.snoc\">RelSeries.snoc</a> <span class=\"fn\">s</span> <span class=\"fn\">x₂</span> <span class=\"fn\">hsat₂</span>)</span>.last</span> <span class=\"fn\">y₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hr₁ : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.Iso\">JordanHolderLattice.Iso</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span></span>, <span class=\"fn\">x₁</span>)</span> <span class=\"fn\">(<span class=\"fn\">x₂</span>, <span class=\"fn\">y₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hr₂ : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.Iso\">JordanHolderLattice.Iso</a> <span class=\"fn\">(<span class=\"fn\">x₁</span>, <span class=\"fn\">y₁</span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span></span>, <span class=\"fn\">x₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent\">CompositionSeries.Equivalent</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.snoc\">RelSeries.snoc</a> <span class=\"fn\">s</span> <span class=\"fn\">x₁</span> <span class=\"fn\">hsat₁</span>)</span>.snoc</span> <span class=\"fn\">y₁</span> <span class=\"fn\">hsaty₁</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.snoc\">RelSeries.snoc</a> <span class=\"fn\">s</span> <span class=\"fn\">x₂</span> <span class=\"fn\">hsat₂</span>)</span>.snoc</span> <span class=\"fn\">y₂</span> <span class=\"fn\">hsaty₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L305-L306","name":"CompositionSeries.Equivalent.length_eq","line":305,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.length_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.length_eq\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">Equivalent</span>.<span class=\"name\">length_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₁ s₂ : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span>.Equivalent</span> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span>.length</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">s₂</span>.length</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L291-L303","name":"CompositionSeries.Equivalent.snoc","line":291,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.snoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.snoc\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">Equivalent</span>.<span class=\"name\">snoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₁ s₂ : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x₁ x₂ : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hsat₁ : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s₁</span>)</span> <span class=\"fn\">x₁</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{hsat₂ : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s₂</span>)</span> <span class=\"fn\">x₂</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hequiv : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span>.Equivalent</span> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hlast : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.Iso\">JordanHolderLattice.Iso</a> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s₁</span></span>, <span class=\"fn\">x₁</span>)</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s₂</span></span>, <span class=\"fn\">x₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent\">CompositionSeries.Equivalent</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.snoc\">RelSeries.snoc</a> <span class=\"fn\">s₁</span> <span class=\"fn\">x₁</span> <span class=\"fn\">hsat₁</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.snoc\">RelSeries.snoc</a> <span class=\"fn\">s₂</span> <span class=\"fn\">x₂</span> <span class=\"fn\">hsat₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L274-L289","name":"CompositionSeries.Equivalent.smash","line":274,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.smash","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.smash\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">Equivalent</span>.<span class=\"name\">smash</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₁ s₂ t₁ t₂ : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">s₂</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ht : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">t₁</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">t₂</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span>.Equivalent</span> <span class=\"fn\">t₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₂</span>.Equivalent</span> <span class=\"fn\">t₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent\">CompositionSeries.Equivalent</a> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.smash\">RelSeries.smash</a> <span class=\"fn\">s₁</span> <span class=\"fn\">s₂</span> <span class=\"fn\">hs</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.smash\">RelSeries.smash</a> <span class=\"fn\">t₁</span> <span class=\"fn\">t₂</span> <span class=\"fn\">ht</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L268-L272","name":"CompositionSeries.Equivalent.trans","line":268,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.trans\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">Equivalent</span>.<span class=\"name\">trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₁ s₂ s₃ : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span>.Equivalent</span> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₂</span>.Equivalent</span> <span class=\"fn\">s₃</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span>.Equivalent</span> <span class=\"fn\">s₃</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L264-L266","name":"CompositionSeries.Equivalent.symm","line":264,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.symm\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">Equivalent</span>.<span class=\"name\">symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₁ s₂ : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₁</span>.Equivalent</span> <span class=\"fn\">s₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s₂</span>.Equivalent</span> <span class=\"fn\">s₁</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L260-L262","name":"CompositionSeries.Equivalent.refl","line":260,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent.refl\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">Equivalent</span>.<span class=\"name\">refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.Equivalent</span> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L250-L256","name":"CompositionSeries.Equivalent","line":250,"kind":"def","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent","doc":"Two `CompositionSeries X`, `s₁` and `s₂` are equivalent if there is a bijection\n`e : Fin s₁.length ≃ Fin s₂.length` such that for any `i`,\n`Iso (s₁ i) (s₁ i.succ) (s₂ (e i), s₂ (e i.succ))` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.Equivalent\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">Equivalent</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s₁ s₂ : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L243-L248","name":"CompositionSeries.snoc_eraseLast_last","line":243,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.snoc_eraseLast_last","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.snoc_eraseLast_last\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">snoc_eraseLast_last</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.eraseLast\">RelSeries.eraseLast</a> <span class=\"fn\">s</span>)</span>.last</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.eraseLast\">RelSeries.eraseLast</a> <span class=\"fn\">s</span>)</span>.snoc</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span>)</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L237-L241","name":"CompositionSeries.eq_snoc_eraseLast","line":237,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.eq_snoc_eraseLast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.eq_snoc_eraseLast\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">eq_snoc_eraseLast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.length</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.eraseLast\">RelSeries.eraseLast</a> <span class=\"fn\">s</span>)</span>.snoc</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span>)</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L226-L231","name":"CompositionSeries.isMaximal_eraseLast_last","line":226,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.isMaximal_eraseLast_last","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.isMaximal_eraseLast_last\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">isMaximal_eraseLast_last</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.length</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.eraseLast\">RelSeries.eraseLast</a> <span class=\"fn\">s</span>)</span>.last</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L222-L224","name":"CompositionSeries.lt_last_of_mem_eraseLast","line":222,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.lt_last_of_mem_eraseLast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.lt_last_of_mem_eraseLast\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">lt_last_of_mem_eraseLast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.length</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.eraseLast\">RelSeries.eraseLast</a> <span class=\"fn\">s</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L209-L220","name":"CompositionSeries.mem_eraseLast","line":209,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.mem_eraseLast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.mem_eraseLast\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">mem_eraseLast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">s</span>.length</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.eraseLast\">RelSeries.eraseLast</a> <span class=\"fn\">s</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L199-L207","name":"CompositionSeries.mem_eraseLast_of_ne_of_mem","line":199,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.mem_eraseLast_of_ne_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.mem_eraseLast_of_ne_of_mem\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">mem_eraseLast_of_ne_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hxs : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.eraseLast\">RelSeries.eraseLast</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L196-L197","name":"CompositionSeries.last_eraseLast_le","line":196,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.last_eraseLast_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.last_eraseLast_le\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">last_eraseLast_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.eraseLast\">RelSeries.eraseLast</a> <span class=\"fn\">s</span>)</span>.last</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L192-L194","name":"CompositionSeries.head_le_of_mem","line":192,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.head_le_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.head_le_of_mem\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">head_le_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L188-L190","name":"CompositionSeries.head_le","line":188,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.head_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.head_le\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">head_le</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.length</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.head\">RelSeries.head</a> <span class=\"fn\">s</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.toFun</span> <span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L184-L186","name":"CompositionSeries.le_last_of_mem","line":184,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.le_last_of_mem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.le_last_of_mem\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">le_last_of_mem</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L180-L182","name":"CompositionSeries.le_last","line":180,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.le_last","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.le_last\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">le_last</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">s</span>.length</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.toFun</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Mathlib/Order/RelSeries.html#RelSeries.last\">RelSeries.last</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L170-L170","name":"CompositionSeries.ext","line":170,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.ext","doc":"Two `CompositionSeries` are equal if they have the same elements. See also `ext_fun`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.ext\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">ext</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s₁ s₂ : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">x</span> : <span class=\"fn\">X</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s₁</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s₂</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">s₁</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">s₂</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L166-L167","name":"CompositionSeries.toList_nodup","line":166,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.toList_nodup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.toList_nodup\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">toList_nodup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.toList\">RelSeries.toList</a> <span class=\"fn\">s</span>)</span>.Nodup</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L160-L164","name":"CompositionSeries.toList_sorted","line":160,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.toList_sorted","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.toList_sorted\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">toList_sorted</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/List/Sort.html#List.Sorted\">List.Sorted</a> <span class=\"fn\">(fun (<span class=\"fn\">x1</span> <span class=\"fn\">x2</span> : <span class=\"fn\">X</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">x2</span></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/RelSeries.html#RelSeries.toList\">RelSeries.toList</a> <span class=\"fn\">s</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L154-L158","name":"CompositionSeries.total","line":154,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.total","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.total\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">total</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{s : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x y : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hx : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hy : <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">s</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">y</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L150-L152","name":"CompositionSeries.inj","line":150,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.inj\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i j : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.length</span>.succ</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.toFun</span> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.toFun</span> <span class=\"fn\">j</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L147-L148","name":"CompositionSeries.injective","line":147,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.injective\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\"><span class=\"fn\">s</span>.toFun</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L144-L145","name":"CompositionSeries.strictMono","line":144,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.strictMono","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.strictMono\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">strictMono</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Monotone/Basic.html#StrictMono\">StrictMono</a> <span class=\"fn\"><span class=\"fn\">s</span>.toFun</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L140-L142","name":"CompositionSeries.lt_succ","line":140,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries.lt_succ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries.lt_succ\"><span class=\"name\">CompositionSeries</span>.<span class=\"name\">lt_succ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\">CompositionSeries</a> <span class=\"fn\">X</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\"><span class=\"fn\">s</span>.length</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.toFun</span> <span class=\"fn\"><span class=\"fn\">i</span>.castSucc</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">s</span>.toFun</span> <span class=\"fn\"><span class=\"fn\">i</span>.succ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L126-L134","name":"CompositionSeries","line":126,"kind":"def","docLink":"./Mathlib/Order/JordanHolder.html#CompositionSeries","doc":"A `CompositionSeries X` is a finite nonempty series of elements of a\n`JordanHolderLattice` such that each element is maximal inside the next. The length of a\n`CompositionSeries X` is one less than the number of elements in the series.\nNote that there is no stipulation that a series start from the bottom of the lattice and finish at\nthe top. For a composition series `s`, `s.last` is the largest element of the series,\nand `s.head` is the least element.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#CompositionSeries\"><span class=\"name\">CompositionSeries</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L114-L116","name":"JordanHolderLattice.IsMaximal.iso_refl","line":114,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal.iso_refl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal.iso_refl\"><span class=\"name\">JordanHolderLattice</span>.<span class=\"name\">IsMaximal</span>.<span class=\"name\">iso_refl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x y : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.Iso\">JordanHolderLattice.Iso</a> <span class=\"fn\">(<span class=\"fn\">x</span>, <span class=\"fn\">y</span>)</span> <span class=\"fn\">(<span class=\"fn\">x</span>, <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L111-L112","name":"JordanHolderLattice.second_iso_of_eq","line":111,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.second_iso_of_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.second_iso_of_eq\"><span class=\"name\">JordanHolderLattice</span>.<span class=\"name\">second_iso_of_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x y a b : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\">x</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hb : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Min.min\">⊓</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.Iso\">JordanHolderLattice.Iso</a> <span class=\"fn\">(<span class=\"fn\">x</span>, <span class=\"fn\">a</span>)</span> <span class=\"fn\">(<span class=\"fn\">b</span>, <span class=\"fn\">y</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L105-L109","name":"JordanHolderLattice.isMaximal_of_eq_inf","line":105,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.isMaximal_of_eq_inf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.isMaximal_of_eq_inf\"><span class=\"name\">JordanHolderLattice</span>.<span class=\"name\">isMaximal_of_eq_inf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x b : <span class=\"fn\">X</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a y : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Min.min\">⊓</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hxy : <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">y</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hxb : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\">x</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hyb : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\">y</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\">a</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L99-L103","name":"JordanHolderLattice.isMaximal_inf_right_of_isMaximal_sup","line":99,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.isMaximal_inf_right_of_isMaximal_sup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.isMaximal_inf_right_of_isMaximal_sup\"><span class=\"name\">JordanHolderLattice</span>.<span class=\"name\">isMaximal_inf_right_of_isMaximal_sup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x y : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hxz : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">y</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hyz : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\">y</span> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">y</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Min.min\">⊓</a> <span class=\"fn\">y</span>)</span> <span class=\"fn\">y</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L93-L93","name":"JordanHolderLattice.second_iso","line":93,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.second_iso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.second_iso\"><span class=\"name\">JordanHolderLattice</span>.<span class=\"name\">second_iso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst✝ : <span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x y : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">y</span>)</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.Iso\">JordanHolderLattice.Iso</a> <span class=\"fn\">(<span class=\"fn\">x</span>, <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Min.min\">⊓</a> <span class=\"fn\">y</span></span>, <span class=\"fn\">y</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L92-L92","name":"JordanHolderLattice.iso_trans","line":92,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.iso_trans","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.iso_trans\"><span class=\"name\">JordanHolderLattice</span>.<span class=\"name\">iso_trans</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst✝ : <span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x y z : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.Iso\">JordanHolderLattice.Iso</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.Iso\">JordanHolderLattice.Iso</a> <span class=\"fn\">y</span> <span class=\"fn\">z</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.Iso\">JordanHolderLattice.Iso</a> <span class=\"fn\">x</span> <span class=\"fn\">z</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L91-L91","name":"JordanHolderLattice.iso_symm","line":91,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.iso_symm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.iso_symm\"><span class=\"name\">JordanHolderLattice</span>.<span class=\"name\">iso_symm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst✝ : <span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x y : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.Iso\">JordanHolderLattice.Iso</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.Iso\">JordanHolderLattice.Iso</a> <span class=\"fn\">y</span> <span class=\"fn\">x</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L90-L90","name":"JordanHolderLattice.Iso","line":90,"kind":"def","docLink":"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.Iso","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.Iso\"><span class=\"name\">JordanHolderLattice</span>.<span class=\"name\">Iso</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst✝ : <span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span></span> → <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L88-L88","name":"JordanHolderLattice.isMaximal_inf_left_of_isMaximal_sup","line":88,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.isMaximal_inf_left_of_isMaximal_sup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.isMaximal_inf_left_of_isMaximal_sup\"><span class=\"name\">JordanHolderLattice</span>.<span class=\"name\">isMaximal_inf_left_of_isMaximal_sup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst✝ : <span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x y : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">y</span>)</span></span> →\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\">y</span> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">y</span>)</span></span> → <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Min.min\">⊓</a> <span class=\"fn\">y</span>)</span> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L87-L87","name":"JordanHolderLattice.sup_eq_of_isMaximal","line":87,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.sup_eq_of_isMaximal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.sup_eq_of_isMaximal\"><span class=\"name\">JordanHolderLattice</span>.<span class=\"name\">sup_eq_of_isMaximal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst✝ : <span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x y z : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\">x</span> <span class=\"fn\">z</span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\">y</span> <span class=\"fn\">z</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L86-L86","name":"JordanHolderLattice.lt_of_isMaximal","line":86,"kind":"theorem","docLink":"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.lt_of_isMaximal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.lt_of_isMaximal\"><span class=\"name\">JordanHolderLattice</span>.<span class=\"name\">lt_of_isMaximal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst✝ : <span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{x y : <span class=\"fn\">X</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\">JordanHolderLattice.IsMaximal</a> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L85-L85","name":"JordanHolderLattice.IsMaximal","line":85,"kind":"def","docLink":"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.IsMaximal\"><span class=\"name\">JordanHolderLattice</span>.<span class=\"name\">IsMaximal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{inst✝ : <span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">X</span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L84-L84","name":"JordanHolderLattice.mk","line":84,"kind":"ctor","docLink":"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice.mk\"><span class=\"name\">JordanHolderLattice</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(IsMaximal : <span class=\"fn\"><span class=\"fn\">X</span> → <span class=\"fn\">X</span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lt_of_isMaximal : <span class=\"fn\">∀ {<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">X</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">IsMaximal</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">y</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(sup_eq_of_isMaximal : <span class=\"fn\">∀ {<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z</span> : <span class=\"fn\">X</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">IsMaximal</span> <span class=\"fn\">x</span> <span class=\"fn\">z</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">IsMaximal</span> <span class=\"fn\">y</span> <span class=\"fn\">z</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">y</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">z</span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(isMaximal_inf_left_of_isMaximal_sup : <span class=\"fn\">∀ {<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">X</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">IsMaximal</span> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">y</span>)</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">IsMaximal</span> <span class=\"fn\">y</span> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">y</span>)</span></span> → <span class=\"fn\"><span class=\"fn\">IsMaximal</span> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Min.min\">⊓</a> <span class=\"fn\">y</span>)</span> <span class=\"fn\">x</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(Iso : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span></span> → <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span></span> → <a href=\"./foundational_types.html\">Prop</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(iso_symm : <span class=\"fn\">∀ {<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Iso</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\">Iso</span> <span class=\"fn\">y</span> <span class=\"fn\">x</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(iso_trans : <span class=\"fn\">∀ {<span class=\"fn\">x </span><span class=\"fn\">y </span><span class=\"fn\">z</span> : <span class=\"fn\"><span class=\"fn\">X</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">X</span></span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Iso</span> <span class=\"fn\">x</span> <span class=\"fn\">y</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Iso</span> <span class=\"fn\">y</span> <span class=\"fn\">z</span></span> → <span class=\"fn\"><span class=\"fn\">Iso</span> <span class=\"fn\">x</span> <span class=\"fn\">z</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(second_iso : <span class=\"fn\">∀ {<span class=\"fn\">x </span><span class=\"fn\">y</span> : <span class=\"fn\">X</span>}, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">IsMaximal</span> <span class=\"fn\">x</span> <span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">y</span>)</span></span> → <span class=\"fn\"><span class=\"fn\">Iso</span> <span class=\"fn\">(<span class=\"fn\">x</span>, <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Max.max\">⊔</a> <span class=\"fn\">y</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Min.min\">⊓</a> <span class=\"fn\">y</span></span>, <span class=\"fn\">y</span>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\">JordanHolderLattice</a> <span class=\"fn\">X</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Order/JordanHolder.lean#L76-L93","name":"JordanHolderLattice","line":76,"kind":"class","docLink":"./Mathlib/Order/JordanHolder.html#JordanHolderLattice","doc":"A `JordanHolderLattice` is the class for which the Jordan Hölder theorem is proved. A\nJordan Hölder lattice is a lattice equipped with a notion of maximality, `IsMaximal`, and a notion\nof isomorphism of pairs `Iso`. In the example of subgroups of a group, `IsMaximal H K` means that\n`H` is a maximal normal subgroup of `K`, and `Iso (H₁, K₁) (H₂, K₂)` means that the quotient\n`H₁ / K₁` is isomorphic to the quotient `H₂ / K₂`. `Iso` must be symmetric and transitive and must\nsatisfy the second isomorphism theorem `Iso (H, H ⊔ K) (H ⊓ K, K)`.\nExamples include `Subgroup G` if `G` is a group, and `Submodule R M` if `M` is an `R`-module.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Order/JordanHolder.html#JordanHolderLattice\"><span class=\"name\">JordanHolderLattice</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(X : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Lattice.html#Lattice\">Lattice</a> <span class=\"fn\">X</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"}]}