{"name":"Mathlib.Algebra.GroupWithZero.Units.Equiv","instances":[],"imports":["Init","Mathlib.Algebra.Group.Units.Equiv","Mathlib.Algebra.GroupWithZero.Units.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Algebra/GroupWithZero/Units/Equiv.lean#L47-L47","name":"Equiv.divRight₀_symm_apply","line":47,"kind":"theorem","docLink":"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#Equiv.divRight₀_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#Equiv.divRight₀_symm_apply\"><span class=\"name\">Equiv</span>.<span class=\"name\">divRight₀_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₀ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#GroupWithZero\">GroupWithZero</a> <span class=\"fn\">G₀</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">G₀</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x✝ : <span class=\"fn\">G₀</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#Equiv.divRight₀\">Equiv.divRight₀</a> <span class=\"fn\">a</span> <span class=\"fn\">ha</span>)</span>.symm</span> <span class=\"fn\">x✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x✝</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Algebra/GroupWithZero/Units/Equiv.lean#L47-L47","name":"Equiv.divRight₀_apply","line":47,"kind":"theorem","docLink":"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#Equiv.divRight₀_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#Equiv.divRight₀_apply\"><span class=\"name\">Equiv</span>.<span class=\"name\">divRight₀_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₀ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#GroupWithZero\">GroupWithZero</a> <span class=\"fn\">G₀</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">G₀</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x✝ : <span class=\"fn\">G₀</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#Equiv.divRight₀\">Equiv.divRight₀</a> <span class=\"fn\">a</span> <span class=\"fn\">ha</span>)</span> <span class=\"fn\">x✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">x✝</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Algebra/GroupWithZero/Units/Equiv.lean#L45-L52","name":"Equiv.divRight₀","line":45,"kind":"def","docLink":"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#Equiv.divRight₀","doc":"Right division by a nonzero element in a `GroupWithZero` is a permutation of the\nunderlying type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#Equiv.divRight₀\"><span class=\"name\">Equiv</span>.<span class=\"name\">divRight₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₀ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#GroupWithZero\">GroupWithZero</a> <span class=\"fn\">G₀</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">G₀</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">G₀</span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">G₀</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Algebra/GroupWithZero/Units/Equiv.lean#L42-L43","name":"mulRight_bijective₀","line":42,"kind":"theorem","docLink":"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#mulRight_bijective₀","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#mulRight_bijective₀\"><span class=\"name\">mulRight_bijective₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₀ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#GroupWithZero\">GroupWithZero</a> <span class=\"fn\">G₀</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">G₀</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Bijective\">Function.Bijective</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">G₀</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Algebra/GroupWithZero/Units/Equiv.lean#L38-L38","name":"Equiv.mulRight₀_symm_apply","line":38,"kind":"theorem","docLink":"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#Equiv.mulRight₀_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#Equiv.mulRight₀_symm_apply\"><span class=\"name\">Equiv</span>.<span class=\"name\">mulRight₀_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₀ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#GroupWithZero\">GroupWithZero</a> <span class=\"fn\">G₀</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">G₀</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">Equiv.symm</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#Equiv.mulRight₀\">Equiv.mulRight₀</a> <span class=\"fn\">a</span> <span class=\"fn\">ha</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">G₀</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">a</span><a href=\"./Mathlib/Algebra/Group/Operations.html#Inv.inv\">⁻¹</a></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Algebra/GroupWithZero/Units/Equiv.lean#L38-L38","name":"Equiv.mulRight₀_apply","line":38,"kind":"theorem","docLink":"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#Equiv.mulRight₀_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#Equiv.mulRight₀_apply\"><span class=\"name\">Equiv</span>.<span class=\"name\">mulRight₀_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₀ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#GroupWithZero\">GroupWithZero</a> <span class=\"fn\">G₀</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">G₀</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#Equiv.mulRight₀\">Equiv.mulRight₀</a> <span class=\"fn\">a</span> <span class=\"fn\">ha</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">G₀</span>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">a</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Algebra/GroupWithZero/Units/Equiv.lean#L36-L40","name":"Equiv.mulRight₀","line":36,"kind":"def","docLink":"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#Equiv.mulRight₀","doc":"Right multiplication by a nonzero element in a `GroupWithZero` is a permutation of the\nunderlying type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#Equiv.mulRight₀\"><span class=\"name\">Equiv</span>.<span class=\"name\">mulRight₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₀ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#GroupWithZero\">GroupWithZero</a> <span class=\"fn\">G₀</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">G₀</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">G₀</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Algebra/GroupWithZero/Units/Equiv.lean#L33-L34","name":"mulLeft_bijective₀","line":33,"kind":"theorem","docLink":"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#mulLeft_bijective₀","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#mulLeft_bijective₀\"><span class=\"name\">mulLeft_bijective₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₀ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#GroupWithZero\">GroupWithZero</a> <span class=\"fn\">G₀</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">G₀</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Bijective\">Function.Bijective</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">G₀</span>) =&gt; <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Algebra/GroupWithZero/Units/Equiv.lean#L29-L29","name":"Equiv.mulLeft₀_symm_apply","line":29,"kind":"theorem","docLink":"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#Equiv.mulLeft₀_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#Equiv.mulLeft₀_symm_apply\"><span class=\"name\">Equiv</span>.<span class=\"name\">mulLeft₀_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₀ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#GroupWithZero\">GroupWithZero</a> <span class=\"fn\">G₀</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">G₀</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.symm\">Equiv.symm</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#Equiv.mulLeft₀\">Equiv.mulLeft₀</a> <span class=\"fn\">a</span> <span class=\"fn\">ha</span>)</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">G₀</span>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span><a href=\"./Mathlib/Algebra/Group/Operations.html#Inv.inv\">⁻¹</a></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Algebra/GroupWithZero/Units/Equiv.lean#L29-L29","name":"Equiv.mulLeft₀_apply","line":29,"kind":"theorem","docLink":"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#Equiv.mulLeft₀_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#Equiv.mulLeft₀_apply\"><span class=\"name\">Equiv</span>.<span class=\"name\">mulLeft₀_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₀ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#GroupWithZero\">GroupWithZero</a> <span class=\"fn\">G₀</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">G₀</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⇑<span class=\"fn\">(<a href=\"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#Equiv.mulLeft₀\">Equiv.mulLeft₀</a> <span class=\"fn\">a</span> <span class=\"fn\">ha</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">G₀</span>) =&gt; <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">x</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Algebra/GroupWithZero/Units/Equiv.lean#L27-L31","name":"Equiv.mulLeft₀","line":27,"kind":"def","docLink":"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#Equiv.mulLeft₀","doc":"Left multiplication by a nonzero element in a `GroupWithZero` is a permutation of the\nunderlying type. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#Equiv.mulLeft₀\"><span class=\"name\">Equiv</span>.<span class=\"name\">mulLeft₀</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₀ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#GroupWithZero\">GroupWithZero</a> <span class=\"fn\">G₀</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">G₀</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv.Perm\">Equiv.Perm</a> <span class=\"fn\">G₀</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Algebra/GroupWithZero/Units/Equiv.lean#L19-L19","name":"unitsEquivNeZero_apply_coe","line":19,"kind":"theorem","docLink":"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#unitsEquivNeZero_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#unitsEquivNeZero_apply_coe\"><span class=\"name\">unitsEquivNeZero_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₀ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#GroupWithZero\">GroupWithZero</a> <span class=\"fn\">G₀</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><span class=\"fn\">G₀</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">unitsEquivNeZero</span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Algebra/GroupWithZero/Units/Equiv.lean#L19-L19","name":"unitsEquivNeZero_symm_apply","line":19,"kind":"theorem","docLink":"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#unitsEquivNeZero_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#unitsEquivNeZero_symm_apply\"><span class=\"name\">unitsEquivNeZero_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₀ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#GroupWithZero\">GroupWithZero</a> <span class=\"fn\">G₀</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">{ <span class=\"fn\">a</span> : <span class=\"fn\">G₀</span> // <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">unitsEquivNeZero</span>.symm</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Units/Basic.html#Units.mk0\">Units.mk0</a> <span class=\"fn\">↑<span class=\"fn\">a</span></span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Algebra/GroupWithZero/Units/Equiv.lean#L17-L23","name":"unitsEquivNeZero","line":17,"kind":"def","docLink":"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#unitsEquivNeZero","doc":"In a `GroupWithZero` `G₀`, the unit group `G₀ˣ` is equivalent to the subtype of nonzero\nelements. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Algebra/GroupWithZero/Units/Equiv.html#unitsEquivNeZero\"><span class=\"name\">unitsEquivNeZero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G₀ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#GroupWithZero\">GroupWithZero</a> <span class=\"fn\">G₀</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">G₀</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a></span> <a href=\"./Mathlib/Logic/Equiv/Defs.html#Equiv\">≃</a> <span class=\"fn\">{ <span class=\"fn\">a</span> : <span class=\"fn\">G₀</span> // <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> }</span></span></div></div>"}]}