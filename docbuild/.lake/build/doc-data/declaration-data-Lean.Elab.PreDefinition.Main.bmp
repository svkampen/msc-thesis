{"name":"Lean.Elab.PreDefinition.Main","instances":[],"imports":["Lean.Util.SCC","Lean.Elab.PreDefinition.Basic","Lean.Elab.PreDefinition.Structural","Lean.Elab.PreDefinition.WF.Main","Lean.Elab.PreDefinition.MkInhabitant"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/PreDefinition/Main.lean#L216-L280","name":"Lean.Elab.addPreDefinitions","line":216,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.addPreDefinitions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.addPreDefinitions\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">addPreDefinitions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(preDefs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">Lean.Elab.PreDefinition</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/PreDefinition/Main.lean#L210-L213","name":"Lean.Elab.shouldUseWF","line":210,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.shouldUseWF","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.shouldUseWF\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">shouldUseWF</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(preDefs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">Lean.Elab.PreDefinition</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/PreDefinition/Main.lean#L206-L208","name":"Lean.Elab.shouldUseStructural","line":206,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.shouldUseStructural","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.shouldUseStructural\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">shouldUseStructural</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(preDefs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">Lean.Elab.PreDefinition</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/PreDefinition/Main.lean#L196-L204","name":"Lean.Elab.elabTerminationByHints","line":196,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.elabTerminationByHints","doc":"Elaborates the `TerminationHint` in the clique to `TerminationArguments`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.elabTerminationByHints\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">elabTerminationByHints</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(preDefs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">Lean.Elab.PreDefinition</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/PreDefinition/TerminationArgument.html#Lean.Elab.TerminationArgument\">Lean.Elab.TerminationArgument</a>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/PreDefinition/Main.lean#L160-L194","name":"Lean.Elab.checkTerminationByHints","line":160,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.checkTerminationByHints","doc":"Checks consistency of a clique of TerminationHints:\n\n* If not all have a hint, the hints are ignored (log error)\n* If one has `structural`, check that all have it, (else throw error)\n* A `structural` should not have a `decreasing_by` (else log error)\n\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.checkTerminationByHints\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">checkTerminationByHints</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(preDefs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">Lean.Elab.PreDefinition</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/PreDefinition/Main.lean#L154-L157","name":"Lean.Elab.ensureFunIndReservedNamesAvailable","line":154,"kind":"def","docLink":"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.ensureFunIndReservedNamesAvailable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/PreDefinition/Main.html#Lean.Elab.ensureFunIndReservedNamesAvailable\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">ensureFunIndReservedNamesAvailable</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(preDefs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/PreDefinition/Basic.html#Lean.Elab.PreDefinition\">Lean.Elab.PreDefinition</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"}]}