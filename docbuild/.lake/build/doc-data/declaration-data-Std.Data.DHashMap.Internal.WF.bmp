{"name":"Std.Data.DHashMap.Internal.WF","instances":[],"imports":["Std.Data.DHashMap.Basic","Std.Data.DHashMap.Internal.Model","Std.Data.DHashMap.Internal.AssocList.Lemmas"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L689-L692","name":"Std.DHashMap.Internal.Raw₀.Const.wfImp_insertManyUnit","line":689,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.wfImp_insertManyUnit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.wfImp_insertManyUnit\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">Const</span>.<span class=\"name\">wfImp_insertManyUnit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ρ : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#ForIn\">ForIn</a> <a href=\"./Init/Control/Id.html#Id\">Id</a> <span class=\"fn\">ρ</span> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\">ρ</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.Const.insertManyUnit\">Std.DHashMap.Internal.Raw₀.Const.insertManyUnit</a> <span class=\"fn\">m</span> <span class=\"fn\">l</span>)</span>.val</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L684-L687","name":"Std.DHashMap.Internal.Raw₀.Const.wfImp_insertMany","line":684,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.wfImp_insertMany","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.wfImp_insertMany\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">Const</span>.<span class=\"name\">wfImp_insertMany</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ρ : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#ForIn\">ForIn</a> <a href=\"./Init/Control/Id.html#Id\">Id</a> <span class=\"fn\">ρ</span> <span class=\"fn\">(<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">β</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\">ρ</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.Const.insertMany\">Std.DHashMap.Internal.Raw₀.Const.insertMany</a> <span class=\"fn\">m</span> <span class=\"fn\">l</span>)</span>.val</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L679-L682","name":"Std.DHashMap.Internal.Raw₀.wfImp_insertMany","line":679,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_insertMany","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_insertMany\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_insertMany</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ρ : <a href=\"./foundational_types.html\">Type</a> w}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#ForIn\">ForIn</a> <a href=\"./Init/Control/Id.html#Id\">Id</a> <span class=\"fn\">ρ</span> <span class=\"fn\">((<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>)</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{l : <span class=\"fn\">ρ</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.insertMany</span> <span class=\"fn\">l</span>)</span>.val</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L661-L673","name":"Std.DHashMap.Internal.Raw.WF.out","line":661,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.WF.out","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.WF.out\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw</span>.<span class=\"name\">WF</span>.<span class=\"name\">out</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[i₁ : <span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[i₂ : <span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/RawDef.html#Std.DHashMap.Raw\">Std.DHashMap.Raw</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">m</span>.WF</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L652-L655","name":"Std.DHashMap.Internal.Raw₀.wfImp_filter","line":652,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_filter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_filter\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_filter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.filter\">Std.DHashMap.Internal.Raw₀.filter</a> <span class=\"fn\">f</span> <span class=\"fn\">m</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L646-L650","name":"Std.DHashMap.Internal.Raw₀.toListModel_filter","line":646,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_filter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_filter\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_filter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.filter\">Std.DHashMap.Internal.Raw₀.filter</a> <span class=\"fn\">f</span> <span class=\"fn\">m</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.filter\">List.filter</a> <span class=\"fn\">(fun (<span class=\"fn\">p</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">p</span>.fst</span> <span class=\"fn\"><span class=\"fn\">p</span>.snd</span></span>)</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L638-L642","name":"Std.DHashMap.Internal.Raw₀.wfImp_filterₘ","line":638,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_filterₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_filterₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_filterₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.filterₘ</span> <span class=\"fn\">f</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L631-L636","name":"Std.DHashMap.Internal.Raw₀.isHashSelf_filterₘ","line":631,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_filterₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_filterₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">isHashSelf_filterₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#ReflBEq\">ReflBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.IsHashSelf\">Std.DHashMap.Internal.IsHashSelf</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.filterₘ</span> <span class=\"fn\">f</span>)</span>.val</span>.buckets</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L626-L629","name":"Std.DHashMap.Internal.Raw₀.toListModel_filterₘ","line":626,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_filterₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_filterₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_filterₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.filterₘ</span> <span class=\"fn\">f</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.filter\">List.filter</a> <span class=\"fn\">(fun (<span class=\"fn\">p</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span></span>) =&gt; <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">p</span>.fst</span> <span class=\"fn\"><span class=\"fn\">p</span>.snd</span></span>)</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L619-L622","name":"Std.DHashMap.Internal.Raw₀.wfImp_map","line":619,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_map\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{δ : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\">δ</span> <span class=\"fn\">a</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.map\">Std.DHashMap.Internal.Raw₀.map</a> <span class=\"fn\">f</span> <span class=\"fn\">m</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L613-L617","name":"Std.DHashMap.Internal.Raw₀.toListModel_map","line":613,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_map\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{δ : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\">δ</span> <span class=\"fn\">a</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.map\">Std.DHashMap.Internal.Raw₀.map</a> <span class=\"fn\">f</span> <span class=\"fn\">m</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <span class=\"fn\">(fun (<span class=\"fn\">p</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span></span>) =&gt; <span class=\"fn\">⟨<span class=\"fn\"><span class=\"fn\">p</span>.fst</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">p</span>.fst</span> <span class=\"fn\"><span class=\"fn\">p</span>.snd</span></span>⟩</span>)</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L605-L609","name":"Std.DHashMap.Internal.Raw₀.wfImp_mapₘ","line":605,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_mapₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_mapₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_mapₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{δ : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\">δ</span> <span class=\"fn\">a</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.mapₘ</span> <span class=\"fn\">f</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L598-L603","name":"Std.DHashMap.Internal.Raw₀.isHashSelf_mapₘ","line":598,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_mapₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_mapₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">isHashSelf_mapₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{δ : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#ReflBEq\">ReflBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\">δ</span> <span class=\"fn\">a</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.IsHashSelf\">Std.DHashMap.Internal.IsHashSelf</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.mapₘ</span> <span class=\"fn\">f</span>)</span>.val</span>.buckets</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L593-L596","name":"Std.DHashMap.Internal.Raw₀.toListModel_mapₘ","line":593,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_mapₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_mapₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_mapₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{δ : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <span class=\"fn\"><span class=\"fn\">δ</span> <span class=\"fn\">a</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.mapₘ</span> <span class=\"fn\">f</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.map\">List.map</a> <span class=\"fn\">(fun (<span class=\"fn\">p</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span></span>) =&gt; <span class=\"fn\">⟨<span class=\"fn\"><span class=\"fn\">p</span>.fst</span>, <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">p</span>.fst</span> <span class=\"fn\"><span class=\"fn\">p</span>.snd</span></span>⟩</span>)</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L585-L589","name":"Std.DHashMap.Internal.Raw₀.wfImp_filterMap","line":585,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_filterMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_filterMap\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_filterMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{δ : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\">δ</span> <span class=\"fn\">a</span>)</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.filterMap\">Std.DHashMap.Internal.Raw₀.filterMap</a> <span class=\"fn\">f</span> <span class=\"fn\">m</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L579-L583","name":"Std.DHashMap.Internal.Raw₀.toListModel_filterMap","line":579,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_filterMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_filterMap\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_filterMap</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{δ : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\">δ</span> <span class=\"fn\">a</span>)</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.filterMap\">Std.DHashMap.Internal.Raw₀.filterMap</a> <span class=\"fn\">f</span> <span class=\"fn\">m</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.filterMap\">List.filterMap</a> <span class=\"fn\">(fun (<span class=\"fn\">p</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.map\">Option.map</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">δ</span> <span class=\"fn\"><span class=\"fn\">p</span>.fst</span></span>) =&gt; <span class=\"fn\">⟨<span class=\"fn\"><span class=\"fn\">p</span>.fst</span>, <span class=\"fn\">x</span>⟩</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">p</span>.fst</span> <span class=\"fn\"><span class=\"fn\">p</span>.snd</span>)</span></span>)</span>\n    <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L571-L575","name":"Std.DHashMap.Internal.Raw₀.wfImp_filterMapₘ","line":571,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_filterMapₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_filterMapₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_filterMapₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{δ : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\">δ</span> <span class=\"fn\">a</span>)</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.filterMapₘ</span> <span class=\"fn\">f</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L562-L569","name":"Std.DHashMap.Internal.Raw₀.isHashSelf_filterMapₘ","line":562,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_filterMapₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_filterMapₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">isHashSelf_filterMapₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{δ : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#ReflBEq\">ReflBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\">δ</span> <span class=\"fn\">a</span>)</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.IsHashSelf\">Std.DHashMap.Internal.IsHashSelf</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.filterMapₘ</span> <span class=\"fn\">f</span>)</span>.val</span>.buckets</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L556-L560","name":"Std.DHashMap.Internal.Raw₀.toListModel_filterMapₘ","line":556,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_filterMapₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_filterMapₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_filterMapₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{δ : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> w</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<span class=\"fn\">δ</span> <span class=\"fn\">a</span>)</span></span></span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.filterMapₘ</span> <span class=\"fn\">f</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.filterMap\">List.filterMap</a> <span class=\"fn\">(fun (<span class=\"fn\">p</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span></span>) =&gt; <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.map\">Option.map</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <span class=\"fn\"><span class=\"fn\">δ</span> <span class=\"fn\"><span class=\"fn\">p</span>.fst</span></span>) =&gt; <span class=\"fn\">⟨<span class=\"fn\"><span class=\"fn\">p</span>.fst</span>, <span class=\"fn\">x</span>⟩</span>)</span> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">p</span>.fst</span> <span class=\"fn\"><span class=\"fn\">p</span>.snd</span>)</span></span>)</span>\n    <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L549-L552","name":"Std.DHashMap.Internal.Raw₀.wfImp_erase","line":549,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_erase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_erase\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_erase</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.erase</span> <span class=\"fn\">a</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L543-L547","name":"Std.DHashMap.Internal.Raw₀.toListModel_erase","line":543,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_erase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_erase\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_erase</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.erase</span> <span class=\"fn\">a</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.eraseKey\">Std.DHashMap.Internal.List.eraseKey</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L534-L539","name":"Std.DHashMap.Internal.Raw₀.wfImp_eraseₘ","line":534,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_eraseₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_eraseₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_eraseₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.eraseₘ</span> <span class=\"fn\">a</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L525-L532","name":"Std.DHashMap.Internal.Raw₀.toListModel_eraseₘ","line":525,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_eraseₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_eraseₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_eraseₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.eraseₘ</span> <span class=\"fn\">a</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.eraseKey\">Std.DHashMap.Internal.List.eraseKey</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L519-L523","name":"Std.DHashMap.Internal.Raw₀.toListModel_perm_eraseKey_of_containsₘ_eq_false","line":519,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_perm_eraseKey_of_containsₘ_eq_false","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_perm_eraseKey_of_containsₘ_eq_false\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_perm_eraseKey_of_containsₘ_eq_false</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h' : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.containsₘ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.eraseKey\">Std.DHashMap.Internal.List.eraseKey</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L510-L517","name":"Std.DHashMap.Internal.Raw₀.wfImp_eraseₘaux","line":510,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_eraseₘaux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_eraseₘaux\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_eraseₘaux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h' : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.containsₘ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.eraseₘaux</span> <span class=\"fn\">a</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L504-L508","name":"Std.DHashMap.Internal.Raw₀.isHashSelf_eraseₘaux","line":504,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_eraseₘaux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_eraseₘaux\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">isHashSelf_eraseₘaux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.IsHashSelf\">Std.DHashMap.Internal.IsHashSelf</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.eraseₘaux</span> <span class=\"fn\">a</span>)</span>.val</span>.buckets</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L498-L502","name":"Std.DHashMap.Internal.Raw₀.toListModel_eraseₘaux","line":498,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_eraseₘaux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_eraseₘaux\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_eraseₘaux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.eraseₘaux</span> <span class=\"fn\">a</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.eraseKey\">Std.DHashMap.Internal.List.eraseKey</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L490-L494","name":"Std.DHashMap.Internal.Raw₀.Const.wfImp_getThenInsertIfNew?","line":490,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.wfImp_getThenInsertIfNew?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.wfImp_getThenInsertIfNew?\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">Const</span>.<span class=\"name\">wfImp_getThenInsertIfNew?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">β</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.Const.getThenInsertIfNew?\">Std.DHashMap.Internal.Raw₀.Const.getThenInsertIfNew?</a> <span class=\"fn\">m</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.snd</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L483-L488","name":"Std.DHashMap.Internal.Raw₀.Const.toListModel_getThenInsertIfNew?","line":483,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.toListModel_getThenInsertIfNew?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.toListModel_getThenInsertIfNew?\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">Const</span>.<span class=\"name\">toListModel_getThenInsertIfNew?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">β</span></span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.Const.getThenInsertIfNew?\">Std.DHashMap.Internal.Raw₀.Const.getThenInsertIfNew?</a> <span class=\"fn\">m</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.snd</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.insertEntryIfNew\">Std.DHashMap.Internal.List.insertEntryIfNew</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L476-L479","name":"Std.DHashMap.Internal.Raw₀.wfImp_getThenInsertIfNew?","line":476,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_getThenInsertIfNew?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_getThenInsertIfNew?\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_getThenInsertIfNew?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#LawfulBEq\">LawfulBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.getThenInsertIfNew?</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.snd</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L469-L474","name":"Std.DHashMap.Internal.Raw₀.toListModel_getThenInsertIfNew?","line":469,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_getThenInsertIfNew?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_getThenInsertIfNew?\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_getThenInsertIfNew?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#LawfulBEq\">LawfulBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.getThenInsertIfNew?</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.snd</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.insertEntryIfNew\">Std.DHashMap.Internal.List.insertEntryIfNew</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L461-L465","name":"Std.DHashMap.Internal.Raw₀.wfImp_containsThenInsertIfNew","line":461,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_containsThenInsertIfNew","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_containsThenInsertIfNew\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_containsThenInsertIfNew</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.containsThenInsertIfNew</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.snd</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L454-L459","name":"Std.DHashMap.Internal.Raw₀.toListModel_containsThenInsertIfNew","line":454,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_containsThenInsertIfNew","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_containsThenInsertIfNew\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_containsThenInsertIfNew</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.containsThenInsertIfNew</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.snd</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.insertEntryIfNew\">Std.DHashMap.Internal.List.insertEntryIfNew</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L447-L450","name":"Std.DHashMap.Internal.Raw₀.wfImp_insertIfNew","line":447,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_insertIfNew","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_insertIfNew\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_insertIfNew</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.insertIfNew</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L440-L445","name":"Std.DHashMap.Internal.Raw₀.toListModel_insertIfNew","line":440,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_insertIfNew","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_insertIfNew\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_insertIfNew</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.insertIfNew</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.insertEntryIfNew\">Std.DHashMap.Internal.List.insertEntryIfNew</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L430-L436","name":"Std.DHashMap.Internal.Raw₀.wfImp_insertIfNewₘ","line":430,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_insertIfNewₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_insertIfNewₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_insertIfNewₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.insertIfNewₘ</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L421-L428","name":"Std.DHashMap.Internal.Raw₀.toListModel_insertIfNewₘ","line":421,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_insertIfNewₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_insertIfNewₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_insertIfNewₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.insertIfNewₘ</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.insertEntryIfNew\">Std.DHashMap.Internal.List.insertEntryIfNew</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L414-L417","name":"Std.DHashMap.Internal.Raw₀.wfImp_containsThenInsert","line":414,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_containsThenInsert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_containsThenInsert\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_containsThenInsert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.containsThenInsert</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.snd</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L408-L412","name":"Std.DHashMap.Internal.Raw₀.toListModel_containsThenInsert","line":408,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_containsThenInsert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_containsThenInsert\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_containsThenInsert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.containsThenInsert</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.snd</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.insertEntry\">Std.DHashMap.Internal.List.insertEntry</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L401-L404","name":"Std.DHashMap.Internal.Raw₀.wfImp_insert","line":401,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_insert\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_insert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.insert</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L395-L399","name":"Std.DHashMap.Internal.Raw₀.toListModel_insert","line":395,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_insert","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_insert\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_insert</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.insert</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.insertEntry\">Std.DHashMap.Internal.List.insertEntry</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L385-L391","name":"Std.DHashMap.Internal.Raw₀.wfImp_insertₘ","line":385,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_insertₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_insertₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_insertₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.insertₘ</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L370-L383","name":"Std.DHashMap.Internal.Raw₀.toListModel_insertₘ","line":370,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_insertₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_insertₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_insertₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.insertₘ</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.insertEntry\">Std.DHashMap.Internal.List.insertEntry</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L359-L368","name":"Std.DHashMap.Internal.Raw₀.wfImp_consₘ","line":359,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_consₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_consₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_consₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.containsₘ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.false\">false</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.consₘ</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L351-L357","name":"Std.DHashMap.Internal.Raw₀.isHashSelf_consₘ","line":351,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_consₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_consₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">isHashSelf_consₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.IsHashSelf\">Std.DHashMap.Internal.IsHashSelf</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.consₘ</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span>.buckets</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L346-L349","name":"Std.DHashMap.Internal.Raw₀.toListModel_consₘ","line":346,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_consₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_consₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_consₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.consₘ</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<span class=\"fn\">⟨<span class=\"fn\">a</span>, <span class=\"fn\">b</span>⟩</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L337-L342","name":"Std.DHashMap.Internal.Raw₀.wfImp_replaceₘ","line":337,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_replaceₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_replaceₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_replaceₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.replaceₘ</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L332-L335","name":"Std.DHashMap.Internal.Raw₀.isHashSelf_replaceₘ","line":332,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_replaceₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_replaceₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">isHashSelf_replaceₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.IsHashSelf\">Std.DHashMap.Internal.IsHashSelf</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.replaceₘ</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span>.buckets</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L326-L330","name":"Std.DHashMap.Internal.Raw₀.toListModel_replaceₘ","line":326,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_replaceₘ","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_replaceₘ\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_replaceₘ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m</span>.replaceₘ</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.replaceEntry\">Std.DHashMap.Internal.List.replaceEntry</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L317-L320","name":"Std.DHashMap.Internal.Raw₀.Const.getD_eq_getValueD","line":317,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.getD_eq_getValueD","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.getD_eq_getValueD\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">Const</span>.<span class=\"name\">getD_eq_getValueD</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">β</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{fallback : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.Const.getD\">Std.DHashMap.Internal.Raw₀.Const.getD</a> <span class=\"fn\">m</span> <span class=\"fn\">a</span> <span class=\"fn\">fallback</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValueD\">Std.DHashMap.Internal.List.getValueD</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span> <span class=\"fn\">fallback</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L312-L315","name":"Std.DHashMap.Internal.Raw₀.Const.getDₘ_eq_getValueD","line":312,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.getDₘ_eq_getValueD","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.getDₘ_eq_getValueD\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">Const</span>.<span class=\"name\">getDₘ_eq_getValueD</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">β</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{fallback : <span class=\"fn\">β</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Model.html#Std.DHashMap.Internal.Raw₀.Const.getDₘ\">Std.DHashMap.Internal.Raw₀.Const.getDₘ</a> <span class=\"fn\">m</span> <span class=\"fn\">a</span> <span class=\"fn\">fallback</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValueD\">Std.DHashMap.Internal.List.getValueD</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span> <span class=\"fn\">fallback</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L307-L310","name":"Std.DHashMap.Internal.Raw₀.Const.get!_eq_getValue!","line":307,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.get!_eq_getValue!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.get!_eq_getValue!\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">Const</span>.<span class=\"name\">get!_eq_getValue!</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">β</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.Const.get!\">Std.DHashMap.Internal.Raw₀.Const.get!</a> <span class=\"fn\">m</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValue!\">Std.DHashMap.Internal.List.getValue!</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L302-L305","name":"Std.DHashMap.Internal.Raw₀.Const.get!ₘ_eq_getValue!","line":302,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.get!ₘ_eq_getValue!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.get!ₘ_eq_getValue!\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">Const</span>.<span class=\"name\">get!ₘ_eq_getValue!</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">β</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Model.html#Std.DHashMap.Internal.Raw₀.Const.get!ₘ\">Std.DHashMap.Internal.Raw₀.Const.get!ₘ</a> <span class=\"fn\">m</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValue!\">Std.DHashMap.Internal.List.getValue!</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L297-L300","name":"Std.DHashMap.Internal.Raw₀.Const.get_eq_getValue","line":297,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.get_eq_getValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.get_eq_getValue\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">Const</span>.<span class=\"name\">get_eq_getValue</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">β</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.contains</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.Const.get\">Std.DHashMap.Internal.Raw₀.Const.get</a> <span class=\"fn\">m</span> <span class=\"fn\">a</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValue\">Std.DHashMap.Internal.List.getValue</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L291-L295","name":"Std.DHashMap.Internal.Raw₀.Const.getₘ_eq_getValue","line":291,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.getₘ_eq_getValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.getₘ_eq_getValue\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">Const</span>.<span class=\"name\">getₘ_eq_getValue</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">β</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.containsₘ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Model.html#Std.DHashMap.Internal.Raw₀.Const.getₘ\">Std.DHashMap.Internal.Raw₀.Const.getₘ</a> <span class=\"fn\">m</span> <span class=\"fn\">a</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValue\">Std.DHashMap.Internal.List.getValue</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L286-L289","name":"Std.DHashMap.Internal.Raw₀.Const.get?_eq_getValue?","line":286,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.get?_eq_getValue?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.get?_eq_getValue?\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">Const</span>.<span class=\"name\">get?_eq_getValue?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">β</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.Const.get?\">Std.DHashMap.Internal.Raw₀.Const.get?</a> <span class=\"fn\">m</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValue?\">Std.DHashMap.Internal.List.getValue?</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L281-L284","name":"Std.DHashMap.Internal.Raw₀.Const.get?ₘ_eq_getValue?","line":281,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.get?ₘ_eq_getValue?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.Const.get?ₘ_eq_getValue?\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">Const</span>.<span class=\"name\">get?ₘ_eq_getValue?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">fun (<span class=\"fn\">x</span> : <span class=\"fn\">α</span>) =&gt; <span class=\"fn\">β</span></span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Model.html#Std.DHashMap.Internal.Raw₀.Const.get?ₘ\">Std.DHashMap.Internal.Raw₀.Const.get?ₘ</a> <span class=\"fn\">m</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValue?\">Std.DHashMap.Internal.List.getValue?</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L272-L275","name":"Std.DHashMap.Internal.Raw₀.getKeyD_eq_getKeyD","line":272,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKeyD_eq_getKeyD","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKeyD_eq_getKeyD\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">getKeyD_eq_getKeyD</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a fallback : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.getKeyD</span> <span class=\"fn\">a</span> <span class=\"fn\">fallback</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getKeyD\">Std.DHashMap.Internal.List.getKeyD</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span> <span class=\"fn\">fallback</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L267-L270","name":"Std.DHashMap.Internal.Raw₀.getKeyDₘ_eq_getKeyD","line":267,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKeyDₘ_eq_getKeyD","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKeyDₘ_eq_getKeyD\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">getKeyDₘ_eq_getKeyD</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a fallback : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.getKeyDₘ</span> <span class=\"fn\">a</span> <span class=\"fn\">fallback</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getKeyD\">Std.DHashMap.Internal.List.getKeyD</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span> <span class=\"fn\">fallback</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L262-L265","name":"Std.DHashMap.Internal.Raw₀.getKey!_eq_getKey!","line":262,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKey!_eq_getKey!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKey!_eq_getKey!\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">getKey!_eq_getKey!</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.getKey!</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getKey!\">Std.DHashMap.Internal.List.getKey!</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L257-L260","name":"Std.DHashMap.Internal.Raw₀.getKey!ₘ_eq_getKey!","line":257,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKey!ₘ_eq_getKey!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKey!ₘ_eq_getKey!\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">getKey!ₘ_eq_getKey!</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.getKey!ₘ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getKey!\">Std.DHashMap.Internal.List.getKey!</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L252-L255","name":"Std.DHashMap.Internal.Raw₀.getKey_eq_getKey","line":252,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKey_eq_getKey","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKey_eq_getKey\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">getKey_eq_getKey</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.contains</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.getKey</span> <span class=\"fn\">a</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getKey\">Std.DHashMap.Internal.List.getKey</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L246-L250","name":"Std.DHashMap.Internal.Raw₀.getKeyₘ_eq_getKey","line":246,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKeyₘ_eq_getKey","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKeyₘ_eq_getKey\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">getKeyₘ_eq_getKey</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.contains</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.getKeyₘ</span> <span class=\"fn\">a</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getKey\">Std.DHashMap.Internal.List.getKey</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L241-L244","name":"Std.DHashMap.Internal.Raw₀.getKey?_eq_getKey?","line":241,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKey?_eq_getKey?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKey?_eq_getKey?\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">getKey?_eq_getKey?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.getKey?</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getKey?\">Std.DHashMap.Internal.List.getKey?</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L236-L239","name":"Std.DHashMap.Internal.Raw₀.getKey?ₘ_eq_getKey?","line":236,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKey?ₘ_eq_getKey?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getKey?ₘ_eq_getKey?\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">getKey?ₘ_eq_getKey?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.getKey?ₘ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getKey?\">Std.DHashMap.Internal.List.getKey?</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L231-L234","name":"Std.DHashMap.Internal.Raw₀.getD_eq_getValueCastD","line":231,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getD_eq_getValueCastD","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getD_eq_getValueCastD\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">getD_eq_getValueCastD</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#LawfulBEq\">LawfulBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{fallback : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.getD</span> <span class=\"fn\">a</span> <span class=\"fn\">fallback</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValueCastD\">Std.DHashMap.Internal.List.getValueCastD</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span> <span class=\"fn\">fallback</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L226-L229","name":"Std.DHashMap.Internal.Raw₀.getDₘ_eq_getValueCastD","line":226,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getDₘ_eq_getValueCastD","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getDₘ_eq_getValueCastD\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">getDₘ_eq_getValueCastD</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#LawfulBEq\">LawfulBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{fallback : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.getDₘ</span> <span class=\"fn\">a</span> <span class=\"fn\">fallback</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValueCastD\">Std.DHashMap.Internal.List.getValueCastD</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span> <span class=\"fn\">fallback</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L222-L224","name":"Std.DHashMap.Internal.Raw₀.get!_eq_getValueCast!","line":222,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.get!_eq_getValueCast!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.get!_eq_getValueCast!\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">get!_eq_getValueCast!</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#LawfulBEq\">LawfulBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\">β</span> <span class=\"fn\">a</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.get!</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValueCast!\">Std.DHashMap.Internal.List.getValueCast!</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L217-L220","name":"Std.DHashMap.Internal.Raw₀.get!ₘ_eq_getValueCast!","line":217,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.get!ₘ_eq_getValueCast!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.get!ₘ_eq_getValueCast!\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">get!ₘ_eq_getValueCast!</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#LawfulBEq\">LawfulBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\">β</span> <span class=\"fn\">a</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.get!ₘ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValueCast!\">Std.DHashMap.Internal.List.getValueCast!</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L212-L215","name":"Std.DHashMap.Internal.Raw₀.get_eq_getValueCast","line":212,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.get_eq_getValueCast","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.get_eq_getValueCast\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">get_eq_getValueCast</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#LawfulBEq\">LawfulBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.contains</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.get</span> <span class=\"fn\">a</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValueCast\">Std.DHashMap.Internal.List.getValueCast</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L206-L210","name":"Std.DHashMap.Internal.Raw₀.getₘ_eq_getValue","line":206,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getₘ_eq_getValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.getₘ_eq_getValue\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">getₘ_eq_getValue</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#LawfulBEq\">LawfulBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.containsₘ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.getₘ</span> <span class=\"fn\">a</span> <span class=\"fn\">h</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValueCast\">Std.DHashMap.Internal.List.getValueCast</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span> <span class=\"fn\">⋯</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L201-L204","name":"Std.DHashMap.Internal.Raw₀.get?_eq_getValueCast?","line":201,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.get?_eq_getValueCast?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.get?_eq_getValueCast?\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">get?_eq_getValueCast?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#LawfulBEq\">LawfulBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.get?</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValueCast?\">Std.DHashMap.Internal.List.getValueCast?</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L195-L199","name":"Std.DHashMap.Internal.Raw₀.get?ₘ_eq_getValueCast?","line":195,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.get?ₘ_eq_getValueCast?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.get?ₘ_eq_getValueCast?\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">get?ₘ_eq_getValueCast?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#LawfulBEq\">LawfulBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.get?ₘ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.getValueCast?\">Std.DHashMap.Internal.List.getValueCast?</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L190-L193","name":"Std.DHashMap.Internal.Raw₀.contains_eq_containsKey","line":190,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.contains_eq_containsKey","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.contains_eq_containsKey\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">contains_eq_containsKey</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.contains</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.containsKey\">Std.DHashMap.Internal.List.containsKey</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L184-L188","name":"Std.DHashMap.Internal.Raw₀.containsₘ_eq_containsKey","line":184,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.containsₘ_eq_containsKey","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.containsₘ_eq_containsKey\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">containsₘ_eq_containsKey</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hm : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">α</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.containsₘ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/List/Associative.html#Std.DHashMap.Internal.List.containsKey\">Std.DHashMap.Internal.List.containsKey</a> <span class=\"fn\">a</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L167-L180","name":"Std.DHashMap.Internal.Raw₀.wfImp_expandIfNecessary","line":167,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_expandIfNecessary","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_expandIfNecessary\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_expandIfNecessary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">m</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.expandIfNecessary</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L158-L165","name":"Std.DHashMap.Internal.Raw₀.toListModel_expandIfNecessary","line":158,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_expandIfNecessary","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_expandIfNecessary\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_expandIfNecessary</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀\">Std.DHashMap.Internal.Raw₀</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.expandIfNecessary</span>.val</span>.buckets</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.val</span>.buckets</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L152-L156","name":"Std.DHashMap.Internal.Raw₀.toListModel_expand","line":152,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_expand","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_expand\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_expand</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{buckets : <span class=\"fn\">{ <span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span> // <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">d</span>.size</span></span> }</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.expand\">Std.DHashMap.Internal.Raw₀.expand</a> <span class=\"fn\">buckets</span>)</span>.val</span>)</span>.Perm</span>\n  <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\">buckets</span>.val</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L148-L150","name":"Std.DHashMap.Internal.Raw₀.isHashSelf_expand","line":148,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_expand","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_expand\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">isHashSelf_expand</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{buckets : <span class=\"fn\">{ <span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span> // <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">d</span>.size</span></span> }</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.IsHashSelf\">Std.DHashMap.Internal.IsHashSelf</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.expand\">Std.DHashMap.Internal.Raw₀.expand</a> <span class=\"fn\">buckets</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L128-L146","name":"Std.DHashMap.Internal.Raw₀.expand.go_eq","line":128,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.expand.go_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.expand.go_eq\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">expand</span>.<span class=\"name\">go_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(source : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(target : <span class=\"fn\">{ <span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span> // <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">d</span>.size</span></span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.expand.go\">Std.DHashMap.Internal.Raw₀.expand.go</a> <span class=\"fn\">0</span> <span class=\"fn\">source</span> <span class=\"fn\">target</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Init/Prelude.html#List.foldl\">List.foldl</a>\n    <span class=\"fn\">(fun (<span class=\"fn\">acc</span> : <span class=\"fn\">{ <span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span> // <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">d</span>.size</span></span> }</span>) (<span class=\"fn\">p</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span></span>) =&gt;\n      <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.reinsertAux\">Std.DHashMap.Internal.Raw₀.reinsertAux</a> <span class=\"fn\">hash</span> <span class=\"fn\">acc</span> <span class=\"fn\"><span class=\"fn\">p</span>.fst</span> <span class=\"fn\"><span class=\"fn\">p</span>.snd</span></span>)</span>\n    <span class=\"fn\">target</span> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\">source</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L122-L126","name":"Std.DHashMap.Internal.Raw₀.expand.go_neg","line":122,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.expand.go_neg","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.expand.go_neg\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">expand</span>.<span class=\"name\">go_neg</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{source : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{target : <span class=\"fn\">{ <span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span> // <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">d</span>.size</span></span> }</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">source</span>.size</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.expand.go\">Std.DHashMap.Internal.Raw₀.expand.go</a> <span class=\"fn\">i</span> <span class=\"fn\">source</span> <span class=\"fn\">target</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">target</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L115-L120","name":"Std.DHashMap.Internal.Raw₀.expand.go_pos","line":115,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.expand.go_pos","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.expand.go_pos\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">expand</span>.<span class=\"name\">go_pos</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{i : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{source : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{target : <span class=\"fn\">{ <span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span> // <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">d</span>.size</span></span> }</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">source</span>.size</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.expand.go\">Std.DHashMap.Internal.Raw₀.expand.go</a> <span class=\"fn\">i</span> <span class=\"fn\">source</span> <span class=\"fn\">target</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.expand.go\">Std.DHashMap.Internal.Raw₀.expand.go</a> <span class=\"fn\">(<span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">source</span>.set</span> <span class=\"fn\">⟨<span class=\"fn\">i</span>, <span class=\"fn\">h</span>⟩</span> <span class=\"fn\">Std.DHashMap.Internal.AssocList.nil</span>)</span>\n    <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList.foldl\">Std.DHashMap.Internal.AssocList.foldl</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.reinsertAux\">Std.DHashMap.Internal.Raw₀.reinsertAux</a> <span class=\"fn\">hash</span>)</span> <span class=\"fn\">target</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">source</span>.get</span> <span class=\"fn\">⟨<span class=\"fn\">i</span>, <span class=\"fn\">h</span>⟩</span>)</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L104-L113","name":"Std.DHashMap.Internal.Raw₀.toListModel_foldl_reinsertAux","line":104,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_foldl_reinsertAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_foldl_reinsertAux\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_foldl_reinsertAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">((<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(target : <span class=\"fn\">{ <span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span> // <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">d</span>.size</span></span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a>\n      <span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#List.foldl\">List.foldl</a>\n          <span class=\"fn\">(fun (<span class=\"fn\">acc</span> : <span class=\"fn\">{ <span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span> // <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">d</span>.size</span></span> }</span>) (<span class=\"fn\">p</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span></span>) =&gt;\n            <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.reinsertAux\">Std.DHashMap.Internal.Raw₀.reinsertAux</a> <span class=\"fn\">hash</span> <span class=\"fn\">acc</span> <span class=\"fn\"><span class=\"fn\">p</span>.fst</span> <span class=\"fn\"><span class=\"fn\">p</span>.snd</span></span>)</span>\n          <span class=\"fn\">target</span> <span class=\"fn\">l</span>)</span>.val</span>)</span>.Perm</span>\n  <span class=\"fn\">(<span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\">target</span>.val</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L96-L102","name":"Std.DHashMap.Internal.Raw₀.isHashSelf_foldl_reinsertAux","line":96,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_foldl_reinsertAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_foldl_reinsertAux\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">isHashSelf_foldl_reinsertAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">((<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(target : <span class=\"fn\">{ <span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span> // <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">d</span>.size</span></span> }</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.IsHashSelf\">Std.DHashMap.Internal.IsHashSelf</a> <span class=\"fn\"><span class=\"fn\">target</span>.val</span></span> →\n  <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.IsHashSelf\">Std.DHashMap.Internal.IsHashSelf</a>\n    <span class=\"fn\"><span class=\"fn\">(<a href=\"./Init/Prelude.html#List.foldl\">List.foldl</a>\n        <span class=\"fn\">(fun (<span class=\"fn\">acc</span> : <span class=\"fn\">{ <span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span> // <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">d</span>.size</span></span> }</span>) (<span class=\"fn\">p</span> : <span class=\"fn\">(<span class=\"fn\">a</span> : <span class=\"fn\">α</span>) × <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span></span>) =&gt;\n          <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.reinsertAux\">Std.DHashMap.Internal.Raw₀.reinsertAux</a> <span class=\"fn\">hash</span> <span class=\"fn\">acc</span> <span class=\"fn\"><span class=\"fn\">p</span>.fst</span> <span class=\"fn\"><span class=\"fn\">p</span>.snd</span></span>)</span>\n        <span class=\"fn\">target</span> <span class=\"fn\">l</span>)</span>.val</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L89-L94","name":"Std.DHashMap.Internal.Raw₀.toListModel_reinsertAux","line":89,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_reinsertAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_reinsertAux\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_reinsertAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#PartialEquivBEq\">PartialEquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(data : <span class=\"fn\">{ <span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span> // <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">d</span>.size</span></span> }</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.reinsertAux\">Std.DHashMap.Internal.Raw₀.reinsertAux</a> <span class=\"fn\">hash</span> <span class=\"fn\">data</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span>)</span>.Perm</span>\n  <span class=\"fn\">(<span class=\"fn\">⟨<span class=\"fn\">a</span>, <span class=\"fn\">b</span>⟩</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\">data</span>.val</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L77-L85","name":"Std.DHashMap.Internal.Raw₀.isHashSelf_reinsertAux","line":77,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_reinsertAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.isHashSelf_reinsertAux\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">isHashSelf_reinsertAux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/BEq.html#EquivBEq\">EquivBEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Hashable.html#LawfulHashable\">LawfulHashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(data : <span class=\"fn\">{ <span class=\"fn\">d</span> : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span> // <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><span class=\"fn\">d</span>.size</span></span> }</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <span class=\"fn\"><span class=\"fn\">β</span> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.IsHashSelf\">Std.DHashMap.Internal.IsHashSelf</a> <span class=\"fn\"><span class=\"fn\">data</span>.val</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.IsHashSelf\">Std.DHashMap.Internal.IsHashSelf</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.reinsertAux\">Std.DHashMap.Internal.Raw₀.reinsertAux</a> <span class=\"fn\">hash</span> <span class=\"fn\">data</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L72-L75","name":"Std.DHashMap.Internal.Raw₀.wfImp_empty","line":72,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.wfImp_empty\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">wfImp_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.empty\">Std.DHashMap.Internal.Raw₀.empty</a> <span class=\"fn\">c</span>)</span>.val</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L68-L70","name":"Std.DHashMap.Internal.Raw₀.toListModel_buckets_empty","line":68,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_buckets_empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw₀.toListModel_buckets_empty\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw₀</span>.<span class=\"name\">toListModel_buckets_empty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw₀.empty\">Std.DHashMap.Internal.Raw₀.empty</a> <span class=\"fn\">c</span>)</span>.val</span>.buckets</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">[]</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L57-L60","name":"Std.DHashMap.Internal.Raw.isEmpty_eq_isEmpty","line":57,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.isEmpty_eq_isEmpty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.isEmpty_eq_isEmpty\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw</span>.<span class=\"name\">isEmpty_eq_isEmpty</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/RawDef.html#Std.DHashMap.Raw\">Std.DHashMap.Raw</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.isEmpty</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\">m</span>.buckets</span>)</span>.isEmpty</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L53-L55","name":"Std.DHashMap.Internal.Raw.size_eq_length","line":53,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.size_eq_length","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.Raw.size_eq_length\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">Raw</span>.<span class=\"name\">size_eq_length</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/RawDef.html#Std.DHashMap.Raw\">Std.DHashMap.Raw</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.Raw.WFImp\">Std.DHashMap.Internal.Raw.WFImp</a> <span class=\"fn\">m</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">m</span>.size</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\"><span class=\"fn\">m</span>.buckets</span>)</span>.length</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L38-L49","name":"Std.DHashMap.Internal.computeSize_eq","line":38,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.computeSize_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.computeSize_eq\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">computeSize_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{buckets : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/AssocList/Basic.html#Std.DHashMap.Internal.AssocList\">Std.DHashMap.Internal.AssocList</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span>)</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.computeSize\">Std.DHashMap.Internal.computeSize</a> <span class=\"fn\">buckets</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\">buckets</span>)</span>.length</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Data/DHashMap/Internal/WF.lean#L31-L36","name":"Std.DHashMap.Internal.toListModel_mkArray_nil","line":31,"kind":"theorem","docLink":"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.toListModel_mkArray_nil","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Data/DHashMap/Internal/WF.html#Std.DHashMap.Internal.toListModel_mkArray_nil\"><span class=\"name\">Std</span>.<span class=\"name\">DHashMap</span>.<span class=\"name\">Internal</span>.<span class=\"name\">toListModel_mkArray_nil</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./foundational_types.html\">Type</a> v</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Data/DHashMap/Internal/Defs.html#Std.DHashMap.Internal.toListModel\">Std.DHashMap.Internal.toListModel</a> <span class=\"fn\">(<a href=\"./Init/Data/Array/Basic.html#Array.mkArray\">mkArray</a> <span class=\"fn\">c</span> <span class=\"fn\">Std.DHashMap.Internal.AssocList.nil</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">[]</span></span></div></div>"}]}