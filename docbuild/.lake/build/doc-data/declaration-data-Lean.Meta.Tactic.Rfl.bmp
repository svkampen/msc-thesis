{"name":"Lean.Meta.Tactic.Rfl","instances":[],"imports":["Lean.Meta.Tactic.Apply","Lean.Elab.Tactic.Basic","Lean.Meta.Tactic.Refl"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Meta/Tactic/Rfl.lean#L115-L137","name":"Lean.MVarId.liftReflToEq","line":115,"kind":"def","docLink":"./Lean/Meta/Tactic/Rfl.html#Lean.MVarId.liftReflToEq","doc":"Convert a goal of the form `x ~ y` into the form `x = y`, where `~` is a reflexive\nrelation, that is, a relation which has a reflexive lemma tagged with the attribute `@[refl]`.\nIf this can't be done, returns the original `MVarId`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Rfl.html#Lean.MVarId.liftReflToEq\"><span class=\"name\">Lean</span>.<span class=\"name\">MVarId</span>.<span class=\"name\">liftReflToEq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Meta/Tactic/Rfl.lean#L51-L108","name":"Lean.MVarId.applyRfl","line":51,"kind":"def","docLink":"./Lean/Meta/Tactic/Rfl.html#Lean.MVarId.applyRfl","doc":"`MetaM` version of the `rfl` tactic.\n\nThis tactic applies to a goal whose target has the form `x ~ x`, where `~` is a reflexive\nrelation, that is, equality or another relation which has a reflexive lemma tagged with the\nattribute [refl].\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Rfl.html#Lean.MVarId.applyRfl\"><span class=\"name\">Lean</span>.<span class=\"name\">MVarId</span>.<span class=\"name\">applyRfl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(goal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Meta/Tactic/Rfl.lean#L25-L31","name":"Lean.Meta.Rfl.reflExt","line":25,"kind":"opaque","docLink":"./Lean/Meta/Tactic/Rfl.html#Lean.Meta.Rfl.reflExt","doc":"Environment extensions for `refl` lemmas "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Rfl.html#Lean.Meta.Rfl.reflExt\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Rfl</span>.<span class=\"name\">reflExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ScopedEnvExtension.html#Lean.SimpleScopedEnvExtension\">Lean.SimpleScopedEnvExtension</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Init/Prelude.html#Prod\">Ã—</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree.Key\">Lean.Meta.DiscrTree.Key</a></span>)</span> <span class=\"fn\">(<a href=\"./Lean/Meta/DiscrTreeTypes.html#Lean.Meta.DiscrTree\">Lean.Meta.DiscrTree</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Meta/Tactic/Rfl.lean#L22-L23","name":"Lean.Meta.Rfl.reflExt.config","line":22,"kind":"def","docLink":"./Lean/Meta/Tactic/Rfl.html#Lean.Meta.Rfl.reflExt.config","doc":"Discrimation tree settings for the `refl` extension. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Meta/Tactic/Rfl.html#Lean.Meta.Rfl.reflExt.config\"><span class=\"name\">Lean</span>.<span class=\"name\">Meta</span>.<span class=\"name\">Rfl</span>.<span class=\"name\">reflExt</span>.<span class=\"name\">config</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/WHNF.html#Lean.Meta.WhnfCoreConfig\">Lean.Meta.WhnfCoreConfig</a></div></div>"}]}