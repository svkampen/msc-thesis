{"name":"Lean.Elab.Tactic.BVDecide.Frontend.BVDecide.ReifiedLemmas","instances":[],"imports":["Lean.Elab.Tactic.BVDecide.Frontend.BVDecide.ReifiedBVLogical"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/ReifiedLemmas.lean#L42-L76","name":"Lean.Elab.Tactic.BVDecide.Frontend.addIfLemmas.mkIfLemma","line":42,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/ReifiedLemmas.html#Lean.Elab.Tactic.BVDecide.Frontend.addIfLemmas.mkIfLemma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/ReifiedLemmas.html#Lean.Elab.Tactic.BVDecide.Frontend.addIfLemmas.mkIfLemma\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">addIfLemmas</span>.<span class=\"name\">mkIfLemma</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(discrVal : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(discr : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical\">Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(atom lhs rhs : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr\">Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(discrExpr atomExpr lhsExpr rhsExpr : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M\">Lean.Elab.Tactic.BVDecide.Frontend.M</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical\">Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/ReifiedLemmas.lean#L38-L40","name":"Lean.Elab.Tactic.BVDecide.Frontend.addIfLemmas.mkIfFalseLemma","line":38,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/ReifiedLemmas.html#Lean.Elab.Tactic.BVDecide.Frontend.addIfLemmas.mkIfFalseLemma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/ReifiedLemmas.html#Lean.Elab.Tactic.BVDecide.Frontend.addIfLemmas.mkIfFalseLemma\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">addIfLemmas</span>.<span class=\"name\">mkIfFalseLemma</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(discr : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical\">Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(atom lhs rhs : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr\">Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(discrExpr atomExpr lhsExpr rhsExpr : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M\">Lean.Elab.Tactic.BVDecide.Frontend.M</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical\">Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/ReifiedLemmas.lean#L34-L36","name":"Lean.Elab.Tactic.BVDecide.Frontend.addIfLemmas.mkIfTrueLemma","line":34,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/ReifiedLemmas.html#Lean.Elab.Tactic.BVDecide.Frontend.addIfLemmas.mkIfTrueLemma","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/ReifiedLemmas.html#Lean.Elab.Tactic.BVDecide.Frontend.addIfLemmas.mkIfTrueLemma\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">addIfLemmas</span>.<span class=\"name\">mkIfTrueLemma</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(discr : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical\">Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(atom lhs rhs : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr\">Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(discrExpr atomExpr lhsExpr rhsExpr : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.M\">Lean.Elab.Tactic.BVDecide.Frontend.M</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical\">Lean.Elab.Tactic.BVDecide.Frontend.SatAtBVLogical</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/ReifiedLemmas.lean#L19-L76","name":"Lean.Elab.Tactic.BVDecide.Frontend.addIfLemmas","line":19,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/ReifiedLemmas.html#Lean.Elab.Tactic.BVDecide.Frontend.addIfLemmas","doc":"This function adds the two lemmas:\n- `discrExpr = true → atomExpr = lhsExpr`\n- `discrExpr = false → atomExpr = rhsExpr`\nIt assumes that `discrExpr`, `lhsExpr` and `rhsExpr` are the expressions corresponding to `discr`,\n`lhs` and `rhs`. Furthermore it assumes that `atomExpr` is of the form\n`if discrExpr = true then lhsExpr else rhsExpr`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/ReifiedLemmas.html#Lean.Elab.Tactic.BVDecide.Frontend.addIfLemmas\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">Frontend</span>.<span class=\"name\">addIfLemmas</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(discr : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical\">Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVLogical</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(atom lhs rhs : <a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr\">Lean.Elab.Tactic.BVDecide.Frontend.ReifiedBVExpr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(discrExpr atomExpr lhsExpr rhsExpr : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/Frontend/BVDecide/Reflect.html#Lean.Elab.Tactic.BVDecide.Frontend.LemmaM\">Lean.Elab.Tactic.BVDecide.Frontend.LemmaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"}]}