{"name":"Aesop.Util.UnionFind","instances":[{"typeNames":["Aesop.UnionFind"],"name":"Aesop.instInhabitedUnionFind","className":"Inhabited"},{"typeNames":["Aesop.UnionFind"],"name":"Aesop.UnionFind.instEmptyCollection","className":"EmptyCollection"}],"imports":["Init","Lean"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Util/UnionFind.lean#L88-L98","name":"Aesop.UnionFind.sets","line":88,"kind":"def","docLink":"./Aesop/Util/UnionFind.html#Aesop.UnionFind.sets","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind.sets\"><span class=\"name\">Aesop</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">sets</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(u : <span class=\"fn\"><a href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind\">Aesop.UnionFind</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span>)</span></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind\">Aesop.UnionFind</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Util/UnionFind.lean#L85-L86","name":"Aesop.UnionFind.merge","line":85,"kind":"opaque","docLink":"./Aesop/Util/UnionFind.html#Aesop.UnionFind.merge","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind.merge\"><span class=\"name\">Aesop</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">merge</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x y : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind\">Aesop.UnionFind</a> <span class=\"fn\">α</span></span> → <span class=\"fn\"><a href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind\">Aesop.UnionFind</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Util/UnionFind.lean#L56-L61","name":"Aesop.UnionFind.find?","line":56,"kind":"def","docLink":"./Aesop/Util/UnionFind.html#Aesop.UnionFind.find?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind.find?\"><span class=\"name\">Aesop</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">find?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(u : <span class=\"fn\"><a href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind\">Aesop.UnionFind</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind\">Aesop.UnionFind</a> <span class=\"fn\">α</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Util/UnionFind.lean#L41-L42","name":"Aesop.UnionFind.ofArray","line":41,"kind":"def","docLink":"./Aesop/Util/UnionFind.html#Aesop.UnionFind.ofArray","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind.ofArray\"><span class=\"name\">Aesop</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">ofArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(xs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind\">Aesop.UnionFind</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Util/UnionFind.lean#L38-L39","name":"Aesop.UnionFind.addArray","line":38,"kind":"def","docLink":"./Aesop/Util/UnionFind.html#Aesop.UnionFind.addArray","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind.addArray\"><span class=\"name\">Aesop</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">addArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(xs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(u : <span class=\"fn\"><a href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind\">Aesop.UnionFind</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind\">Aesop.UnionFind</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Util/UnionFind.lean#L30-L36","name":"Aesop.UnionFind.add","line":30,"kind":"def","docLink":"./Aesop/Util/UnionFind.html#Aesop.UnionFind.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind.add\"><span class=\"name\">Aesop</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">add</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(u : <span class=\"fn\"><a href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind\">Aesop.UnionFind</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind\">Aesop.UnionFind</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Util/UnionFind.lean#L27-L28","name":"Aesop.UnionFind.size","line":27,"kind":"def","docLink":"./Aesop/Util/UnionFind.html#Aesop.UnionFind.size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind.size\"><span class=\"name\">Aesop</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">size</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(u : <span class=\"fn\"><a href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind\">Aesop.UnionFind</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Util/UnionFind.lean#L24-L25","name":"Aesop.UnionFind.instEmptyCollection","line":24,"kind":"instance","docLink":"./Aesop/Util/UnionFind.html#Aesop.UnionFind.instEmptyCollection","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind.instEmptyCollection\"><span class=\"name\">Aesop</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">instEmptyCollection</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#EmptyCollection\">EmptyCollection</a> <span class=\"fn\">(<a href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind\">Aesop.UnionFind</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Util/UnionFind.lean#L18-L18","name":"Aesop.instInhabitedUnionFind","line":18,"kind":"instance","docLink":"./Aesop/Util/UnionFind.html#Aesop.instInhabitedUnionFind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Util/UnionFind.html#Aesop.instInhabitedUnionFind\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedUnionFind</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a✝ : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a✝¹ : <span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">a✝</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a✝² : <span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">a✝</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind\">Aesop.UnionFind</a> <span class=\"fn\">a✝</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Util/UnionFind.lean#L16-L16","name":"Aesop.UnionFind.toRep","line":16,"kind":"def","docLink":"./Aesop/Util/UnionFind.html#Aesop.UnionFind.toRep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind.toRep\"><span class=\"name\">Aesop</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">toRep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind\">Aesop.UnionFind</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Util/UnionFind.lean#L15-L15","name":"Aesop.UnionFind.sizes","line":15,"kind":"def","docLink":"./Aesop/Util/UnionFind.html#Aesop.UnionFind.sizes","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind.sizes\"><span class=\"name\">Aesop</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">sizes</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind\">Aesop.UnionFind</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Util/UnionFind.lean#L14-L14","name":"Aesop.UnionFind.parents","line":14,"kind":"def","docLink":"./Aesop/Util/UnionFind.html#Aesop.UnionFind.parents","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind.parents\"><span class=\"name\">Aesop</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">parents</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind\">Aesop.UnionFind</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Util/UnionFind.lean#L13-L13","name":"Aesop.UnionFind.mk","line":13,"kind":"ctor","docLink":"./Aesop/Util/UnionFind.html#Aesop.UnionFind.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">UnionFind</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(parents sizes : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(toRep : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#USize\">USize</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind\">Aesop.UnionFind</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Util/UnionFind.lean#L13-L18","name":"Aesop.UnionFind","line":13,"kind":"structure","docLink":"./Aesop/Util/UnionFind.html#Aesop.UnionFind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Util/UnionFind.html#Aesop.UnionFind\"><span class=\"name\">Aesop</span>.<span class=\"name\">UnionFind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u_1</div></div>"}]}