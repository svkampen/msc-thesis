{"name":"Mathlib.Tactic.ToLevel","instances":[{"typeNames":[],"name":"Lean.instToLevel","className":"Lean.ToLevel"},{"typeNames":[],"name":"Lean.instToLevel_1","className":"Lean.ToLevel"}],"imports":["Init","Mathlib.Tactic.PPWithUniv"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/ToLevel.lean#L43-L45","name":"Lean.ToLevel.imax","line":43,"kind":"def","docLink":"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel.imax","doc":"`ToLevel` for `imax u v`. This is not an instance since it causes divergence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel.imax\"><span class=\"name\">Lean</span>.<span class=\"name\">ToLevel</span>.<span class=\"name\">imax</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel\">Lean.ToLevel.{u}</a>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel\">Lean.ToLevel.{v}</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel\">Lean.ToLevel.{imax u v}</a>     </div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/ToLevel.lean#L39-L41","name":"Lean.ToLevel.max","line":39,"kind":"def","docLink":"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel.max","doc":"`ToLevel` for `max u v`. This is not an instance since it causes divergence. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel.max\"><span class=\"name\">Lean</span>.<span class=\"name\">ToLevel</span>.<span class=\"name\">max</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel\">Lean.ToLevel.{u}</a>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel\">Lean.ToLevel.{v}</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel\">Lean.ToLevel.{max u v}</a>     </div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/ToLevel.lean#L36-L37","name":"Lean.instToLevel_1","line":36,"kind":"instance","docLink":"./Mathlib/Tactic/ToLevel.html#Lean.instToLevel_1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToLevel.html#Lean.instToLevel_1\"><span class=\"name\">Lean</span>.<span class=\"name\">instToLevel_1</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel\">Lean.ToLevel.{u}</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel\">Lean.ToLevel.{u + 1}</a>     </div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/ToLevel.lean#L31-L32","name":"Lean.instToLevel","line":31,"kind":"instance","docLink":"./Mathlib/Tactic/ToLevel.html#Lean.instToLevel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToLevel.html#Lean.instToLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">instToLevel</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel\">Lean.ToLevel.{0}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/ToLevel.lean#L27-L27","name":"Lean.ToLevel.univ","line":27,"kind":"def","docLink":"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel.univ","doc":"The universe itself. This is only here to avoid the \"unused universe parameter\" error. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel.univ\"><span class=\"name\">Lean</span>.<span class=\"name\">ToLevel</span>.<span class=\"name\">univ</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <a href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel\">Lean.ToLevel.{u}</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/ToLevel.lean#L25-L25","name":"Lean.ToLevel.toLevel","line":25,"kind":"def","docLink":"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel.toLevel","doc":"A `Level` that represents the universe level `u`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel.toLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">ToLevel</span>.<span class=\"name\">toLevel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <a href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel\">Lean.ToLevel.{u}</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/ToLevel.lean#L23-L23","name":"Lean.ToLevel.mk","line":23,"kind":"ctor","docLink":"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ToLevel</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toLevel : <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(univ : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel\">Lean.ToLevel.{u}</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/ToLevel.lean#L20-L27","name":"Lean.ToLevel","line":20,"kind":"class","docLink":"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel","doc":"A class to create `Level` expressions that denote particular universe levels in Lean.\n`Lean.ToLevel.toLevel.{u}` evaluates to a `Lean.Level` term representing `u` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">ToLevel</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> (u + 1)</div></div>"}]}