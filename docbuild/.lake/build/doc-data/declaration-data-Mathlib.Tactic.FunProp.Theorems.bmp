{"name":"Mathlib.Tactic.FunProp.Theorems","instances":[{"typeNames":["Mathlib.Meta.FunProp.LambdaTheoremArgs"],"name":"Mathlib.Meta.FunProp.instInhabitedLambdaTheoremArgs","className":"Inhabited"},{"typeNames":["Mathlib.Meta.FunProp.LambdaTheoremArgs"],"name":"Mathlib.Meta.FunProp.instBEqLambdaTheoremArgs","className":"BEq"},{"typeNames":["Mathlib.Meta.FunProp.LambdaTheoremArgs"],"name":"Mathlib.Meta.FunProp.instReprLambdaTheoremArgs","className":"Repr"},{"typeNames":["Mathlib.Meta.FunProp.LambdaTheoremArgs"],"name":"Mathlib.Meta.FunProp.instHashableLambdaTheoremArgs","className":"Hashable"},{"typeNames":["Mathlib.Meta.FunProp.LambdaTheoremType"],"name":"Mathlib.Meta.FunProp.instInhabitedLambdaTheoremType","className":"Inhabited"},{"typeNames":["Mathlib.Meta.FunProp.LambdaTheoremType"],"name":"Mathlib.Meta.FunProp.instBEqLambdaTheoremType","className":"BEq"},{"typeNames":["Mathlib.Meta.FunProp.LambdaTheoremType"],"name":"Mathlib.Meta.FunProp.instReprLambdaTheoremType","className":"Repr"},{"typeNames":["Mathlib.Meta.FunProp.LambdaTheoremType"],"name":"Mathlib.Meta.FunProp.instHashableLambdaTheoremType","className":"Hashable"},{"typeNames":["Mathlib.Meta.FunProp.LambdaTheorem"],"name":"Mathlib.Meta.FunProp.instInhabitedLambdaTheorem","className":"Inhabited"},{"typeNames":["Mathlib.Meta.FunProp.LambdaTheorem"],"name":"Mathlib.Meta.FunProp.instBEqLambdaTheorem","className":"BEq"},{"typeNames":["Mathlib.Meta.FunProp.LambdaTheorems"],"name":"Mathlib.Meta.FunProp.instInhabitedLambdaTheorems","className":"Inhabited"},{"typeNames":["Mathlib.Meta.FunProp.TheoremForm"],"name":"Mathlib.Meta.FunProp.instInhabitedTheoremForm","className":"Inhabited"},{"typeNames":["Mathlib.Meta.FunProp.TheoremForm"],"name":"Mathlib.Meta.FunProp.instBEqTheoremForm","className":"BEq"},{"typeNames":["Mathlib.Meta.FunProp.TheoremForm"],"name":"Mathlib.Meta.FunProp.instReprTheoremForm","className":"Repr"},{"typeNames":["Mathlib.Meta.FunProp.TheoremForm"],"name":"Mathlib.Meta.FunProp.instToStringTheoremForm","className":"ToString"},{"typeNames":["Mathlib.Meta.FunProp.FunctionTheorem"],"name":"Mathlib.Meta.FunProp.instInhabitedFunctionTheorem","className":"Inhabited"},{"typeNames":["Mathlib.Meta.FunProp.FunctionTheorem"],"name":"Mathlib.Meta.FunProp.instBEqFunctionTheorem","className":"BEq"},{"typeNames":["Mathlib.Meta.FunProp.FunctionTheorems"],"name":"Mathlib.Meta.FunProp.instInhabitedFunctionTheorems","className":"Inhabited"},{"typeNames":["Mathlib.Meta.FunProp.GeneralTheorem"],"name":"Mathlib.Meta.FunProp.instInhabitedGeneralTheorem","className":"Inhabited"},{"typeNames":["Mathlib.Meta.FunProp.GeneralTheorem"],"name":"Mathlib.Meta.FunProp.instBEqGeneralTheorem","className":"BEq"},{"typeNames":["Mathlib.Meta.FunProp.GeneralTheorems"],"name":"Mathlib.Meta.FunProp.instInhabitedGeneralTheorems","className":"Inhabited"}],"imports":["Init","Mathlib.Tactic.FunProp.Decl","Mathlib.Tactic.FunProp.Types","Mathlib.Tactic.FunProp.FunctionData","Mathlib.Tactic.FunProp.RefinedDiscrTree","Batteries.Data.RBMap.Alter"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L363-L391","name":"Mathlib.Meta.FunProp.addTheorem","line":363,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.addTheorem","doc":"Register theorem `declName` with `fun_prop`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.addTheorem\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">addTheorem</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(attrKind : <a href=\"./Lean/Attributes.html#Lean.AttributeKind\">Lean.AttributeKind</a> := <a href=\"./Lean/Attributes.html#Lean.AttributeKind.global\">Lean.AttributeKind.global</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> := <span class=\"fn\">1000</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L299-L360","name":"Mathlib.Meta.FunProp.getTheoremFromConst","line":299,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.getTheoremFromConst","doc":"For a theorem declaration `declName` return `fun_prop` theorem. It correctly detects which\ntype of theorem it is. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.getTheoremFromConst\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">getTheoremFromConst</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prio : <a href=\"./Init/Prelude.html#Nat\">ℕ</a> := <span class=\"fn\">1000</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem\">Mathlib.Meta.FunProp.Theorem</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L296-L296","name":"Mathlib.Meta.FunProp.Theorem.transition","line":296,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem.transition","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem.transition\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">Theorem</span>.<span class=\"name\">transition</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(thm : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem\">Mathlib.Meta.FunProp.GeneralTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem\">Mathlib.Meta.FunProp.Theorem</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L295-L295","name":"Mathlib.Meta.FunProp.Theorem.mor","line":295,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem.mor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem.mor\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">Theorem</span>.<span class=\"name\">mor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(thm : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem\">Mathlib.Meta.FunProp.GeneralTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem\">Mathlib.Meta.FunProp.Theorem</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L294-L294","name":"Mathlib.Meta.FunProp.Theorem.function","line":294,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem.function","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem.function\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">Theorem</span>.<span class=\"name\">function</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(thm : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">Mathlib.Meta.FunProp.FunctionTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem\">Mathlib.Meta.FunProp.Theorem</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L293-L293","name":"Mathlib.Meta.FunProp.Theorem.lam","line":293,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem.lam","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem.lam\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">Theorem</span>.<span class=\"name\">lam</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(thm : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem\">Mathlib.Meta.FunProp.LambdaTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem\">Mathlib.Meta.FunProp.Theorem</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L261-L296","name":"Mathlib.Meta.FunProp.Theorem","line":261,"kind":"inductive","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem","doc":"There are four types of theorems:\n- lam - theorem about basic lambda calculus terms\n- function - theorem about a specific function(declared or free variable) in specific arguments\n- mor - special theorems talking about bundled morphisms/DFunLike.coe\n- transition - theorems inferring one function property from another\n\nExamples:\n- lam\n```\n  theorem Continuous_id : Continuous fun x => x\n  theorem Continuous_comp (hf : Continuous f) (hg : Continuous g) : Continuous fun x => f (g x)\n```\n- function\n```\n  theorem Continuous_add : Continuous (fun x => x.1 + x.2)\n  theorem Continuous_add (hf : Continuous f) (hg : Continuous g) :\n      Continuous (fun x => (f x) + (g x))\n```\n- mor - the head of function body has to be ``DFunLike.code\n```\n  theorem ContDiff.clm_apply {f : E → F →L[𝕜] G} {g : E → F}\n      (hf : ContDiff 𝕜 n f) (hg : ContDiff 𝕜 n g) :\n      ContDiff 𝕜 n fun x => (f x) (g x)\n  theorem clm_linear {f : E →L[𝕜] F} : IsLinearMap 𝕜 f\n```\n- transition - the conclusion has to be in the form `P f` where `f` is a free variable\n```\n  theorem linear_is_continuous [FiniteDimensional ℝ E] {f : E → F} (hf : IsLinearMap 𝕜 f) :\n      Continuous f\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.Theorem\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">Theorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L247-L254","name":"Mathlib.Meta.FunProp.morTheoremsExt","line":247,"kind":"opaque","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.morTheoremsExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.morTheoremsExt\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">morTheoremsExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheoremsExt\">Mathlib.Meta.FunProp.GeneralTheoremsExt</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L238-L245","name":"Mathlib.Meta.FunProp.transitionTheoremsExt","line":238,"kind":"opaque","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.transitionTheoremsExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.transitionTheoremsExt\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">transitionTheoremsExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheoremsExt\">Mathlib.Meta.FunProp.GeneralTheoremsExt</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L235-L236","name":"Mathlib.Meta.FunProp.GeneralTheoremsExt","line":235,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheoremsExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheoremsExt\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">GeneralTheoremsExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L233-L233","name":"Mathlib.Meta.FunProp.instInhabitedGeneralTheorems","line":233,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedGeneralTheorems","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedGeneralTheorems\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instInhabitedGeneralTheorems</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorems\">Mathlib.Meta.FunProp.GeneralTheorems</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L232-L232","name":"Mathlib.Meta.FunProp.GeneralTheorems.theorems","line":232,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorems.theorems","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorems.theorems\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">GeneralTheorems</span>.<span class=\"name\">theorems</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorems\">Mathlib.Meta.FunProp.GeneralTheorems</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Tactic/FunProp/RefinedDiscrTree.html#Mathlib.Meta.FunProp.RefinedDiscrTree\">Mathlib.Meta.FunProp.RefinedDiscrTree</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem\">Mathlib.Meta.FunProp.GeneralTheorem</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L230-L230","name":"Mathlib.Meta.FunProp.GeneralTheorems.mk","line":230,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorems.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorems.mk\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">GeneralTheorems</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(theorems : <span class=\"fn\"><a href=\"./Mathlib/Tactic/FunProp/RefinedDiscrTree.html#Mathlib.Meta.FunProp.RefinedDiscrTree\">Mathlib.Meta.FunProp.RefinedDiscrTree</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem\">Mathlib.Meta.FunProp.GeneralTheorem</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorems\">Mathlib.Meta.FunProp.GeneralTheorems</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L229-L233","name":"Mathlib.Meta.FunProp.GeneralTheorems","line":229,"kind":"structure","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorems","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorems\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">GeneralTheorems</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L225-L227","name":"Mathlib.Meta.FunProp.GeneralTheorem.getProof","line":225,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem.getProof","doc":"Get proof of a theorem. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem.getProof\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">GeneralTheorem</span>.<span class=\"name\">getProof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(thm : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem\">Mathlib.Meta.FunProp.GeneralTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L223-L223","name":"Mathlib.Meta.FunProp.instBEqGeneralTheorem","line":223,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instBEqGeneralTheorem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instBEqGeneralTheorem\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instBEqGeneralTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem\">Mathlib.Meta.FunProp.GeneralTheorem</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L223-L223","name":"Mathlib.Meta.FunProp.instInhabitedGeneralTheorem","line":223,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedGeneralTheorem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedGeneralTheorem\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instInhabitedGeneralTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem\">Mathlib.Meta.FunProp.GeneralTheorem</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L222-L222","name":"Mathlib.Meta.FunProp.GeneralTheorem.priority","line":222,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem.priority","doc":"priority "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem.priority\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">GeneralTheorem</span>.<span class=\"name\">priority</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem\">Mathlib.Meta.FunProp.GeneralTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L220-L220","name":"Mathlib.Meta.FunProp.GeneralTheorem.keys","line":220,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem.keys","doc":"discrimination tree keys used to index this theorem "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem.keys\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">GeneralTheorem</span>.<span class=\"name\">keys</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem\">Mathlib.Meta.FunProp.GeneralTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Mathlib/Tactic/FunProp/RefinedDiscrTree.html#Mathlib.Meta.FunProp.RefinedDiscrTree.DTExpr\">Mathlib.Meta.FunProp.RefinedDiscrTree.DTExpr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L218-L218","name":"Mathlib.Meta.FunProp.GeneralTheorem.thmName","line":218,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem.thmName","doc":"theorem name "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem.thmName\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">GeneralTheorem</span>.<span class=\"name\">thmName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem\">Mathlib.Meta.FunProp.GeneralTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L216-L216","name":"Mathlib.Meta.FunProp.GeneralTheorem.funPropName","line":216,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem.funPropName","doc":"function property name "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem.funPropName\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">GeneralTheorem</span>.<span class=\"name\">funPropName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem\">Mathlib.Meta.FunProp.GeneralTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L214-L214","name":"Mathlib.Meta.FunProp.GeneralTheorem.mk","line":214,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem.mk\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">GeneralTheorem</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(funPropName thmName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(keys : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Mathlib/Tactic/FunProp/RefinedDiscrTree.html#Mathlib.Meta.FunProp.RefinedDiscrTree.DTExpr\">Mathlib.Meta.FunProp.RefinedDiscrTree.DTExpr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(priority : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem\">Mathlib.Meta.FunProp.GeneralTheorem</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L212-L223","name":"Mathlib.Meta.FunProp.GeneralTheorem","line":212,"kind":"structure","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem","doc":"General theorem about function property\nused for transition and morphism theorems "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.GeneralTheorem\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">GeneralTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L203-L207","name":"Mathlib.Meta.FunProp.getTheoremsForFunction","line":203,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.getTheoremsForFunction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.getTheoremsForFunction\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">getTheoremsForFunction</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(funName funPropName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">Mathlib.Meta.FunProp.FunctionTheorem</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L188-L201","name":"Mathlib.Meta.FunProp.functionTheoremsExt","line":188,"kind":"opaque","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.functionTheoremsExt","doc":"Extension storing all function theorems. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.functionTheoremsExt\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">functionTheoremsExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheoremsExt\">Mathlib.Meta.FunProp.FunctionTheoremsExt</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L185-L186","name":"Mathlib.Meta.FunProp.FunctionTheoremsExt","line":185,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheoremsExt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheoremsExt\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunctionTheoremsExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L178-L182","name":"Mathlib.Meta.FunProp.FunctionTheorem.getProof","line":178,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.getProof","doc":"return proof of function theorem "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.getProof\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunctionTheorem</span>.<span class=\"name\">getProof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(thm : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">Mathlib.Meta.FunProp.FunctionTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L175-L175","name":"Mathlib.Meta.FunProp.instInhabitedFunctionTheorems","line":175,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedFunctionTheorems","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedFunctionTheorems\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instInhabitedFunctionTheorems</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorems\">Mathlib.Meta.FunProp.FunctionTheorems</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L173-L173","name":"Mathlib.Meta.FunProp.FunctionTheorems.theorems","line":173,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorems.theorems","doc":"map: function name → function property → function theorem "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorems.theorems\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunctionTheorems</span>.<span class=\"name\">theorems</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorems\">Mathlib.Meta.FunProp.FunctionTheorems</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Batteries/Data/RBMap/Basic.html#Batteries.RBMap\">Batteries.RBMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <span class=\"fn\">(<a href=\"./Batteries/Data/RBMap/Basic.html#Batteries.RBMap\">Batteries.RBMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">Mathlib.Meta.FunProp.FunctionTheorem</a>)</span> <span class=\"fn\">compare</span>)</span> <span class=\"fn\">compare</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L171-L171","name":"Mathlib.Meta.FunProp.FunctionTheorems.mk","line":171,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorems.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorems.mk\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunctionTheorems</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(theorems :\n  <span class=\"fn\"><a href=\"./Batteries/Data/RBMap/Basic.html#Batteries.RBMap\">Batteries.RBMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <span class=\"fn\">(<a href=\"./Batteries/Data/RBMap/Basic.html#Batteries.RBMap\">Batteries.RBMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">Mathlib.Meta.FunProp.FunctionTheorem</a>)</span> <span class=\"fn\">compare</span>)</span> <span class=\"fn\">compare</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorems\">Mathlib.Meta.FunProp.FunctionTheorems</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L170-L175","name":"Mathlib.Meta.FunProp.FunctionTheorems","line":170,"kind":"structure","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorems","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorems\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunctionTheorems</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L166-L166","name":"Mathlib.Meta.FunProp.instBEqFunctionTheorem","line":166,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instBEqFunctionTheorem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instBEqFunctionTheorem\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instBEqFunctionTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">Mathlib.Meta.FunProp.FunctionTheorem</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L166-L166","name":"Mathlib.Meta.FunProp.instInhabitedFunctionTheorem","line":166,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedFunctionTheorem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedFunctionTheorem\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instInhabitedFunctionTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">Mathlib.Meta.FunProp.FunctionTheorem</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L165-L165","name":"Mathlib.Meta.FunProp.FunctionTheorem.form","line":165,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.form","doc":"form of the theorem, see documentation of TheoremForm "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.form\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunctionTheorem</span>.<span class=\"name\">form</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">Mathlib.Meta.FunProp.FunctionTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.TheoremForm\">Mathlib.Meta.FunProp.TheoremForm</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L163-L163","name":"Mathlib.Meta.FunProp.FunctionTheorem.priority","line":163,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.priority","doc":"priority  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.priority\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunctionTheorem</span>.<span class=\"name\">priority</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">Mathlib.Meta.FunProp.FunctionTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L161-L161","name":"Mathlib.Meta.FunProp.FunctionTheorem.appliedArgs","line":161,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.appliedArgs","doc":"total number of arguments applied to the function  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.appliedArgs\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunctionTheorem</span>.<span class=\"name\">appliedArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">Mathlib.Meta.FunProp.FunctionTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L159-L159","name":"Mathlib.Meta.FunProp.FunctionTheorem.mainArgs","line":159,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.mainArgs","doc":"array of argument indices about which this theorem is about "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.mainArgs\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunctionTheorem</span>.<span class=\"name\">mainArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">Mathlib.Meta.FunProp.FunctionTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L157-L157","name":"Mathlib.Meta.FunProp.FunctionTheorem.funOrigin","line":157,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.funOrigin","doc":"function name "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.funOrigin\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunctionTheorem</span>.<span class=\"name\">funOrigin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">Mathlib.Meta.FunProp.FunctionTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Types.html#Mathlib.Meta.FunProp.Origin\">Mathlib.Meta.FunProp.Origin</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L155-L155","name":"Mathlib.Meta.FunProp.FunctionTheorem.thmOrigin","line":155,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.thmOrigin","doc":"theorem name "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.thmOrigin\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunctionTheorem</span>.<span class=\"name\">thmOrigin</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">Mathlib.Meta.FunProp.FunctionTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Types.html#Mathlib.Meta.FunProp.Origin\">Mathlib.Meta.FunProp.Origin</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L153-L153","name":"Mathlib.Meta.FunProp.FunctionTheorem.funPropName","line":153,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.funPropName","doc":"function property name "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.funPropName\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunctionTheorem</span>.<span class=\"name\">funPropName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">Mathlib.Meta.FunProp.FunctionTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L151-L151","name":"Mathlib.Meta.FunProp.FunctionTheorem.mk","line":151,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem.mk\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunctionTheorem</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(funPropName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(thmOrigin funOrigin : <a href=\"./Mathlib/Tactic/FunProp/Types.html#Mathlib.Meta.FunProp.Origin\">Mathlib.Meta.FunProp.Origin</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mainArgs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">ℕ</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(appliedArgs priority : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(form : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.TheoremForm\">Mathlib.Meta.FunProp.TheoremForm</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\">Mathlib.Meta.FunProp.FunctionTheorem</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L150-L166","name":"Mathlib.Meta.FunProp.FunctionTheorem","line":150,"kind":"structure","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem","doc":"theorem about specific function (either declared constant or free variable) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.FunctionTheorem\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">FunctionTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L146-L148","name":"Mathlib.Meta.FunProp.instToStringTheoremForm","line":146,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instToStringTheoremForm","doc":"TheoremForm to string "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instToStringTheoremForm\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instToStringTheoremForm</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.TheoremForm\">Mathlib.Meta.FunProp.TheoremForm</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L144-L144","name":"Mathlib.Meta.FunProp.instReprTheoremForm","line":144,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instReprTheoremForm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instReprTheoremForm\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instReprTheoremForm</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.TheoremForm\">Mathlib.Meta.FunProp.TheoremForm</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L144-L144","name":"Mathlib.Meta.FunProp.instBEqTheoremForm","line":144,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instBEqTheoremForm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instBEqTheoremForm\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instBEqTheoremForm</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.TheoremForm\">Mathlib.Meta.FunProp.TheoremForm</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L144-L144","name":"Mathlib.Meta.FunProp.instInhabitedTheoremForm","line":144,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedTheoremForm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedTheoremForm\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instInhabitedTheoremForm</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.TheoremForm\">Mathlib.Meta.FunProp.TheoremForm</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L143-L143","name":"Mathlib.Meta.FunProp.TheoremForm.comp","line":143,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.TheoremForm.comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.TheoremForm.comp\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">TheoremForm</span>.<span class=\"name\">comp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.TheoremForm\">Mathlib.Meta.FunProp.TheoremForm</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L143-L143","name":"Mathlib.Meta.FunProp.TheoremForm.uncurried","line":143,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.TheoremForm.uncurried","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.TheoremForm.uncurried\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">TheoremForm</span>.<span class=\"name\">uncurried</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.TheoremForm\">Mathlib.Meta.FunProp.TheoremForm</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L130-L144","name":"Mathlib.Meta.FunProp.TheoremForm","line":130,"kind":"inductive","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.TheoremForm","doc":"Function theorems are stated in uncurried or compositional form.\n\nuncurried\n```\ntheorem Continuous_add : Continuous (fun x => x.1 + x.2)\n```\n\ncompositional\n```\ntheorem Continuous_add (hf : Continuous f) (hg : Continuous g) : Continuous (fun x => (f x) + (g x))\n```\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.TheoremForm\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">TheoremForm</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L122-L125","name":"Mathlib.Meta.FunProp.getLambdaTheorems","line":122,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.getLambdaTheorems","doc":"Get lambda theorems for particular function property `funPropName`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.getLambdaTheorems\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">getLambdaTheorems</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(funPropName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(type : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType\">Mathlib.Meta.FunProp.LambdaTheoremType</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem\">Mathlib.Meta.FunProp.LambdaTheorem</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L111-L120","name":"Mathlib.Meta.FunProp.lambdaTheoremsExt","line":111,"kind":"opaque","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.lambdaTheoremsExt","doc":"Environment extension storing all lambda theorems. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.lambdaTheoremsExt\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">lambdaTheoremsExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremsExt\">Mathlib.Meta.FunProp.LambdaTheoremsExt</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L108-L109","name":"Mathlib.Meta.FunProp.LambdaTheoremsExt","line":108,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremsExt","doc":"Environment extension storing lambda theorems. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremsExt\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheoremsExt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L104-L106","name":"Mathlib.Meta.FunProp.LambdaTheorem.getProof","line":104,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem.getProof","doc":"Return proof of lambda theorem "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem.getProof\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheorem</span>.<span class=\"name\">getProof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(thm : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem\">Mathlib.Meta.FunProp.LambdaTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L101-L101","name":"Mathlib.Meta.FunProp.instInhabitedLambdaTheorems","line":101,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedLambdaTheorems","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedLambdaTheorems\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instInhabitedLambdaTheorems</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorems\">Mathlib.Meta.FunProp.LambdaTheorems</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L100-L100","name":"Mathlib.Meta.FunProp.LambdaTheorems.theorems","line":100,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorems.theorems","doc":"map: function property name × theorem type → lambda theorem "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorems.theorems\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheorems</span>.<span class=\"name\">theorems</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorems\">Mathlib.Meta.FunProp.LambdaTheorems</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType\">Mathlib.Meta.FunProp.LambdaTheoremType</a>)</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem\">Mathlib.Meta.FunProp.LambdaTheorem</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L98-L98","name":"Mathlib.Meta.FunProp.LambdaTheorems.mk","line":98,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorems.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorems.mk\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheorems</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(theorems : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType\">Mathlib.Meta.FunProp.LambdaTheoremType</a>)</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem\">Mathlib.Meta.FunProp.LambdaTheorem</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorems\">Mathlib.Meta.FunProp.LambdaTheorems</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L97-L101","name":"Mathlib.Meta.FunProp.LambdaTheorems","line":97,"kind":"structure","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorems","doc":"Collection of lambda theorems "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorems\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheorems</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L95-L95","name":"Mathlib.Meta.FunProp.instBEqLambdaTheorem","line":95,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instBEqLambdaTheorem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instBEqLambdaTheorem\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instBEqLambdaTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem\">Mathlib.Meta.FunProp.LambdaTheorem</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L95-L95","name":"Mathlib.Meta.FunProp.instInhabitedLambdaTheorem","line":95,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedLambdaTheorem","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedLambdaTheorem\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instInhabitedLambdaTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem\">Mathlib.Meta.FunProp.LambdaTheorem</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L94-L94","name":"Mathlib.Meta.FunProp.LambdaTheorem.thmArgs","line":94,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem.thmArgs","doc":"Type and important argument of the theorem. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem.thmArgs\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheorem</span>.<span class=\"name\">thmArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem\">Mathlib.Meta.FunProp.LambdaTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs\">Mathlib.Meta.FunProp.LambdaTheoremArgs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L92-L92","name":"Mathlib.Meta.FunProp.LambdaTheorem.thmName","line":92,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem.thmName","doc":"Name of lambda theorem "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem.thmName\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheorem</span>.<span class=\"name\">thmName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem\">Mathlib.Meta.FunProp.LambdaTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L90-L90","name":"Mathlib.Meta.FunProp.LambdaTheorem.funPropName","line":90,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem.funPropName","doc":"Name of function property "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem.funPropName\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheorem</span>.<span class=\"name\">funPropName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem\">Mathlib.Meta.FunProp.LambdaTheorem</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L88-L88","name":"Mathlib.Meta.FunProp.LambdaTheorem.mk","line":88,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem.mk\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheorem</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(funPropName thmName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(thmArgs : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs\">Mathlib.Meta.FunProp.LambdaTheoremArgs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem\">Mathlib.Meta.FunProp.LambdaTheorem</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L87-L95","name":"Mathlib.Meta.FunProp.LambdaTheorem","line":87,"kind":"structure","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem","doc":"Structure holding information about lambda theorem. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheorem\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheorem</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L62-L84","name":"Mathlib.Meta.FunProp.detectLambdaTheoremArgs","line":62,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.detectLambdaTheoremArgs","doc":"Decides whether `f` is a function corresponding to one of the lambda theorems. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.detectLambdaTheoremArgs\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">detectLambdaTheoremArgs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(f : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ctxVars : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs\">Mathlib.Meta.FunProp.LambdaTheoremArgs</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L53-L60","name":"Mathlib.Meta.FunProp.LambdaTheoremArgs.type","line":53,"kind":"def","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs.type","doc":"Convert `LambdaTheoremArgs` to `LambdaTheoremType`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs.type\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheoremArgs</span>.<span class=\"name\">type</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(t : <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs\">Mathlib.Meta.FunProp.LambdaTheoremArgs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType\">Mathlib.Meta.FunProp.LambdaTheoremType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L51-L51","name":"Mathlib.Meta.FunProp.instHashableLambdaTheoremType","line":51,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instHashableLambdaTheoremType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instHashableLambdaTheoremType\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instHashableLambdaTheoremType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType\">Mathlib.Meta.FunProp.LambdaTheoremType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L51-L51","name":"Mathlib.Meta.FunProp.instReprLambdaTheoremType","line":51,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instReprLambdaTheoremType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instReprLambdaTheoremType\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instReprLambdaTheoremType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType\">Mathlib.Meta.FunProp.LambdaTheoremType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L51-L51","name":"Mathlib.Meta.FunProp.instBEqLambdaTheoremType","line":51,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instBEqLambdaTheoremType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instBEqLambdaTheoremType\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instBEqLambdaTheoremType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType\">Mathlib.Meta.FunProp.LambdaTheoremType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L51-L51","name":"Mathlib.Meta.FunProp.instInhabitedLambdaTheoremType","line":51,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedLambdaTheoremType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedLambdaTheoremType\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instInhabitedLambdaTheoremType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType\">Mathlib.Meta.FunProp.LambdaTheoremType</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L49-L50","name":"Mathlib.Meta.FunProp.LambdaTheoremType.pi","line":49,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType.pi","doc":"Pi theorem e.g. `∀ y, Continuous (f · y) → Continuous fun x y => f x y` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType.pi\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheoremType</span>.<span class=\"name\">pi</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType\">Mathlib.Meta.FunProp.LambdaTheoremType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L47-L48","name":"Mathlib.Meta.FunProp.LambdaTheoremType.comp","line":47,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType.comp","doc":"Composition theorem e.g. `Continuous f → Continuous g → Continuous fun x => f (g x)` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType.comp\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheoremType</span>.<span class=\"name\">comp</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType\">Mathlib.Meta.FunProp.LambdaTheoremType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L45-L46","name":"Mathlib.Meta.FunProp.LambdaTheoremType.apply","line":45,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType.apply","doc":"Apply theorem e.g. `Continuous fun (f : (x : X) → Y x => f x)` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType.apply\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheoremType</span>.<span class=\"name\">apply</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType\">Mathlib.Meta.FunProp.LambdaTheoremType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L43-L44","name":"Mathlib.Meta.FunProp.LambdaTheoremType.const","line":43,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType.const","doc":"Constant theorem e.g. `Continuous fun x => y` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType.const\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheoremType</span>.<span class=\"name\">const</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType\">Mathlib.Meta.FunProp.LambdaTheoremType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L41-L42","name":"Mathlib.Meta.FunProp.LambdaTheoremType.id","line":41,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType.id","doc":"Identity theorem e.g. `Continuous fun x => x` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType.id\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheoremType</span>.<span class=\"name\">id</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType\">Mathlib.Meta.FunProp.LambdaTheoremType</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L39-L51","name":"Mathlib.Meta.FunProp.LambdaTheoremType","line":39,"kind":"inductive","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType","doc":"Tag for one of the 5 basic lambda theorems "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremType\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheoremType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L37-L37","name":"Mathlib.Meta.FunProp.instHashableLambdaTheoremArgs","line":37,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instHashableLambdaTheoremArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instHashableLambdaTheoremArgs\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instHashableLambdaTheoremArgs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs\">Mathlib.Meta.FunProp.LambdaTheoremArgs</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L37-L37","name":"Mathlib.Meta.FunProp.instReprLambdaTheoremArgs","line":37,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instReprLambdaTheoremArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instReprLambdaTheoremArgs\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instReprLambdaTheoremArgs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs\">Mathlib.Meta.FunProp.LambdaTheoremArgs</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L37-L37","name":"Mathlib.Meta.FunProp.instBEqLambdaTheoremArgs","line":37,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instBEqLambdaTheoremArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instBEqLambdaTheoremArgs\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instBEqLambdaTheoremArgs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs\">Mathlib.Meta.FunProp.LambdaTheoremArgs</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L37-L37","name":"Mathlib.Meta.FunProp.instInhabitedLambdaTheoremArgs","line":37,"kind":"instance","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedLambdaTheoremArgs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.instInhabitedLambdaTheoremArgs\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">instInhabitedLambdaTheoremArgs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs\">Mathlib.Meta.FunProp.LambdaTheoremArgs</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L35-L36","name":"Mathlib.Meta.FunProp.LambdaTheoremArgs.pi","line":35,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs.pi","doc":"Pi theorem e.g. `∀ y, Continuous (f · y) → Continuous fun x y => f x y` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs.pi\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheoremArgs</span>.<span class=\"name\">pi</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs\">Mathlib.Meta.FunProp.LambdaTheoremArgs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L30-L34","name":"Mathlib.Meta.FunProp.LambdaTheoremArgs.comp","line":30,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs.comp","doc":"Composition theorem e.g. `Continuous f → Continuous g → Continuous fun x => f (g x)`\n\nThe numbers `fArgId` and `gArgId` store the argument index for `f` and `g` in the composition\ntheorem. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs.comp\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheoremArgs</span>.<span class=\"name\">comp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fArgId gArgId : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs\">Mathlib.Meta.FunProp.LambdaTheoremArgs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L28-L29","name":"Mathlib.Meta.FunProp.LambdaTheoremArgs.apply","line":28,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs.apply","doc":"Apply theorem e.g. `Continuous fun (f : (x : X) → Y x => f x)` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs.apply\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheoremArgs</span>.<span class=\"name\">apply</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs\">Mathlib.Meta.FunProp.LambdaTheoremArgs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L26-L27","name":"Mathlib.Meta.FunProp.LambdaTheoremArgs.const","line":26,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs.const","doc":"Constant theorem e.g. `Continuous fun x => y` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs.const\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheoremArgs</span>.<span class=\"name\">const</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs\">Mathlib.Meta.FunProp.LambdaTheoremArgs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L24-L25","name":"Mathlib.Meta.FunProp.LambdaTheoremArgs.id","line":24,"kind":"ctor","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs.id","doc":"Identity theorem e.g. `Continuous fun x => x` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs.id\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheoremArgs</span>.<span class=\"name\">id</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs\">Mathlib.Meta.FunProp.LambdaTheoremArgs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/FunProp/Theorems.lean#L21-L37","name":"Mathlib.Meta.FunProp.LambdaTheoremArgs","line":21,"kind":"inductive","docLink":"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs","doc":"Tag for one of the 5 basic lambda theorems, that also hold extra data for composition theorem\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/FunProp/Theorems.html#Mathlib.Meta.FunProp.LambdaTheoremArgs\"><span class=\"name\">Mathlib</span>.<span class=\"name\">Meta</span>.<span class=\"name\">FunProp</span>.<span class=\"name\">LambdaTheoremArgs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}