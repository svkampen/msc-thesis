{"name":"Lean.ToExpr","instances":[{"typeNames":["Nat"],"name":"Lean.instToExprNat","className":"Lean.ToExpr"},{"typeNames":["Int"],"name":"Lean.instToExprInt","className":"Lean.ToExpr"},{"typeNames":["Fin"],"name":"Lean.instToExprFin","className":"Lean.ToExpr"},{"typeNames":["BitVec"],"name":"Lean.instToExprBitVec","className":"Lean.ToExpr"},{"typeNames":["UInt8"],"name":"Lean.instToExprUInt8","className":"Lean.ToExpr"},{"typeNames":["UInt16"],"name":"Lean.instToExprUInt16","className":"Lean.ToExpr"},{"typeNames":["UInt32"],"name":"Lean.instToExprUInt32","className":"Lean.ToExpr"},{"typeNames":["UInt64"],"name":"Lean.instToExprUInt64","className":"Lean.ToExpr"},{"typeNames":["USize"],"name":"Lean.instToExprUSize","className":"Lean.ToExpr"},{"typeNames":["Bool"],"name":"Lean.instToExprBool","className":"Lean.ToExpr"},{"typeNames":["Char"],"name":"Lean.instToExprChar","className":"Lean.ToExpr"},{"typeNames":["String"],"name":"Lean.instToExprString","className":"Lean.ToExpr"},{"typeNames":["Unit"],"name":"Lean.instToExprUnit","className":"Lean.ToExpr"},{"typeNames":["System.FilePath"],"name":"Lean.instToExprFilePath","className":"Lean.ToExpr"},{"typeNames":["Lean.Name"],"name":"Lean.instToExprName","className":"Lean.ToExpr"},{"typeNames":["Option"],"name":"Lean.instToExprOption","className":"Lean.ToExpr"},{"typeNames":["List"],"name":"Lean.instToExprList","className":"Lean.ToExpr"},{"typeNames":["Array"],"name":"Lean.instToExprArray","className":"Lean.ToExpr"},{"typeNames":["Prod"],"name":"Lean.instToExprProd","className":"Lean.ToExpr"},{"typeNames":["Lean.Literal"],"name":"Lean.instToExprLiteral","className":"Lean.ToExpr"},{"typeNames":["Lean.FVarId"],"name":"Lean.instToExprFVarId","className":"Lean.ToExpr"},{"typeNames":["Lean.Syntax.Preresolved"],"name":"Lean.instToExprPreresolved","className":"Lean.ToExpr"}],"imports":["Lean.Expr","Init.Data.BitVec.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/ToExpr.lean#L186-L192","name":"Lean.Expr.toCtorIfLit","line":186,"kind":"def","docLink":"./Lean/ToExpr.html#Lean.Expr.toCtorIfLit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.Expr.toCtorIfLit\"><span class=\"name\">Lean</span>.<span class=\"name\">Expr</span>.<span class=\"name\">toCtorIfLit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> → <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/ToExpr.lean#L180-L184","name":"Lean.instToExprPreresolved","line":180,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprPreresolved","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprPreresolved\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprPreresolved</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Init/Prelude.html#Lean.Syntax.Preresolved\">Lean.Syntax.Preresolved</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/ToExpr.lean#L176-L178","name":"Lean.instToExprFVarId","line":176,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprFVarId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprFVarId\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprFVarId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/ToExpr.lean#L170-L174","name":"Lean.instToExprLiteral","line":170,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprLiteral","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprLiteral\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprLiteral</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Lean/Expr.html#Lean.Literal\">Lean.Literal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/ToExpr.lean#L164-L168","name":"Lean.instToExprProd","line":164,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprProd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprProd\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprProd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">(<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/ToExpr.lean#L159-L162","name":"Lean.instToExprArray","line":159,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprArray","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprArray\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprArray</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/ToExpr.lean#L152-L157","name":"Lean.instToExprList","line":152,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprList","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprList\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprList</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/ToExpr.lean#L141-L146","name":"Lean.instToExprOption","line":141,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprOption","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprOption\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprOption</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/ToExpr.lean#L137-L139","name":"Lean.instToExprName","line":137,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprName\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprName</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/ToExpr.lean#L110-L112","name":"Lean.instToExprFilePath","line":110,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprFilePath","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprFilePath\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprFilePath</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/ToExpr.lean#L106-L108","name":"Lean.instToExprUnit","line":106,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprUnit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprUnit\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprUnit</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/ToExpr.lean#L102-L104","name":"Lean.instToExprString","line":102,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprString","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprString\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprString</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/ToExpr.lean#L98-L100","name":"Lean.instToExprChar","line":98,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprChar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprChar\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprChar</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Init/Prelude.html#Char\">Char</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/ToExpr.lean#L94-L96","name":"Lean.instToExprBool","line":94,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprBool","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprBool\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprBool</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/ToExpr.lean#L87-L92","name":"Lean.instToExprUSize","line":87,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprUSize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprUSize\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprUSize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Init/Prelude.html#USize\">USize</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/ToExpr.lean#L80-L85","name":"Lean.instToExprUInt64","line":80,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprUInt64","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprUInt64\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprUInt64</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Init/Prelude.html#UInt64\">UInt64</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/ToExpr.lean#L73-L78","name":"Lean.instToExprUInt32","line":73,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprUInt32","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprUInt32\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprUInt32</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Init/Prelude.html#UInt32\">UInt32</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/ToExpr.lean#L66-L71","name":"Lean.instToExprUInt16","line":66,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprUInt16","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprUInt16\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprUInt16</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Init/Prelude.html#UInt16\">UInt16</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/ToExpr.lean#L59-L64","name":"Lean.instToExprUInt8","line":59,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprUInt8","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprUInt8\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprUInt8</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Init/Prelude.html#UInt8\">UInt8</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/ToExpr.lean#L54-L57","name":"Lean.instToExprBitVec","line":54,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprBitVec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprBitVec\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprBitVec</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#BitVec\">BitVec</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/ToExpr.lean#L46-L52","name":"Lean.instToExprFin","line":46,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprFin","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprFin\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprFin</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">n</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/ToExpr.lean#L41-L44","name":"Lean.instToExprInt.mkNat","line":41,"kind":"def","docLink":"./Lean/ToExpr.html#Lean.instToExprInt.mkNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprInt.mkNat\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprInt</span>.<span class=\"name\">mkNat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/ToExpr.lean#L33-L44","name":"Lean.instToExprInt","line":33,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprInt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprInt\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprInt</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Init/Data/Int/Basic.html#Int\">Int</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/ToExpr.lean#L29-L31","name":"Lean.instToExprNat","line":29,"kind":"instance","docLink":"./Lean/ToExpr.html#Lean.instToExprNat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.instToExprNat\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprNat</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/ToExpr.lean#L25-L25","name":"Lean.ToExpr.toTypeExpr","line":25,"kind":"def","docLink":"./Lean/ToExpr.html#Lean.ToExpr.toTypeExpr","doc":"Expression representing the type `α` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.ToExpr.toTypeExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">ToExpr</span>.<span class=\"name\">toTypeExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/ToExpr.lean#L23-L23","name":"Lean.ToExpr.toExpr","line":23,"kind":"def","docLink":"./Lean/ToExpr.html#Lean.ToExpr.toExpr","doc":"Convert a value `a : α` into an expression that denotes `a` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.ToExpr.toExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">ToExpr</span>.<span class=\"name\">toExpr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/ToExpr.lean#L21-L21","name":"Lean.ToExpr.mk","line":21,"kind":"ctor","docLink":"./Lean/ToExpr.html#Lean.ToExpr.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.ToExpr.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">ToExpr</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(toExpr : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(toTypeExpr : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/ToExpr.lean#L13-L25","name":"Lean.ToExpr","line":13,"kind":"class","docLink":"./Lean/ToExpr.html#Lean.ToExpr","doc":"We use the `ToExpr` type class to convert values of type `α` into\nexpressions that denote these values in Lean.\nExample:\n```\ntoExpr true = .const ``Bool.true []\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/ToExpr.html#Lean.ToExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">ToExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"}]}