{"name":"Lean.Data.Lsp.CodeActions","instances":[{"typeNames":["Lean.Lsp.CodeActionTriggerKind"],"name":"Lean.Lsp.instToJsonCodeActionTriggerKind","className":"Lean.ToJson"},{"typeNames":["Lean.Lsp.CodeActionTriggerKind"],"name":"Lean.Lsp.instFromJsonCodeActionTriggerKind","className":"Lean.FromJson"},{"typeNames":["Lean.Lsp.CodeActionContext"],"name":"Lean.Lsp.instFromJsonCodeActionContext","className":"Lean.FromJson"},{"typeNames":["Lean.Lsp.CodeActionContext"],"name":"Lean.Lsp.instToJsonCodeActionContext","className":"Lean.ToJson"},{"typeNames":["Lean.Lsp.CodeActionParams"],"name":"Lean.Lsp.instFromJsonCodeActionParams","className":"Lean.FromJson"},{"typeNames":["Lean.Lsp.CodeActionParams"],"name":"Lean.Lsp.instToJsonCodeActionParams","className":"Lean.ToJson"},{"typeNames":["Lean.Lsp.CodeActionDisabled"],"name":"Lean.Lsp.instFromJsonCodeActionDisabled","className":"Lean.FromJson"},{"typeNames":["Lean.Lsp.CodeActionDisabled"],"name":"Lean.Lsp.instToJsonCodeActionDisabled","className":"Lean.ToJson"},{"typeNames":["Lean.Lsp.CodeActionOptions"],"name":"Lean.Lsp.instToJsonCodeActionOptions","className":"Lean.ToJson"},{"typeNames":["Lean.Lsp.CodeActionOptions"],"name":"Lean.Lsp.instFromJsonCodeActionOptions","className":"Lean.FromJson"},{"typeNames":["Lean.Lsp.CodeAction"],"name":"Lean.Lsp.instToJsonCodeAction","className":"Lean.ToJson"},{"typeNames":["Lean.Lsp.CodeAction"],"name":"Lean.Lsp.instFromJsonCodeAction","className":"Lean.FromJson"},{"typeNames":["Lean.Lsp.ResolveSupport"],"name":"Lean.Lsp.instFromJsonResolveSupport","className":"Lean.FromJson"},{"typeNames":["Lean.Lsp.ResolveSupport"],"name":"Lean.Lsp.instToJsonResolveSupport","className":"Lean.ToJson"},{"typeNames":["Lean.Lsp.CodeActionLiteralSupportValueSet"],"name":"Lean.Lsp.instFromJsonCodeActionLiteralSupportValueSet","className":"Lean.FromJson"},{"typeNames":["Lean.Lsp.CodeActionLiteralSupportValueSet"],"name":"Lean.Lsp.instToJsonCodeActionLiteralSupportValueSet","className":"Lean.ToJson"},{"typeNames":["Lean.Lsp.CodeActionLiteralSupport"],"name":"Lean.Lsp.instFromJsonCodeActionLiteralSupport","className":"Lean.FromJson"},{"typeNames":["Lean.Lsp.CodeActionLiteralSupport"],"name":"Lean.Lsp.instToJsonCodeActionLiteralSupport","className":"Lean.ToJson"},{"typeNames":["Lean.Lsp.CodeActionClientCapabilities"],"name":"Lean.Lsp.instFromJsonCodeActionClientCapabilities","className":"Lean.FromJson"},{"typeNames":["Lean.Lsp.CodeActionClientCapabilities"],"name":"Lean.Lsp.instToJsonCodeActionClientCapabilities","className":"Lean.ToJson"}],"imports":["Lean.Data.Json","Lean.Data.Lsp.Basic","Lean.Data.Lsp.Diagnostics"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L170-L170","name":"Lean.Lsp.instToJsonCodeActionClientCapabilities","line":170,"kind":"instance","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instToJsonCodeActionClientCapabilities","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instToJsonCodeActionClientCapabilities\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instToJsonCodeActionClientCapabilities</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">Lean.ToJson</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionClientCapabilities\">Lean.Lsp.CodeActionClientCapabilities</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L170-L170","name":"Lean.Lsp.instFromJsonCodeActionClientCapabilities","line":170,"kind":"instance","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instFromJsonCodeActionClientCapabilities","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instFromJsonCodeActionClientCapabilities\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instFromJsonCodeActionClientCapabilities</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">Lean.FromJson</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionClientCapabilities\">Lean.Lsp.CodeActionClientCapabilities</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L169-L169","name":"Lean.Lsp.CodeActionClientCapabilities.resolveSupport?","line":169,"kind":"def","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionClientCapabilities.resolveSupport?","doc":"Whether the client supports resolving additional code action properties via a separate `codeAction/resolve` request. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionClientCapabilities.resolveSupport?\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionClientCapabilities</span>.<span class=\"name\">resolveSupport?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionClientCapabilities\">Lean.Lsp.CodeActionClientCapabilities</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.ResolveSupport\">Lean.Lsp.ResolveSupport</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L167-L167","name":"Lean.Lsp.CodeActionClientCapabilities.codeActionLiteralSupport?","line":167,"kind":"def","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionClientCapabilities.codeActionLiteralSupport?","doc":"The client supports code action literals as a valid response of the `textDocument/codeAction` request. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionClientCapabilities.codeActionLiteralSupport?\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionClientCapabilities</span>.<span class=\"name\">codeActionLiteralSupport?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionClientCapabilities\">Lean.Lsp.CodeActionClientCapabilities</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionLiteralSupport\">Lean.Lsp.CodeActionLiteralSupport</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L165-L165","name":"Lean.Lsp.CodeActionClientCapabilities.honorsChangeAnnotations?","line":165,"kind":"def","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionClientCapabilities.honorsChangeAnnotations?","doc":"Whether the client honors the change annotations in\ntext edits and resource operations returned via the\n`CodeAction#edit` property by for example presenting\nthe workspace edit in the user interface and asking\nfor confirmation. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionClientCapabilities.honorsChangeAnnotations?\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionClientCapabilities</span>.<span class=\"name\">honorsChangeAnnotations?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionClientCapabilities\">Lean.Lsp.CodeActionClientCapabilities</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L159-L159","name":"Lean.Lsp.CodeActionClientCapabilities.dataSupport?","line":159,"kind":"def","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionClientCapabilities.dataSupport?","doc":"Weather code action supports the `data` property which is preserved between a `textDocument/codeAction` and a `codeAction/resolve` request. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionClientCapabilities.dataSupport?\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionClientCapabilities</span>.<span class=\"name\">dataSupport?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionClientCapabilities\">Lean.Lsp.CodeActionClientCapabilities</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L157-L157","name":"Lean.Lsp.CodeActionClientCapabilities.disabledSupport?","line":157,"kind":"def","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionClientCapabilities.disabledSupport?","doc":"Whether the code action supports the `disabled` property. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionClientCapabilities.disabledSupport?\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionClientCapabilities</span>.<span class=\"name\">disabledSupport?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionClientCapabilities\">Lean.Lsp.CodeActionClientCapabilities</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L155-L155","name":"Lean.Lsp.CodeActionClientCapabilities.isPreferredSupport?","line":155,"kind":"def","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionClientCapabilities.isPreferredSupport?","doc":"Whether the code action supports the `isPreferred` property. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionClientCapabilities.isPreferredSupport?\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionClientCapabilities</span>.<span class=\"name\">isPreferredSupport?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionClientCapabilities\">Lean.Lsp.CodeActionClientCapabilities</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L153-L153","name":"Lean.Lsp.CodeActionClientCapabilities.dynamicRegistration?","line":153,"kind":"def","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionClientCapabilities.dynamicRegistration?","doc":"Whether we can [register capabilities dynamically](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#client_registerCapability). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionClientCapabilities.dynamicRegistration?\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionClientCapabilities</span>.<span class=\"name\">dynamicRegistration?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionClientCapabilities\">Lean.Lsp.CodeActionClientCapabilities</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L151-L151","name":"Lean.Lsp.CodeActionClientCapabilities.mk","line":151,"kind":"ctor","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionClientCapabilities.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionClientCapabilities.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionClientCapabilities</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(dynamicRegistration? isPreferredSupport? disabledSupport? dataSupport? honorsChangeAnnotations? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(codeActionLiteralSupport? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionLiteralSupport\">Lean.Lsp.CodeActionLiteralSupport</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(resolveSupport? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.ResolveSupport\">Lean.Lsp.ResolveSupport</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionClientCapabilities\">Lean.Lsp.CodeActionClientCapabilities</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L150-L170","name":"Lean.Lsp.CodeActionClientCapabilities","line":150,"kind":"structure","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionClientCapabilities","doc":"[Reference](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#codeActionClientCapabilities) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionClientCapabilities\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionClientCapabilities</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L148-L148","name":"Lean.Lsp.instToJsonCodeActionLiteralSupport","line":148,"kind":"instance","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instToJsonCodeActionLiteralSupport","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instToJsonCodeActionLiteralSupport\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instToJsonCodeActionLiteralSupport</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">Lean.ToJson</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionLiteralSupport\">Lean.Lsp.CodeActionLiteralSupport</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L148-L148","name":"Lean.Lsp.instFromJsonCodeActionLiteralSupport","line":148,"kind":"instance","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instFromJsonCodeActionLiteralSupport","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instFromJsonCodeActionLiteralSupport\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instFromJsonCodeActionLiteralSupport</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">Lean.FromJson</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionLiteralSupport\">Lean.Lsp.CodeActionLiteralSupport</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L147-L147","name":"Lean.Lsp.CodeActionLiteralSupport.codeActionKind","line":147,"kind":"def","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionLiteralSupport.codeActionKind","doc":"The code action kind is supported with the following value set. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionLiteralSupport.codeActionKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionLiteralSupport</span>.<span class=\"name\">codeActionKind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionLiteralSupport\">Lean.Lsp.CodeActionLiteralSupport</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionLiteralSupportValueSet\">Lean.Lsp.CodeActionLiteralSupportValueSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L145-L145","name":"Lean.Lsp.CodeActionLiteralSupport.mk","line":145,"kind":"ctor","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionLiteralSupport.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionLiteralSupport.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionLiteralSupport</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(codeActionKind : <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionLiteralSupportValueSet\">Lean.Lsp.CodeActionLiteralSupportValueSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionLiteralSupport\">Lean.Lsp.CodeActionLiteralSupport</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L145-L148","name":"Lean.Lsp.CodeActionLiteralSupport","line":145,"kind":"structure","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionLiteralSupport","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionLiteralSupport\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionLiteralSupport</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L143-L143","name":"Lean.Lsp.instToJsonCodeActionLiteralSupportValueSet","line":143,"kind":"instance","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instToJsonCodeActionLiteralSupportValueSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instToJsonCodeActionLiteralSupportValueSet\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instToJsonCodeActionLiteralSupportValueSet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">Lean.ToJson</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionLiteralSupportValueSet\">Lean.Lsp.CodeActionLiteralSupportValueSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L143-L143","name":"Lean.Lsp.instFromJsonCodeActionLiteralSupportValueSet","line":143,"kind":"instance","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instFromJsonCodeActionLiteralSupportValueSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instFromJsonCodeActionLiteralSupportValueSet\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instFromJsonCodeActionLiteralSupportValueSet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">Lean.FromJson</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionLiteralSupportValueSet\">Lean.Lsp.CodeActionLiteralSupportValueSet</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L142-L142","name":"Lean.Lsp.CodeActionLiteralSupportValueSet.valueSet","line":142,"kind":"def","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionLiteralSupportValueSet.valueSet","doc":"The code action kind values the client supports. When this\nproperty exists the client also guarantees that it will\nhandle values outside its set gracefully and falls back\nto a default value when unknown.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionLiteralSupportValueSet.valueSet\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionLiteralSupportValueSet</span>.<span class=\"name\">valueSet</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionLiteralSupportValueSet\">Lean.Lsp.CodeActionLiteralSupportValueSet</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionKind\">Lean.Lsp.CodeActionKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L136-L136","name":"Lean.Lsp.CodeActionLiteralSupportValueSet.mk","line":136,"kind":"ctor","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionLiteralSupportValueSet.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionLiteralSupportValueSet.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionLiteralSupportValueSet</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(valueSet : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionKind\">Lean.Lsp.CodeActionKind</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionLiteralSupportValueSet\">Lean.Lsp.CodeActionLiteralSupportValueSet</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L136-L143","name":"Lean.Lsp.CodeActionLiteralSupportValueSet","line":136,"kind":"structure","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionLiteralSupportValueSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionLiteralSupportValueSet\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionLiteralSupportValueSet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L134-L134","name":"Lean.Lsp.instToJsonResolveSupport","line":134,"kind":"instance","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instToJsonResolveSupport","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instToJsonResolveSupport\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instToJsonResolveSupport</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">Lean.ToJson</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.ResolveSupport\">Lean.Lsp.ResolveSupport</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L134-L134","name":"Lean.Lsp.instFromJsonResolveSupport","line":134,"kind":"instance","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instFromJsonResolveSupport","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instFromJsonResolveSupport\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instFromJsonResolveSupport</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">Lean.FromJson</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.ResolveSupport\">Lean.Lsp.ResolveSupport</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L133-L133","name":"Lean.Lsp.ResolveSupport.properties","line":133,"kind":"def","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.ResolveSupport.properties","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.ResolveSupport.properties\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">ResolveSupport</span>.<span class=\"name\">properties</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.ResolveSupport\">Lean.Lsp.ResolveSupport</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L132-L132","name":"Lean.Lsp.ResolveSupport.mk","line":132,"kind":"ctor","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.ResolveSupport.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.ResolveSupport.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">ResolveSupport</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(properties : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.ResolveSupport\">Lean.Lsp.ResolveSupport</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L132-L134","name":"Lean.Lsp.ResolveSupport","line":132,"kind":"structure","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.ResolveSupport","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.ResolveSupport\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">ResolveSupport</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L130-L130","name":"Lean.Lsp.instFromJsonCodeAction","line":130,"kind":"instance","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instFromJsonCodeAction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instFromJsonCodeAction\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instFromJsonCodeAction</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">Lean.FromJson</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction\">Lean.Lsp.CodeAction</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L130-L130","name":"Lean.Lsp.instToJsonCodeAction","line":130,"kind":"instance","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instToJsonCodeAction","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instToJsonCodeAction\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instToJsonCodeAction</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">Lean.ToJson</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction\">Lean.Lsp.CodeAction</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L129-L129","name":"Lean.Lsp.CodeAction.data?","line":129,"kind":"def","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction.data?","doc":"A data entry field that is preserved on a code action between a `textDocument/codeAction` and a `codeAction/resolve` request.\nIn particular, for Lean-created commands we expect `data` to have a `uri : DocumentUri` field so that `FileSource` can be implemented.\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction.data?\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeAction</span>.<span class=\"name\">data?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction\">Lean.Lsp.CodeAction</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L125-L125","name":"Lean.Lsp.CodeAction.command?","line":125,"kind":"def","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction.command?","doc":"A command this code action executes.\n\nIf a code action provides an edit and a command, first the edit is executed and then the command. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction.command?\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeAction</span>.<span class=\"name\">command?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction\">Lean.Lsp.CodeAction</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Command\">Lean.Lsp.Command</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L121-L121","name":"Lean.Lsp.CodeAction.edit?","line":121,"kind":"def","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction.edit?","doc":"The workspace edit this code action performs. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction.edit?\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeAction</span>.<span class=\"name\">edit?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction\">Lean.Lsp.CodeAction</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.WorkspaceEdit\">Lean.Lsp.WorkspaceEdit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L119-L119","name":"Lean.Lsp.CodeAction.disabled?","line":119,"kind":"def","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction.disabled?","doc":"Marks that the code action cannot currently be applied. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction.disabled?\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeAction</span>.<span class=\"name\">disabled?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction\">Lean.Lsp.CodeAction</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionDisabled\">Lean.Lsp.CodeActionDisabled</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L117-L117","name":"Lean.Lsp.CodeAction.isPreferred?","line":117,"kind":"def","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction.isPreferred?","doc":"Marks this as a preferred action. Preferred actions are used by the `auto fix` command and can be targeted by keybindings. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction.isPreferred?\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeAction</span>.<span class=\"name\">isPreferred?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction\">Lean.Lsp.CodeAction</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L115-L115","name":"Lean.Lsp.CodeAction.diagnostics?","line":115,"kind":"def","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction.diagnostics?","doc":"The diagnostics that this code action resolves. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction.diagnostics?\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeAction</span>.<span class=\"name\">diagnostics?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction\">Lean.Lsp.CodeAction</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.Diagnostic\">Lean.Lsp.Diagnostic</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L113-L113","name":"Lean.Lsp.CodeAction.kind?","line":113,"kind":"def","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction.kind?","doc":"The kind of the code action. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction.kind?\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeAction</span>.<span class=\"name\">kind?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction\">Lean.Lsp.CodeAction</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionKind\">Lean.Lsp.CodeActionKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L111-L111","name":"Lean.Lsp.CodeAction.title","line":111,"kind":"def","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction.title","doc":"A short, human-readable, title for this code action. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction.title\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeAction</span>.<span class=\"name\">title</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction\">Lean.Lsp.CodeAction</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L109-L109","name":"Lean.Lsp.CodeAction.mk","line":109,"kind":"ctor","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeAction</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toWorkDoneProgressParams : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.WorkDoneProgressParams\">Lean.Lsp.WorkDoneProgressParams</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(toPartialResultParams : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.PartialResultParams\">Lean.Lsp.PartialResultParams</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(title : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(kind? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionKind\">Lean.Lsp.CodeActionKind</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(diagnostics? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.Diagnostic\">Lean.Lsp.Diagnostic</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(isPreferred? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(disabled? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionDisabled\">Lean.Lsp.CodeActionDisabled</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(edit? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.WorkspaceEdit\">Lean.Lsp.WorkspaceEdit</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(command? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Command\">Lean.Lsp.Command</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(data? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction\">Lean.Lsp.CodeAction</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L102-L130","name":"Lean.Lsp.CodeAction","line":102,"kind":"structure","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction","doc":"A code action represents a change that can be performed in code, e.g. to fix a problem or to refactor code.\n\nA CodeAction should set either `edit` and/or a `command`.\nIf both are supplied, the `edit` is applied first, then the `command` is executed.\nIf none are supplied, the client makes a `codeAction/resolve` JSON-RPC request to compute the edit.\n\n[reference](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#codeAction) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeAction\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeAction</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.WorkDoneProgressParams\">Lean.Lsp.WorkDoneProgressParams</a>, <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.PartialResultParams\">Lean.Lsp.PartialResultParams</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L100-L100","name":"Lean.Lsp.instFromJsonCodeActionOptions","line":100,"kind":"instance","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instFromJsonCodeActionOptions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instFromJsonCodeActionOptions\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instFromJsonCodeActionOptions</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">Lean.FromJson</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionOptions\">Lean.Lsp.CodeActionOptions</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L100-L100","name":"Lean.Lsp.instToJsonCodeActionOptions","line":100,"kind":"instance","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instToJsonCodeActionOptions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instToJsonCodeActionOptions\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instToJsonCodeActionOptions</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">Lean.ToJson</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionOptions\">Lean.Lsp.CodeActionOptions</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L99-L99","name":"Lean.Lsp.CodeActionOptions.resolveProvider?","line":99,"kind":"def","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionOptions.resolveProvider?","doc":"The server provides support to resolve additional information for a code action. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionOptions.resolveProvider?\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionOptions</span>.<span class=\"name\">resolveProvider?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionOptions\">Lean.Lsp.CodeActionOptions</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L97-L97","name":"Lean.Lsp.CodeActionOptions.codeActionKinds?","line":97,"kind":"def","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionOptions.codeActionKinds?","doc":"CodeActionKinds that this server may return.\n\nThe list of kinds may be generic, such as `\"refactor\"`, or the server may list out every specific kind they provide. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionOptions.codeActionKinds?\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionOptions</span>.<span class=\"name\">codeActionKinds?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionOptions\">Lean.Lsp.CodeActionOptions</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionKind\">Lean.Lsp.CodeActionKind</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L93-L93","name":"Lean.Lsp.CodeActionOptions.mk","line":93,"kind":"ctor","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionOptions.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionOptions.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionOptions</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toWorkDoneProgressOptions : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.WorkDoneProgressOptions\">Lean.Lsp.WorkDoneProgressOptions</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(codeActionKinds? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionKind\">Lean.Lsp.CodeActionKind</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(resolveProvider? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionOptions\">Lean.Lsp.CodeActionOptions</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L92-L100","name":"Lean.Lsp.CodeActionOptions","line":92,"kind":"structure","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionOptions","doc":"Capabilities of the server for handling code actions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionOptions\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionOptions</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.WorkDoneProgressOptions\">Lean.Lsp.WorkDoneProgressOptions</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L90-L90","name":"Lean.Lsp.instToJsonCodeActionDisabled","line":90,"kind":"instance","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instToJsonCodeActionDisabled","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instToJsonCodeActionDisabled\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instToJsonCodeActionDisabled</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">Lean.ToJson</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionDisabled\">Lean.Lsp.CodeActionDisabled</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L90-L90","name":"Lean.Lsp.instFromJsonCodeActionDisabled","line":90,"kind":"instance","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instFromJsonCodeActionDisabled","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instFromJsonCodeActionDisabled\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instFromJsonCodeActionDisabled</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">Lean.FromJson</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionDisabled\">Lean.Lsp.CodeActionDisabled</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L89-L89","name":"Lean.Lsp.CodeActionDisabled.reason","line":89,"kind":"def","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionDisabled.reason","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionDisabled.reason\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionDisabled</span>.<span class=\"name\">reason</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionDisabled\">Lean.Lsp.CodeActionDisabled</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L88-L88","name":"Lean.Lsp.CodeActionDisabled.mk","line":88,"kind":"ctor","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionDisabled.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionDisabled.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionDisabled</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(reason : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionDisabled\">Lean.Lsp.CodeActionDisabled</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L87-L90","name":"Lean.Lsp.CodeActionDisabled","line":87,"kind":"structure","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionDisabled","doc":"If the code action is disabled, this type gives the reason why. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionDisabled\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionDisabled</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L85-L85","name":"Lean.Lsp.instToJsonCodeActionParams","line":85,"kind":"instance","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instToJsonCodeActionParams","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instToJsonCodeActionParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instToJsonCodeActionParams</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">Lean.ToJson</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionParams\">Lean.Lsp.CodeActionParams</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L85-L85","name":"Lean.Lsp.instFromJsonCodeActionParams","line":85,"kind":"instance","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instFromJsonCodeActionParams","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instFromJsonCodeActionParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instFromJsonCodeActionParams</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">Lean.FromJson</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionParams\">Lean.Lsp.CodeActionParams</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L84-L84","name":"Lean.Lsp.CodeActionParams.context","line":84,"kind":"def","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionParams.context","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionParams.context\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionParams</span>.<span class=\"name\">context</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionParams\">Lean.Lsp.CodeActionParams</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionContext\">Lean.Lsp.CodeActionContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L83-L83","name":"Lean.Lsp.CodeActionParams.range","line":83,"kind":"def","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionParams.range","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionParams.range\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionParams</span>.<span class=\"name\">range</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionParams\">Lean.Lsp.CodeActionParams</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Range\">Lean.Lsp.Range</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L82-L82","name":"Lean.Lsp.CodeActionParams.textDocument","line":82,"kind":"def","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionParams.textDocument","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionParams.textDocument\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionParams</span>.<span class=\"name\">textDocument</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionParams\">Lean.Lsp.CodeActionParams</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.TextDocumentIdentifier\">Lean.Lsp.TextDocumentIdentifier</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L81-L81","name":"Lean.Lsp.CodeActionParams.mk","line":81,"kind":"ctor","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionParams.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionParams.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionParams</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(toWorkDoneProgressParams : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.WorkDoneProgressParams\">Lean.Lsp.WorkDoneProgressParams</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(toPartialResultParams : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.PartialResultParams\">Lean.Lsp.PartialResultParams</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(textDocument : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.TextDocumentIdentifier\">Lean.Lsp.TextDocumentIdentifier</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(range : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Range\">Lean.Lsp.Range</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(context : <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionContext\">Lean.Lsp.CodeActionContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionParams\">Lean.Lsp.CodeActionParams</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L80-L85","name":"Lean.Lsp.CodeActionParams","line":80,"kind":"structure","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionParams","doc":"Parameters for a [CodeActionRequest](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocument_codeAction). "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionParams</span></a></span><span class=\"decl_extends\">extends</span> <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.WorkDoneProgressParams\">Lean.Lsp.WorkDoneProgressParams</a>, <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.PartialResultParams\">Lean.Lsp.PartialResultParams</a><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L78-L78","name":"Lean.Lsp.instToJsonCodeActionContext","line":78,"kind":"instance","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instToJsonCodeActionContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instToJsonCodeActionContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instToJsonCodeActionContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">Lean.ToJson</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionContext\">Lean.Lsp.CodeActionContext</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L78-L78","name":"Lean.Lsp.instFromJsonCodeActionContext","line":78,"kind":"instance","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instFromJsonCodeActionContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instFromJsonCodeActionContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instFromJsonCodeActionContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">Lean.FromJson</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionContext\">Lean.Lsp.CodeActionContext</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L77-L77","name":"Lean.Lsp.CodeActionContext.triggerKind?","line":77,"kind":"def","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionContext.triggerKind?","doc":"The reason why code actions were requested. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionContext.triggerKind?\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionContext</span>.<span class=\"name\">triggerKind?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionContext\">Lean.Lsp.CodeActionContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionTriggerKind\">Lean.Lsp.CodeActionTriggerKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L75-L75","name":"Lean.Lsp.CodeActionContext.only?","line":75,"kind":"def","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionContext.only?","doc":"Requested kind of actions to return.\n\nActions not of this kind are filtered out by the client before being\nshown. So servers can omit computing them.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionContext.only?\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionContext</span>.<span class=\"name\">only?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionContext\">Lean.Lsp.CodeActionContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionKind\">Lean.Lsp.CodeActionKind</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L69-L69","name":"Lean.Lsp.CodeActionContext.diagnostics","line":69,"kind":"def","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionContext.diagnostics","doc":"An array of diagnostics known on the client side overlapping the range\nprovided to the `textDocument/codeAction` request. They are provided so\nthat the server knows which errors are currently presented to the user\nfor the given range. There is no guarantee that these accurately reflect\nthe error state of the resource. The primary parameter\nto compute code actions is the provided range.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionContext.diagnostics\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionContext</span>.<span class=\"name\">diagnostics</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionContext\">Lean.Lsp.CodeActionContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.Diagnostic\">Lean.Lsp.Diagnostic</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L60-L60","name":"Lean.Lsp.CodeActionContext.mk","line":60,"kind":"ctor","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionContext.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionContext.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionContext</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(diagnostics : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/Diagnostics.html#Lean.Lsp.Diagnostic\">Lean.Lsp.Diagnostic</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(only? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionKind\">Lean.Lsp.CodeActionKind</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(triggerKind? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionTriggerKind\">Lean.Lsp.CodeActionTriggerKind</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionContext\">Lean.Lsp.CodeActionContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L57-L78","name":"Lean.Lsp.CodeActionContext","line":57,"kind":"structure","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionContext","doc":"Contains additional diagnostic information about the context in which a code action is run.\n\n[reference](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#codeActionContext) "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionContext\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L49-L55","name":"Lean.Lsp.instFromJsonCodeActionTriggerKind","line":49,"kind":"instance","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instFromJsonCodeActionTriggerKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instFromJsonCodeActionTriggerKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instFromJsonCodeActionTriggerKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">Lean.FromJson</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionTriggerKind\">Lean.Lsp.CodeActionTriggerKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L44-L47","name":"Lean.Lsp.instToJsonCodeActionTriggerKind","line":44,"kind":"instance","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instToJsonCodeActionTriggerKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.instToJsonCodeActionTriggerKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">instToJsonCodeActionTriggerKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">Lean.ToJson</a> <a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionTriggerKind\">Lean.Lsp.CodeActionTriggerKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L38-L42","name":"Lean.Lsp.CodeActionTriggerKind.automatic","line":38,"kind":"ctor","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionTriggerKind.automatic","doc":"Code actions were requested automatically.\n\nThis typically happens when current selection in a file changes, but can\nalso be triggered when file content changes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionTriggerKind.automatic\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionTriggerKind</span>.<span class=\"name\">automatic</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionTriggerKind\">Lean.Lsp.CodeActionTriggerKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L36-L37","name":"Lean.Lsp.CodeActionTriggerKind.invoked","line":36,"kind":"ctor","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionTriggerKind.invoked","doc":"Code actions were explicitly requested by the user or by an extension. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionTriggerKind.invoked\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionTriggerKind</span>.<span class=\"name\">invoked</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionTriggerKind\">Lean.Lsp.CodeActionTriggerKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L35-L42","name":"Lean.Lsp.CodeActionTriggerKind","line":35,"kind":"inductive","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionTriggerKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionTriggerKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionTriggerKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Data/Lsp/CodeActions.lean#L16-L33","name":"Lean.Lsp.CodeActionKind","line":16,"kind":"def","docLink":"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionKind","doc":"The kind of a code action.\n\nKinds are a hierarchical list of identifiers separated by `.`,\ne.g. `\"refactor.extract.function\"`.\n\nThe set of kinds is open and client needs to announce the kinds it supports\nto the server during initialization.\nYou can make your own code action kinds, the ones supported by LSP are:\n- `quickfix`\n- `refactor`\n  - `refactor.extract`\n  - `refactor.inline`\n  - `refactor.rewrite`\n- `source` Source code actions apply to the entire file. Eg fixing all issues or organising imports.\n  - `source.organizeImports`\n  - `source.fixAll`\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Data/Lsp/CodeActions.html#Lean.Lsp.CodeActionKind\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">CodeActionKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}