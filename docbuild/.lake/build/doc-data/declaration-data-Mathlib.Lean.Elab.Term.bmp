{"name":"Mathlib.Lean.Elab.Term","instances":[],"imports":["Init","Mathlib.Init","Lean.Elab.SyntheticMVars"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Lean/Elab/Term.lean#L15-L24","name":"Lean.Elab.Term.elabPattern","line":15,"kind":"def","docLink":"./Mathlib/Lean/Elab/Term.html#Lean.Elab.Term.elabPattern","doc":"Fully elaborates the term `patt`, allowing typeclass inference failure,\nbut while setting `errToSorry` to false.\nTypeclass failures result in plain metavariables.\nInstantiates all assigned metavariables. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Lean/Elab/Term.html#Lean.Elab.Term.elabPattern\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">elabPattern</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(patt : <a href=\"./Init/Meta.html#Lean.Syntax.Term\">Lean.Term</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expectedType? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"}]}