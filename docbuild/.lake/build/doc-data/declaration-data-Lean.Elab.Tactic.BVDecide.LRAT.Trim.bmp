{"name":"Lean.Elab.Tactic.BVDecide.LRAT.Trim","instances":[],"imports":["Lean.Data.RBMap","Std.Tactic.BVDecide.LRAT.Actions","Std.Data.HashMap"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/LRAT/Trim.lean#L206-L211","name":"Lean.Elab.Tactic.BVDecide.LRAT.trim","line":206,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim","doc":"Trim the LRAT `proof` by removing all steps that are not used in reaching the empty clause\nconclusion.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">trim</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(proof : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Std/Tactic/BVDecide/LRAT/Actions.html#Std.Tactic.BVDecide.LRAT.IntAction\">Std.Tactic.BVDecide.LRAT.IntAction</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Std/Tactic/BVDecide/LRAT/Actions.html#Std.Tactic.BVDecide.LRAT.IntAction\">Std.Tactic.BVDecide.LRAT.IntAction</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/LRAT/Trim.lean#L200-L202","name":"Lean.Elab.Tactic.BVDecide.LRAT.trim.go","line":200,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">trim</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M\">Lean.Elab.Tactic.BVDecide.LRAT.trim.M</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Std/Tactic/BVDecide/LRAT/Actions.html#Std.Tactic.BVDecide.LRAT.IntAction\">Std.Tactic.BVDecide.LRAT.IntAction</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/LRAT/Trim.lean#L182-L198","name":"Lean.Elab.Tactic.BVDecide.LRAT.trim.mapping","line":182,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.mapping","doc":"Map the set of used proof steps to a new LRAT proof that has no holes in the sequence of proof\nidentifiers.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.mapping\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">trim</span>.<span class=\"name\">mapping</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M\">Lean.Elab.Tactic.BVDecide.LRAT.trim.M</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Std/Tactic/BVDecide/LRAT/Actions.html#Std.Tactic.BVDecide.LRAT.IntAction\">Std.Tactic.BVDecide.LRAT.IntAction</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/LRAT/Trim.lean#L155-L180","name":"Lean.Elab.Tactic.BVDecide.LRAT.trim.useAnalysis.go","line":155,"kind":"opaque","docLink":"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.useAnalysis.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.useAnalysis.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">trim</span>.<span class=\"name\">useAnalysis</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(workList : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M\">Lean.Elab.Tactic.BVDecide.LRAT.trim.M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/LRAT/Trim.lean#L147-L180","name":"Lean.Elab.Tactic.BVDecide.LRAT.trim.useAnalysis","line":147,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.useAnalysis","doc":"Perform a use-def analysis of LRAT proof steps, starting at the empty clause and working its way\nup with DFS.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.useAnalysis\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">trim</span>.<span class=\"name\">useAnalysis</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M\">Lean.Elab.Tactic.BVDecide.LRAT.trim.M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/LRAT/Trim.lean#L141-L143","name":"Lean.Elab.Tactic.BVDecide.LRAT.trim.M.mapStep.mapIdent","line":141,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M.mapStep.mapIdent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M.mapStep.mapIdent\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">trim</span>.<span class=\"name\">M</span>.<span class=\"name\">mapStep</span>.<span class=\"name\">mapIdent</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ident : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M\">Lean.Elab.Tactic.BVDecide.LRAT.trim.M</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/LRAT/Trim.lean#L118-L143","name":"Lean.Elab.Tactic.BVDecide.LRAT.trim.M.mapStep","line":118,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M.mapStep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M.mapStep\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">trim</span>.<span class=\"name\">M</span>.<span class=\"name\">mapStep</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(step : <a href=\"./Std/Tactic/BVDecide/LRAT/Actions.html#Std.Tactic.BVDecide.LRAT.IntAction\">Std.Tactic.BVDecide.LRAT.IntAction</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M\">Lean.Elab.Tactic.BVDecide.LRAT.trim.M</a> <a href=\"./Std/Tactic/BVDecide/LRAT/Actions.html#Std.Tactic.BVDecide.LRAT.IntAction\">Std.Tactic.BVDecide.LRAT.IntAction</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/LRAT/Trim.lean#L115-L116","name":"Lean.Elab.Tactic.BVDecide.LRAT.trim.M.registerIdMap","line":115,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M.registerIdMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M.registerIdMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">trim</span>.<span class=\"name\">M</span>.<span class=\"name\">registerIdMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(oldId newId : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M\">Lean.Elab.Tactic.BVDecide.LRAT.trim.M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/LRAT/Trim.lean#L110-L113","name":"Lean.Elab.Tactic.BVDecide.LRAT.trim.M.getUsedSet","line":110,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M.getUsedSet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M.getUsedSet\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">trim</span>.<span class=\"name\">M</span>.<span class=\"name\">getUsedSet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M\">Lean.Elab.Tactic.BVDecide.LRAT.trim.M</a> <span class=\"fn\">(<a href=\"./Lean/Data/RBMap.html#Lean.RBMap\">Lean.RBMap</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a> <span class=\"fn\">compare</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/LRAT/Trim.lean#L103-L108","name":"Lean.Elab.Tactic.BVDecide.LRAT.trim.M.markUsed","line":103,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M.markUsed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M.markUsed\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">trim</span>.<span class=\"name\">M</span>.<span class=\"name\">markUsed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(id : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M\">Lean.Elab.Tactic.BVDecide.LRAT.trim.M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/LRAT/Trim.lean#L98-L101","name":"Lean.Elab.Tactic.BVDecide.LRAT.trim.M.isUsed","line":98,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M.isUsed","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M.isUsed\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">trim</span>.<span class=\"name\">M</span>.<span class=\"name\">isUsed</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(id : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M\">Lean.Elab.Tactic.BVDecide.LRAT.trim.M</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/LRAT/Trim.lean#L93-L96","name":"Lean.Elab.Tactic.BVDecide.LRAT.trim.M.getProofStep","line":93,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M.getProofStep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M.getProofStep\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">trim</span>.<span class=\"name\">M</span>.<span class=\"name\">getProofStep</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(id : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M\">Lean.Elab.Tactic.BVDecide.LRAT.trim.M</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Std/Tactic/BVDecide/LRAT/Actions.html#Std.Tactic.BVDecide.LRAT.IntAction\">Std.Tactic.BVDecide.LRAT.IntAction</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/LRAT/Trim.lean#L88-L91","name":"Lean.Elab.Tactic.BVDecide.LRAT.trim.M.getEmptyId","line":88,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M.getEmptyId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M.getEmptyId\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">trim</span>.<span class=\"name\">M</span>.<span class=\"name\">getEmptyId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M\">Lean.Elab.Tactic.BVDecide.LRAT.trim.M</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/LRAT/Trim.lean#L83-L86","name":"Lean.Elab.Tactic.BVDecide.LRAT.trim.M.getInitialId","line":83,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M.getInitialId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M.getInitialId\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">trim</span>.<span class=\"name\">M</span>.<span class=\"name\">getInitialId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M\">Lean.Elab.Tactic.BVDecide.LRAT.trim.M</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/LRAT/Trim.lean#L73-L81","name":"Lean.Elab.Tactic.BVDecide.LRAT.trim.M.run","line":73,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M.run","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M.run\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">trim</span>.<span class=\"name\">M</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(proof : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Std/Tactic/BVDecide/LRAT/Actions.html#Std.Tactic.BVDecide.LRAT.IntAction\">Std.Tactic.BVDecide.LRAT.IntAction</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M\">Lean.Elab.Tactic.BVDecide.LRAT.trim.M</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/LRAT/Trim.lean#L65-L71","name":"Lean.Elab.Tactic.BVDecide.LRAT.trim.M.findEmptyId","line":65,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M.findEmptyId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M.findEmptyId\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">trim</span>.<span class=\"name\">M</span>.<span class=\"name\">findEmptyId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(proof : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Std/Tactic/BVDecide/LRAT/Actions.html#Std.Tactic.BVDecide.LRAT.IntAction\">Std.Tactic.BVDecide.LRAT.IntAction</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/LRAT/Trim.lean#L57-L63","name":"Lean.Elab.Tactic.BVDecide.LRAT.trim.M.findInitialId","line":57,"kind":"opaque","docLink":"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M.findInitialId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M.findInitialId\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">trim</span>.<span class=\"name\">M</span>.<span class=\"name\">findInitialId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(proof : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Std/Tactic/BVDecide/LRAT/Actions.html#Std.Tactic.BVDecide.LRAT.IntAction\">Std.Tactic.BVDecide.LRAT.IntAction</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(curr : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Except\">Except</a> <a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/LRAT/Trim.lean#L53-L53","name":"Lean.Elab.Tactic.BVDecide.LRAT.trim.M","line":53,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.M\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">trim</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/LRAT/Trim.lean#L51-L51","name":"Lean.Elab.Tactic.BVDecide.LRAT.trim.State.mapped","line":51,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.State.mapped","doc":"A mapping from old proof step ids to new ones. Used such that the proof remains a sequence without\ngaps.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.State.mapped\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">trim</span>.<span class=\"name\">State</span>.<span class=\"name\">mapped</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.State\">Lean.Elab.Tactic.BVDecide.LRAT.trim.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/LRAT/Trim.lean#L46-L46","name":"Lean.Elab.Tactic.BVDecide.LRAT.trim.State.used","line":46,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.State.used","doc":"The set of used proof step ids.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.State.used\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">trim</span>.<span class=\"name\">State</span>.<span class=\"name\">used</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.State\">Lean.Elab.Tactic.BVDecide.LRAT.trim.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/RBMap.html#Lean.RBMap\">Lean.RBMap</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a> <span class=\"fn\">compare</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/LRAT/Trim.lean#L42-L42","name":"Lean.Elab.Tactic.BVDecide.LRAT.trim.State.mk","line":42,"kind":"ctor","docLink":"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">trim</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(used : <span class=\"fn\"><a href=\"./Lean/Data/RBMap.html#Lean.RBMap\">Lean.RBMap</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a> <span class=\"fn\">compare</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mapped : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.State\">Lean.Elab.Tactic.BVDecide.LRAT.trim.State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/LRAT/Trim.lean#L42-L51","name":"Lean.Elab.Tactic.BVDecide.LRAT.trim.State","line":42,"kind":"structure","docLink":"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.State","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">trim</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/LRAT/Trim.lean#L40-L40","name":"Lean.Elab.Tactic.BVDecide.LRAT.trim.Context.addEmptyId","line":40,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.Context.addEmptyId","doc":"The id of the empty proof step.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.Context.addEmptyId\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">trim</span>.<span class=\"name\">Context</span>.<span class=\"name\">addEmptyId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.Context\">Lean.Elab.Tactic.BVDecide.LRAT.trim.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/LRAT/Trim.lean#L36-L36","name":"Lean.Elab.Tactic.BVDecide.LRAT.trim.Context.initialId","line":36,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.Context.initialId","doc":"The id of the first proof step.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.Context.initialId\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">trim</span>.<span class=\"name\">Context</span>.<span class=\"name\">initialId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.Context\">Lean.Elab.Tactic.BVDecide.LRAT.trim.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/LRAT/Trim.lean#L32-L32","name":"Lean.Elab.Tactic.BVDecide.LRAT.trim.Context.proof","line":32,"kind":"def","docLink":"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.Context.proof","doc":"The proof as a map from proof step ids to their actions.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.Context.proof\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">trim</span>.<span class=\"name\">Context</span>.<span class=\"name\">proof</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.Context\">Lean.Elab.Tactic.BVDecide.LRAT.trim.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Std/Tactic/BVDecide/LRAT/Actions.html#Std.Tactic.BVDecide.LRAT.IntAction\">Std.Tactic.BVDecide.LRAT.IntAction</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/LRAT/Trim.lean#L28-L28","name":"Lean.Elab.Tactic.BVDecide.LRAT.trim.Context.mk","line":28,"kind":"ctor","docLink":"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.Context.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">trim</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(proof : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Std/Tactic/BVDecide/LRAT/Actions.html#Std.Tactic.BVDecide.LRAT.IntAction\">Std.Tactic.BVDecide.LRAT.IntAction</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(initialId addEmptyId : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.Context\">Lean.Elab.Tactic.BVDecide.LRAT.trim.Context</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Tactic/BVDecide/LRAT/Trim.lean#L25-L40","name":"Lean.Elab.Tactic.BVDecide.LRAT.trim.Context","line":25,"kind":"structure","docLink":"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.Context","doc":"The context used for trimming LRAT proofs.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Tactic/BVDecide/LRAT/Trim.html#Lean.Elab.Tactic.BVDecide.LRAT.trim.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">trim</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}