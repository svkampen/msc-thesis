{"name":"Mathlib.Analysis.SpecialFunctions.NonIntegrable","instances":[],"imports":["Init","Mathlib.Analysis.SpecialFunctions.Log.Deriv","Mathlib.MeasureTheory.Integral.FundThmCalculus"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/SpecialFunctions/NonIntegrable.lean#L214-L217","name":"not_IntegrableOn_Ioi_inv","line":214,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/NonIntegrable.html#not_IntegrableOn_Ioi_inv","doc":"The function `fun x ↦ x⁻¹` is not integrable on any interval `(a, +∞)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/NonIntegrable.html#not_IntegrableOn_Ioi_inv\"><span class=\"name\">not_IntegrableOn_Ioi_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntegrableOn.html#MeasureTheory.IntegrableOn\">MeasureTheory.IntegrableOn</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Operations.html#Inv.inv\">⁻¹</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ioi\">Set.Ioi</a> <span class=\"fn\">a</span>)</span> <span class=\"fn\">MeasureTheory.volume</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/SpecialFunctions/NonIntegrable.lean#L203-L212","name":"not_IntegrableOn_Ici_inv","line":203,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/NonIntegrable.html#not_IntegrableOn_Ici_inv","doc":"The function `fun x ↦ x⁻¹` is not integrable on any interval `[a, +∞)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/NonIntegrable.html#not_IntegrableOn_Ici_inv\"><span class=\"name\">not_IntegrableOn_Ici_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntegrableOn.html#MeasureTheory.IntegrableOn\">MeasureTheory.IntegrableOn</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Operations.html#Inv.inv\">⁻¹</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Order/Interval/Set/Defs.html#Set.Ici\">Set.Ici</a> <span class=\"fn\">a</span>)</span> <span class=\"fn\">MeasureTheory.volume</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/SpecialFunctions/NonIntegrable.lean#L196-L201","name":"intervalIntegrable_inv_iff","line":196,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/NonIntegrable.html#intervalIntegrable_inv_iff","doc":"The function `fun x => x⁻¹` is integrable on `a..b` if and only if\n`a = b` or `0 ∉ [a, b]`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/NonIntegrable.html#intervalIntegrable_inv_iff\"><span class=\"name\">intervalIntegrable_inv_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntervalIntegral.html#IntervalIntegrable\">IntervalIntegrable</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">x</span><a href=\"./Mathlib/Algebra/Group/Operations.html#Inv.inv\">⁻¹</a></span>)</span> <span class=\"fn\">MeasureTheory.volume</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">0</span> ∉ <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/UnorderedInterval.html#Set.uIcc\">Set.uIcc</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/SpecialFunctions/NonIntegrable.lean#L183-L194","name":"intervalIntegrable_sub_inv_iff","line":183,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/NonIntegrable.html#intervalIntegrable_sub_inv_iff","doc":"The function `fun x => (x - c)⁻¹` is integrable on `a..b` if and only if\n`a = b` or `c ∉ [a, b]`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/NonIntegrable.html#intervalIntegrable_sub_inv_iff\"><span class=\"name\">intervalIntegrable_sub_inv_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b c : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntervalIntegral.html#IntervalIntegrable\">IntervalIntegrable</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">c</span>)</span><a href=\"./Mathlib/Algebra/Group/Operations.html#Inv.inv\">⁻¹</a></span>)</span> <span class=\"fn\">MeasureTheory.volume</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Or\">∨</a> <span class=\"fn\"><span class=\"fn\">c</span> ∉ <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/UnorderedInterval.html#Set.uIcc\">Set.uIcc</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/SpecialFunctions/NonIntegrable.lean#L167-L181","name":"not_intervalIntegrable_of_sub_inv_isBigO_punctured","line":167,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/NonIntegrable.html#not_intervalIntegrable_of_sub_inv_isBigO_punctured","doc":"If `f` grows in the punctured neighborhood of `c : ℝ` at least as fast as `1 / (x - c)`,\nthen it is not interval integrable on any nontrivial interval `a..b`, `c ∈ [a, b]`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/NonIntegrable.html#not_intervalIntegrable_of_sub_inv_isBigO_punctured\"><span class=\"name\">not_intervalIntegrable_of_sub_inv_isBigO_punctured</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b c : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">c</span>)</span><a href=\"./Mathlib/Algebra/Group/Operations.html#Inv.inv\">⁻¹</a></span>)</span> <a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">=O[</a><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">c</span> <span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">c</span>}</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span></span><a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">]</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hne : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/UnorderedInterval.html#Set.uIcc\">Set.uIcc</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntervalIntegral.html#IntervalIntegrable\">IntervalIntegrable</a> <span class=\"fn\">f</span> <span class=\"fn\">MeasureTheory.volume</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/SpecialFunctions/NonIntegrable.lean#L155-L165","name":"not_intervalIntegrable_of_tendsto_norm_atTop_of_deriv_isBigO_punctured","line":155,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/NonIntegrable.html#not_intervalIntegrable_of_tendsto_norm_atTop_of_deriv_isBigO_punctured","doc":"If `f` is differentiable in a punctured neighborhood of `c`, `‖f x‖ → ∞` as `x → c` (more\nformally, along the filter `𝓝[≠] c`), and `f' = O(g)` along `𝓝[≠] c`, where `f'` is the derivative\nof `f`, then `g` is not interval integrable on any nontrivial interval `a..b` such that\n`c ∈ [a, b]`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/NonIntegrable.html#not_intervalIntegrable_of_tendsto_norm_atTop_of_deriv_isBigO_punctured\"><span class=\"name\">not_intervalIntegrable_of_tendsto_norm_atTop_of_deriv_isBigO_punctured</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b c : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h_deriv : <span class=\"fn\">∀ᶠ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) in <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">c</span> <span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">c</span>}</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span></span>, <span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/FDeriv/Basic.html#DifferentiableAt\">DifferentiableAt</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_infty : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">c</span> <span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">c</span>}</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span>)</span> <span class=\"fn\">Filter.atTop</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/Deriv/Basic.html#deriv\">deriv</a> <span class=\"fn\">f</span></span> <a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">=O[</a><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">c</span> <span class=\"fn\"><span class=\"fn\">{<span class=\"fn\">c</span>}</span><a href=\"./Mathlib/Order/Notation.html#HasCompl.compl\">ᶜ</a></span></span><a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">]</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hne : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/UnorderedInterval.html#Set.uIcc\">Set.uIcc</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntervalIntegral.html#IntervalIntegrable\">IntervalIntegrable</a> <span class=\"fn\">g</span> <span class=\"fn\">MeasureTheory.volume</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/SpecialFunctions/NonIntegrable.lean#L132-L153","name":"not_intervalIntegrable_of_tendsto_norm_atTop_of_deriv_isBigO_within_diff_singleton","line":132,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/NonIntegrable.html#not_intervalIntegrable_of_tendsto_norm_atTop_of_deriv_isBigO_within_diff_singleton","doc":"If `a ≠ b`, `c ∈ [a, b]`, `f` is differentiable in the neighborhood of `c` within\n`[a, b] \\ {c}`, `‖f x‖ → ∞` as `x → c` within `[a, b] \\ {c}`, and `f' = O(g)` along\n`𝓝[[a, b] \\ {c}] c`, where `f'` is the derivative of `f`, then `g` is not interval integrable on\n`a..b`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/NonIntegrable.html#not_intervalIntegrable_of_tendsto_norm_atTop_of_deriv_isBigO_within_diff_singleton\"><span class=\"name\">not_intervalIntegrable_of_tendsto_norm_atTop_of_deriv_isBigO_within_diff_singleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b c : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hne : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hc : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/UnorderedInterval.html#Set.uIcc\">Set.uIcc</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_deriv : <span class=\"fn\">∀ᶠ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) in <span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/UnorderedInterval.html#Set.uIcc\">Set.uIcc</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">{<span class=\"fn\">c</span>}</span>)</span></span>, <span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/FDeriv/Basic.html#DifferentiableAt\">DifferentiableAt</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h_infty : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/UnorderedInterval.html#Set.uIcc\">Set.uIcc</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">{<span class=\"fn\">c</span>}</span>)</span>)</span> <span class=\"fn\">Filter.atTop</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hg : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/Deriv/Basic.html#deriv\">deriv</a> <span class=\"fn\">f</span></span> <a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">=O[</a><span class=\"fn\"><a href=\"./Mathlib/Topology/Defs/Filter.html#nhdsWithin\">nhdsWithin</a> <span class=\"fn\">c</span> <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/UnorderedInterval.html#Set.uIcc\">Set.uIcc</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Core.html#SDiff.sdiff\">\\</a> <span class=\"fn\">{<span class=\"fn\">c</span>}</span>)</span></span><a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">]</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntervalIntegral.html#IntervalIntegrable\">IntervalIntegrable</a> <span class=\"fn\">g</span> <span class=\"fn\">MeasureTheory.volume</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/SpecialFunctions/NonIntegrable.lean#L121-L130","name":"not_intervalIntegrable_of_tendsto_norm_atTop_of_deriv_isBigO_filter","line":121,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/NonIntegrable.html#not_intervalIntegrable_of_tendsto_norm_atTop_of_deriv_isBigO_filter","doc":"If `f` is eventually differentiable along a nontrivial filter `l : Filter ℝ` that is generated\nby convex sets, the norm of `f` tends to infinity along `l`, and `f' = O(g)` along `l`, where `f'`\nis the derivative of `f`, then `g` is not integrable on any interval `a..b` such that\n`[a, b] ∈ l`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/NonIntegrable.html#not_intervalIntegrable_of_tendsto_norm_atTop_of_deriv_isBigO_filter\"><span class=\"name\">not_intervalIntegrable_of_tendsto_norm_atTop_of_deriv_isBigO_filter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">l</span>.NeBot</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Interval.html#Filter.TendstoIxxClass\">Filter.TendstoIxxClass</a> <span class=\"fn\">Set.Icc</span> <span class=\"fn\">l</span> <span class=\"fn\">l</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hl : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Order/Interval/Set/UnorderedInterval.html#Set.uIcc\">Set.uIcc</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">l</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hd : <span class=\"fn\">∀ᶠ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) in <span class=\"fn\">l</span>, <span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/FDeriv/Basic.html#DifferentiableAt\">DifferentiableAt</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">Filter.atTop</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hfg : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/Deriv/Basic.html#deriv\">deriv</a> <span class=\"fn\">f</span></span> <a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">=O[</a><span class=\"fn\">l</span><a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">]</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntervalIntegral.html#IntervalIntegrable\">IntervalIntegrable</a> <span class=\"fn\">g</span> <span class=\"fn\">MeasureTheory.volume</span> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/SpecialFunctions/NonIntegrable.lean#L96-L119","name":"not_integrableOn_of_tendsto_norm_atTop_of_deriv_isBigO_filter","line":96,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/NonIntegrable.html#not_integrableOn_of_tendsto_norm_atTop_of_deriv_isBigO_filter","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/NonIntegrable.html#not_integrableOn_of_tendsto_norm_atTop_of_deriv_isBigO_filter\"><span class=\"name\">not_integrableOn_of_tendsto_norm_atTop_of_deriv_isBigO_filter</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">l</span>.NeBot</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Interval.html#Filter.TendstoIxxClass\">Filter.TendstoIxxClass</a> <span class=\"fn\">Set.Icc</span> <span class=\"fn\">l</span> <span class=\"fn\">l</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hl : <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">l</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hd : <span class=\"fn\">∀ᶠ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) in <span class=\"fn\">l</span>, <span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/FDeriv/Basic.html#DifferentiableAt\">DifferentiableAt</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">Filter.atTop</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hfg : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/Deriv/Basic.html#deriv\">deriv</a> <span class=\"fn\">f</span></span> <a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">=O[</a><span class=\"fn\">l</span><a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">]</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntegrableOn.html#MeasureTheory.IntegrableOn\">MeasureTheory.IntegrableOn</a> <span class=\"fn\">g</span> <span class=\"fn\">k</span> <span class=\"fn\">MeasureTheory.volume</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Analysis/SpecialFunctions/NonIntegrable.lean#L46-L94","name":"not_integrableOn_of_tendsto_norm_atTop_of_deriv_isBigO_filter_aux","line":46,"kind":"theorem","docLink":"./Mathlib/Analysis/SpecialFunctions/NonIntegrable.html#not_integrableOn_of_tendsto_norm_atTop_of_deriv_isBigO_filter_aux","doc":"If `f` is eventually differentiable along a nontrivial filter `l : Filter ℝ` that is generated\nby convex sets, the norm of `f` tends to infinity along `l`, and `f' = O(g)` along `l`, where `f'`\nis the derivative of `f`, then `g` is not integrable on any set `k` belonging to `l`.\nAuxiliary version assuming that `E` is complete. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Analysis/SpecialFunctions/NonIntegrable.html#not_integrableOn_of_tendsto_norm_atTop_of_deriv_isBigO_filter_aux\"><span class=\"name\">not_integrableOn_of_tendsto_norm_atTop_of_deriv_isBigO_filter_aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{E : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Module/Basic.html#NormedSpace\">NormedSpace</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#NormedAddCommGroup\">NormedAddCommGroup</a> <span class=\"fn\">F</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Topology/UniformSpace/Cauchy.html#CompleteSpace\">CompleteSpace</a> <span class=\"fn\">E</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">E</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g : <span class=\"fn\"><a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> → <span class=\"fn\">F</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <span class=\"fn\"><a href=\"./Mathlib/Data/Set/Defs.html#Set\">Set</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(l : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter\">Filter</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><span class=\"fn\">l</span>.NeBot</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Interval.html#Filter.TendstoIxxClass\">Filter.TendstoIxxClass</a> <span class=\"fn\">Set.Icc</span> <span class=\"fn\">l</span> <span class=\"fn\">l</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hl : <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">l</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hd : <span class=\"fn\">∀ᶠ (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) in <span class=\"fn\">l</span>, <span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/FDeriv/Basic.html#DifferentiableAt\">DifferentiableAt</a> <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a> <span class=\"fn\">f</span> <span class=\"fn\">x</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Order/Filter/Defs.html#Filter.Tendsto\">Filter.Tendsto</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Mathlib/Data/Real/Basic.html#Real\">ℝ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">x</span></span><a href=\"./Mathlib/Analysis/Normed/Group/Basic.html#Norm.norm\">‖</a></span>)</span> <span class=\"fn\">l</span> <span class=\"fn\">Filter.atTop</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hfg : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Analysis/Calculus/Deriv/Basic.html#deriv\">deriv</a> <span class=\"fn\">f</span></span> <a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">=O[</a><span class=\"fn\">l</span><a href=\"./Mathlib/Analysis/Asymptotics/Asymptotics.html#Asymptotics.IsBigO\">]</a> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/MeasureTheory/Integral/IntegrableOn.html#MeasureTheory.IntegrableOn\">MeasureTheory.IntegrableOn</a> <span class=\"fn\">g</span> <span class=\"fn\">k</span> <span class=\"fn\">MeasureTheory.volume</span></span></span></div></div>"}]}