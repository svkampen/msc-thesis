{"name":"Lean.LocalContext","instances":[{"typeNames":["Lean.LocalDeclKind"],"name":"Lean.instInhabitedLocalDeclKind","className":"Inhabited"},{"typeNames":["Lean.LocalDeclKind"],"name":"Lean.instReprLocalDeclKind","className":"Repr"},{"typeNames":["Eq"],"name":"Lean.instDecidableEqLocalDeclKind","className":"Decidable"},{"typeNames":["Lean.LocalDeclKind"],"name":"Lean.instHashableLocalDeclKind","className":"Hashable"},{"typeNames":["Lean.LocalDecl"],"name":"Lean.instInhabitedLocalDecl","className":"Inhabited"},{"typeNames":["Lean.LocalContext"],"name":"Lean.instInhabitedLocalContext","className":"Inhabited"},{"typeNames":["Lean.LocalContext","Lean.LocalDecl"],"name":"Lean.LocalContext.instForInLocalDecl","className":"ForIn"},{"typeNames":[],"name":"Lean.instMonadLCtxOfMonadLift","className":"Lean.MonadLCtx"}],"imports":["Init.Data.Nat.Control","Lean.Data.PersistentArray","Lean.Expr","Lean.Hygiene"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L517-L520","name":"Lean.LocalContext.replaceFVarId","line":517,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.replaceFVarId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.replaceFVarId\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">replaceFVarId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L511-L515","name":"Lean.LocalDecl.replaceFVarId","line":511,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.replaceFVarId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalDecl.replaceFVarId\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDecl</span>.<span class=\"name\">replaceFVarId</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(d : <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L504-L509","name":"Lean.getLocalHyps","line":504,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.getLocalHyps","doc":"Return local hypotheses which are not \"implementation detail\", as `Expr`s. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.getLocalHyps\"><span class=\"name\">Lean</span>.<span class=\"name\">getLocalHyps</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.MonadLCtx\">Lean.MonadLCtx</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L501-L502","name":"Lean.instMonadLCtxOfMonadLift","line":501,"kind":"instance","docLink":"./Lean/LocalContext.html#Lean.instMonadLCtxOfMonadLift","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.instMonadLCtxOfMonadLift\"><span class=\"name\">Lean</span>.<span class=\"name\">instMonadLCtxOfMonadLift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m n : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLift\">MonadLift</a> <span class=\"fn\">m</span> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.MonadLCtx\">Lean.MonadLCtx</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.MonadLCtx\">Lean.MonadLCtx</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L497-L497","name":"Lean.MonadLCtx.getLCtx","line":497,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.MonadLCtx.getLCtx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.MonadLCtx.getLCtx\"><span class=\"name\">Lean</span>.<span class=\"name\">MonadLCtx</span>.<span class=\"name\">getLCtx</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[self : <span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.MonadLCtx\">Lean.MonadLCtx</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L496-L496","name":"Lean.MonadLCtx.mk","line":496,"kind":"ctor","docLink":"./Lean/LocalContext.html#Lean.MonadLCtx.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.MonadLCtx.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">MonadLCtx</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(getLCtx : <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.MonadLCtx\">Lean.MonadLCtx</a> <span class=\"fn\">m</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L495-L497","name":"Lean.MonadLCtx","line":495,"kind":"class","docLink":"./Lean/LocalContext.html#Lean.MonadLCtx","doc":"Class used to denote that `m` has a local context. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">class</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.MonadLCtx\"><span class=\"name\">Lean</span>.<span class=\"name\">MonadLCtx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L482-L491","name":"Lean.LocalContext.sortFVarsByContextOrder","line":482,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.sortFVarsByContextOrder","doc":"Sort the given `FVarId`s by the order in which they appear in `lctx`. If any of\nthe `FVarId`s do not appear in `lctx`, the result is unspecified.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.sortFVarsByContextOrder\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">sortFVarsByContextOrder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hyps : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L472-L480","name":"Lean.LocalContext.getRoundtrippingUserName?","line":472,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.getRoundtrippingUserName?","doc":"Given an `FVarId`, this function returns the corresponding user name,\nbut only if the name can be used to recover the original FVarId.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.getRoundtrippingUserName?\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">getRoundtrippingUserName?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L455-L470","name":"Lean.LocalContext.sanitizeNames","line":455,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.sanitizeNames","doc":"If option `pp.sanitizeNames` is set to `true`, add tombstone to shadowed local declaration names and ones contains macroscopes. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.sanitizeNames\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">sanitizeNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/State.html#StateM\">StateM</a> <a href=\"./Lean/Hygiene.html#Lean.NameSanitizerState\">Lean.NameSanitizerState</a> <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L451-L453","name":"Lean.LocalContext.all","line":451,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.all","doc":"Return `true` if all declarations in `lctx` satisfy `p`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.all\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">all</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L447-L449","name":"Lean.LocalContext.any","line":447,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.any","doc":"Return `true` if `lctx` contains a local declaration satisfying `p`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.any\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">any</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L442-L445","name":"Lean.LocalContext.allM","line":442,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.allM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.allM\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">allM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L437-L440","name":"Lean.LocalContext.anyM","line":437,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.anyM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.anyM\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">anyM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L432-L435","name":"Lean.LocalContext.mkForall","line":432,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.mkForall","doc":"Creates the expression `(x₁:α₁) → .. → (xₙ:αₙ) → b` for free variables `xs = #[x₁, .., xₙ]`,\nsuitably abstracting `b` and the types for each of the `xᵢ`, `αᵢ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.mkForall\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">mkForall</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(xs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L427-L430","name":"Lean.LocalContext.mkLambda","line":427,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.mkLambda","doc":"Creates the expression `fun x₁ .. xₙ => b` for free variables `xs = #[x₁, .., xₙ]`,\nsuitably abstracting `b` and the types for each of the `xᵢ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.mkLambda\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">mkLambda</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(xs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L407-L425","name":"Lean.LocalContext.mkBinding","line":407,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.mkBinding","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.mkBinding\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">mkBinding</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(isLambda : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(xs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L401-L405","name":"Lean.LocalContext.isSubPrefixOf","line":401,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.isSubPrefixOf","doc":"Given `lctx₁ - exceptFVars` of the form `(x_1 : A_1) ... (x_n : A_n)`, then return true\niff there is a local context `B_1* (x_1 : A_1) ... B_n* (x_n : A_n)` which is a prefix\nof `lctx₂` where `B_i`'s are (possibly empty) sequences of local declarations. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.isSubPrefixOf\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">isSubPrefixOf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx₁ lctx₂ : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exceptFVars : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span> := <span class=\"fn\">#[]</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L387-L399","name":"Lean.LocalContext.isSubPrefixOfAux","line":387,"kind":"opaque","docLink":"./Lean/LocalContext.html#Lean.LocalContext.isSubPrefixOfAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.isSubPrefixOfAux\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">isSubPrefixOfAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a₁ a₂ : <span class=\"fn\"><a href=\"./Lean/Data/PersistentArray.html#Lean.PArray\">Lean.PArray</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(exceptFVars : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i j : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L384-L385","name":"Lean.LocalContext.findDeclRev?","line":384,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.findDeclRev?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.findDeclRev?\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">findDeclRev?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L381-L382","name":"Lean.LocalContext.findDecl?","line":381,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.findDecl?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.findDecl?\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">findDecl?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L378-L379","name":"Lean.LocalContext.size","line":378,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.size","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.size\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">size</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L375-L376","name":"Lean.LocalContext.foldr","line":375,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.foldr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.foldr\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">foldr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(init : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">β</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L372-L373","name":"Lean.LocalContext.foldl","line":372,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.foldl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.foldl\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">foldl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(init : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(start : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">β</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L367-L370","name":"Lean.LocalContext.instForInLocalDecl","line":367,"kind":"instance","docLink":"./Lean/LocalContext.html#Lean.LocalContext.instForInLocalDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.instForInLocalDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">instForInLocalDecl</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#ForIn\">ForIn</a> <span class=\"fn\">m</span> <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L362-L365","name":"Lean.LocalContext.findDeclRevM?","line":362,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.findDeclRevM?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.findDeclRevM?\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">findDeclRevM?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">β</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">β</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L357-L360","name":"Lean.LocalContext.findDeclM?","line":357,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.findDeclM?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.findDeclM?\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">findDeclM?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">β</span>)</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">β</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L352-L355","name":"Lean.LocalContext.forM","line":352,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.forM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.forM\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">forM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L347-L350","name":"Lean.LocalContext.foldrM","line":347,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.foldrM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.foldrM\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">foldrM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">β</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(init : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L342-L345","name":"Lean.LocalContext.foldlM","line":342,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.foldlM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.foldlM\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">foldlM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> u_1 → <a href=\"./foundational_types.html\">Type</a> u_2</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">β</span> → <span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">β</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(init : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(start : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L339-L340","name":"Lean.LocalContext.getAt?","line":339,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.getAt?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.getAt?\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">getAt?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L335-L337","name":"Lean.LocalContext.numIndices","line":335,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.numIndices","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.numIndices\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">numIndices</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L332-L333","name":"Lean.LocalContext.setBinderInfo","line":332,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.setBinderInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.setBinderInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">setBinderInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(bi : <a href=\"./Lean/Expr.html#Lean.BinderInfo\">Lean.BinderInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L325-L330","name":"Lean.LocalContext.setKind","line":325,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.setKind","doc":"Set the kind of the given fvar.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.setKind\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">setKind</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Lean/LocalContext.html#Lean.LocalDeclKind\">Lean.LocalDeclKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L311-L323","name":"Lean.LocalContext.modifyLocalDecl","line":311,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.modifyLocalDecl","doc":"Low-level function for updating the local context.\nAssumptions about `f`, the resulting nested expressions must be definitionally equal to their original values,\nthe `index` nor `fvarId` are modified.  "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.modifyLocalDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">modifyLocalDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L301-L309","name":"Lean.LocalContext.renameUserName","line":301,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.renameUserName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.renameUserName\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">renameUserName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fromName toName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L295-L299","name":"Lean.LocalContext.setUserName","line":295,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.setUserName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.setUserName\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">setUserName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(userName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L292-L293","name":"Lean.LocalContext.lastDecl","line":292,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.lastDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.lastDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">lastDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L287-L290","name":"Lean.LocalContext.getUnusedName","line":287,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.getUnusedName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.getUnusedName\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">getUnusedName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(suggestion : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L279-L280","name":"Lean.LocalContext.usesUserName","line":279,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.usesUserName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.usesUserName\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">usesUserName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(userName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L273-L277","name":"Lean.LocalContext.findFromUserName?","line":273,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.findFromUserName?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.findFromUserName?\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">findFromUserName?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(userName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L265-L271","name":"Lean.LocalContext.pop","line":265,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.pop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.pop\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">pop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L257-L263","name":"Lean.LocalContext.erase","line":257,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.erase","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.erase\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">erase</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L247-L249","name":"Lean.LocalContext.getFVars","line":247,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.getFVars","doc":"Return all of the free variables in the given context. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.getFVars\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">getFVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L242-L245","name":"Lean.LocalContext.getFVarIds","line":242,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.getFVarIds","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.getFVarIds\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">getFVarIds</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L237-L240","name":"Lean.LocalContext.containsFVar","line":237,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.containsFVar","doc":"Returns true when the lctx contains the free variable `e`.\nPanics if `e` is not an fvar. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.containsFVar\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">containsFVar</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L234-L235","name":"Lean.LocalContext.contains","line":234,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.contains","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.contains\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">contains</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L229-L232","name":"Lean.LocalContext.getFVar!","line":229,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.getFVar!","doc":"Gets the declaration for expression `e` in the local context.\nIf `e` is not a free variable or not present then panics. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.getFVar!\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">getFVar!</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L224-L227","name":"Lean.LocalContext.get!","line":224,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.get!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.get!\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">get!</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L221-L222","name":"Lean.LocalContext.findFVar?","line":221,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.findFVar?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.findFVar?\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">findFVar?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L217-L219","name":"Lean.LocalContext.find?","line":217,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.find?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.find?\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">find?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L208-L215","name":"Lean.LocalContext.addDecl","line":208,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.addDecl","doc":"Low level API for adding a local declaration.\nDo not use directly. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.addDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">addDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(newDecl : <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L196-L202","name":"Lean.LocalContext.mkLetDecl","line":196,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.mkLetDecl","doc":"Low level API for let declarations. Do not use directly."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.mkLetDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">mkLetDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(userName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(type value : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(nonDep : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Lean/LocalContext.html#Lean.LocalDeclKind\">Lean.LocalDeclKind</a> := <span class=\"fn\">default</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L180-L189","name":"Lean.LocalContext.mkLocalDecl","line":180,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.mkLocalDecl","doc":"Low level API for creating local declarations.\nIt is used to implement actions in the monads `Elab` and `Tactic`.\nIt should not be used directly since the argument `(fvarId : FVarId)` is\nassumed to be unique. You can create a unique fvarId with `mkFreshFVarId`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.mkLocalDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">mkLocalDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(userName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(type : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(bi : <a href=\"./Lean/Expr.html#Lean.BinderInfo\">Lean.BinderInfo</a> := <a href=\"./Lean/Expr.html#Lean.BinderInfo.default\">Lean.BinderInfo.default</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Lean/LocalContext.html#Lean.LocalDeclKind\">Lean.LocalDeclKind</a> := <a href=\"./Lean/LocalContext.html#Lean.LocalDeclKind.default\">Lean.LocalDeclKind.default</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L176-L178","name":"Lean.LocalContext.isEmpty","line":176,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.isEmpty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.isEmpty\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">isEmpty</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(lctx : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L174-L174","name":"Lean.LocalContext.empty","line":174,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.empty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.empty\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L171-L172","name":"Lean.LocalContext.mkEmpty","line":171,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.mkEmpty","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.mkEmpty\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">mkEmpty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Unit\">Unit</a> → <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L167-L167","name":"Lean.instInhabitedLocalContext","line":167,"kind":"instance","docLink":"./Lean/LocalContext.html#Lean.instInhabitedLocalContext","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.instInhabitedLocalContext\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedLocalContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L166-L166","name":"Lean.LocalContext.decls","line":166,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.decls","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.decls\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">decls</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentArray.html#Lean.PersistentArray\">Lean.PersistentArray</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L165-L165","name":"Lean.LocalContext.fvarIdToDecl","line":165,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalContext.fvarIdToDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.fvarIdToDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">fvarIdToDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">Lean.PersistentHashMap</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L164-L164","name":"Lean.LocalContext.mk","line":164,"kind":"ctor","docLink":"./Lean/LocalContext.html#Lean.LocalContext.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fvarIdToDecl : <span class=\"fn\"><a href=\"./Lean/Data/PersistentHashMap.html#Lean.PersistentHashMap\">Lean.PersistentHashMap</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(decls : <span class=\"fn\"><a href=\"./Lean/Data/PersistentArray.html#Lean.PersistentArray\">Lean.PersistentArray</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/LocalContext.html#Lean.LocalContext\">Lean.LocalContext</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L157-L167","name":"Lean.LocalContext","line":157,"kind":"structure","docLink":"./Lean/LocalContext.html#Lean.LocalContext","doc":"A LocalContext is an ordered set of local variable declarations.\nIt is used to store the free variables (also known as local constants) that\nare in scope.\n\nWhen inspecting a goal or expected type in the infoview, the local\ncontext is all of the variables above the `⊢` symbol.\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalContext\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalContext</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L146-L153","name":"Lean.LocalDecl.setKind","line":146,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.setKind","doc":"Set the kind of a `LocalDecl`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalDecl.setKind\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDecl</span>.<span class=\"name\">setKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDeclKind\">Lean.LocalDeclKind</a> → <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L142-L144","name":"Lean.LocalDecl.hasExprMVar","line":142,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.hasExprMVar","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalDecl.hasExprMVar\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDecl</span>.<span class=\"name\">hasExprMVar</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L139-L140","name":"Lean.LocalDecl.toExpr","line":139,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.toExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalDecl.toExpr\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDecl</span>.<span class=\"name\">toExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(decl : <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L135-L137","name":"Lean.LocalDecl.setBinderInfo","line":135,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.setBinderInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalDecl.setBinderInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDecl</span>.<span class=\"name\">setBinderInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.BinderInfo\">Lean.BinderInfo</a> → <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L131-L133","name":"Lean.LocalDecl.setUserName","line":131,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.setUserName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalDecl.setUserName\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDecl</span>.<span class=\"name\">setUserName</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> → <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L127-L129","name":"Lean.LocalDecl.setValue","line":127,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.setValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalDecl.setValue\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDecl</span>.<span class=\"name\">setValue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> → <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L123-L125","name":"Lean.LocalDecl.hasValue","line":123,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.hasValue","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalDecl.hasValue\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDecl</span>.<span class=\"name\">hasValue</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L119-L121","name":"Lean.LocalDecl.value","line":119,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.value","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalDecl.value\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDecl</span>.<span class=\"name\">value</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L115-L117","name":"Lean.LocalDecl.value?","line":115,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.value?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalDecl.value?\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDecl</span>.<span class=\"name\">value?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L108-L113","name":"Lean.LocalDecl.isImplementationDetail","line":108,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.isImplementationDetail","doc":"Is the local declaration an implementation-detail hypothesis\n(including auxiliary declarations)?\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalDecl.isImplementationDetail\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDecl</span>.<span class=\"name\">isImplementationDetail</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(d : <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L105-L106","name":"Lean.LocalDecl.isAuxDecl","line":105,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.isAuxDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalDecl.isAuxDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDecl</span>.<span class=\"name\">isAuxDecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(d : <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L102-L103","name":"Lean.LocalDecl.kind","line":102,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.kind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalDecl.kind\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDecl</span>.<span class=\"name\">kind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <a href=\"./Lean/LocalContext.html#Lean.LocalDeclKind\">Lean.LocalDeclKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L98-L100","name":"Lean.LocalDecl.binderInfo","line":98,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.binderInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalDecl.binderInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDecl</span>.<span class=\"name\">binderInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <a href=\"./Lean/Expr.html#Lean.BinderInfo\">Lean.BinderInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L94-L96","name":"Lean.LocalDecl.setType","line":94,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.setType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalDecl.setType\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDecl</span>.<span class=\"name\">setType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> → <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L90-L92","name":"Lean.LocalDecl.type","line":90,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.type","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalDecl.type\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDecl</span>.<span class=\"name\">type</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L86-L88","name":"Lean.LocalDecl.userName","line":86,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.userName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalDecl.userName\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDecl</span>.<span class=\"name\">userName</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L82-L84","name":"Lean.LocalDecl.fvarId","line":82,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.fvarId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalDecl.fvarId\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDecl</span>.<span class=\"name\">fvarId</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L78-L80","name":"Lean.LocalDecl.setIndex","line":78,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.setIndex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalDecl.setIndex\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDecl</span>.<span class=\"name\">setIndex</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L74-L76","name":"Lean.LocalDecl.index","line":74,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.index","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalDecl.index\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDecl</span>.<span class=\"name\">index</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L70-L72","name":"Lean.LocalDecl.isLet","line":70,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.isLet","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalDecl.isLet\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDecl</span>.<span class=\"name\">isLet</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L64-L67","name":"Lean.LocalDecl.binderInfoEx","line":64,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.binderInfoEx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalDecl.binderInfoEx\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDecl</span>.<span class=\"name\">binderInfoEx</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a> → <a href=\"./Lean/Expr.html#Lean.BinderInfo\">Lean.BinderInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L61-L63","name":"Lean.mkLetDeclEx","line":61,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.mkLetDeclEx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.mkLetDeclEx\"><span class=\"name\">Lean</span>.<span class=\"name\">mkLetDeclEx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(index : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(userName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(type val : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L58-L60","name":"Lean.mkLocalDeclEx","line":58,"kind":"def","docLink":"./Lean/LocalContext.html#Lean.mkLocalDeclEx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.mkLocalDeclEx\"><span class=\"name\">Lean</span>.<span class=\"name\">mkLocalDeclEx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(index : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(userName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(type : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(bi : <a href=\"./Lean/Expr.html#Lean.BinderInfo\">Lean.BinderInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L56-L56","name":"Lean.instInhabitedLocalDecl","line":56,"kind":"instance","docLink":"./Lean/LocalContext.html#Lean.instInhabitedLocalDecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.instInhabitedLocalDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedLocalDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L55-L55","name":"Lean.LocalDecl.ldecl","line":55,"kind":"ctor","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.ldecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalDecl.ldecl\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDecl</span>.<span class=\"name\">ldecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(index : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(userName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(type value : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(nonDep : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Lean/LocalContext.html#Lean.LocalDeclKind\">Lean.LocalDeclKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L54-L54","name":"Lean.LocalDecl.cdecl","line":54,"kind":"ctor","docLink":"./Lean/LocalContext.html#Lean.LocalDecl.cdecl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalDecl.cdecl\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDecl</span>.<span class=\"name\">cdecl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(index : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fvarId : <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(userName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(type : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(bi : <a href=\"./Lean/Expr.html#Lean.BinderInfo\">Lean.BinderInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(kind : <a href=\"./Lean/LocalContext.html#Lean.LocalDeclKind\">Lean.LocalDeclKind</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/LocalContext.html#Lean.LocalDecl\">Lean.LocalDecl</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L45-L56","name":"Lean.LocalDecl","line":45,"kind":"inductive","docLink":"./Lean/LocalContext.html#Lean.LocalDecl","doc":"A declaration for a LocalContext. This is used to register which free variables are in scope.\nEach declaration comes with\n- `index` the position of the decl in the local context\n- `fvarId` the unique id of the free variables\n- `userName` the pretty-printable name of the variable\n- `type` the type.\nA `cdecl` is a local variable, a `ldecl` is a let-bound free variable with a `value : Expr`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L43-L43","name":"Lean.instHashableLocalDeclKind","line":43,"kind":"instance","docLink":"./Lean/LocalContext.html#Lean.instHashableLocalDeclKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.instHashableLocalDeclKind\"><span class=\"name\">Lean</span>.<span class=\"name\">instHashableLocalDeclKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDeclKind\">Lean.LocalDeclKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L43-L43","name":"Lean.instDecidableEqLocalDeclKind","line":43,"kind":"instance","docLink":"./Lean/LocalContext.html#Lean.instDecidableEqLocalDeclKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.instDecidableEqLocalDeclKind\"><span class=\"name\">Lean</span>.<span class=\"name\">instDecidableEqLocalDeclKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDeclKind\">Lean.LocalDeclKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L43-L43","name":"Lean.instReprLocalDeclKind","line":43,"kind":"instance","docLink":"./Lean/LocalContext.html#Lean.instReprLocalDeclKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.instReprLocalDeclKind\"><span class=\"name\">Lean</span>.<span class=\"name\">instReprLocalDeclKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDeclKind\">Lean.LocalDeclKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L43-L43","name":"Lean.instInhabitedLocalDeclKind","line":43,"kind":"instance","docLink":"./Lean/LocalContext.html#Lean.instInhabitedLocalDeclKind","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.instInhabitedLocalDeclKind\"><span class=\"name\">Lean</span>.<span class=\"name\">instInhabitedLocalDeclKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/LocalContext.html#Lean.LocalDeclKind\">Lean.LocalDeclKind</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L34-L42","name":"Lean.LocalDeclKind.auxDecl","line":34,"kind":"ctor","docLink":"./Lean/LocalContext.html#Lean.LocalDeclKind.auxDecl","doc":"Auxiliary local declaration for recursive calls.\nThe behavior is similar to `implDetail`.\n\nFor example: `def foo (n : Nat) : Nat := _` adds the local declaration\n`foo : Nat → Nat` to allow recursive calls.\nThis declaration has the `auxDecl` kind.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalDeclKind.auxDecl\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDeclKind</span>.<span class=\"name\">auxDecl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/LocalContext.html#Lean.LocalDeclKind\">Lean.LocalDeclKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L25-L33","name":"Lean.LocalDeclKind.implDetail","line":25,"kind":"ctor","docLink":"./Lean/LocalContext.html#Lean.LocalDeclKind.implDetail","doc":"Invisible to type class search or tactics, and hidden in the goal display.\n\nThis kind is used for temporary variables in macros.\nFor example: `return (← foo) + bar` expands to\n`foo >>= fun __tmp => pure (__tmp + bar)`,\nwhere `__tmp` has the `implDetail` kind.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalDeclKind.implDetail\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDeclKind</span>.<span class=\"name\">implDetail</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/LocalContext.html#Lean.LocalDeclKind\">Lean.LocalDeclKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L19-L24","name":"Lean.LocalDeclKind.default","line":19,"kind":"ctor","docLink":"./Lean/LocalContext.html#Lean.LocalDeclKind.default","doc":"Participates fully in type class search, tactics, and is shown even if inaccessible.\n\nFor example: the `x` in `fun x => _` has the default kind.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalDeclKind.default\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDeclKind</span>.<span class=\"name\">default</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/LocalContext.html#Lean.LocalDeclKind\">Lean.LocalDeclKind</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/LocalContext.lean#L14-L43","name":"Lean.LocalDeclKind","line":14,"kind":"inductive","docLink":"./Lean/LocalContext.html#Lean.LocalDeclKind","doc":"Whether a local declaration should be found by type class search, tactics, etc.\nand shown in the goal display.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/LocalContext.html#Lean.LocalDeclKind\"><span class=\"name\">Lean</span>.<span class=\"name\">LocalDeclKind</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}