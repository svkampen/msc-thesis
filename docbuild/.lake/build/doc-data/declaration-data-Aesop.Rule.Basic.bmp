{"name":"Aesop.Rule.Basic","instances":[{"typeNames":["Aesop.Rule"],"name":"Aesop.instInhabitedRule","className":"Inhabited"},{"typeNames":["Aesop.Rule"],"name":"Aesop.Rule.instBEq","className":"BEq"},{"typeNames":["Aesop.Rule"],"name":"Aesop.Rule.instOrd","className":"Ord"},{"typeNames":["Aesop.Rule"],"name":"Aesop.Rule.instHashable","className":"Hashable"}],"imports":["Init","Aesop.Index.Basic","Aesop.Rule.Name","Aesop.RuleTac.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Rule/Basic.lean#L47-L49","name":"Aesop.Rule.mapM","line":47,"kind":"def","docLink":"./Aesop/Rule/Basic.html#Aesop.Rule.mapM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Rule/Basic.html#Aesop.Rule.mapM\"><span class=\"name\">Aesop</span>.<span class=\"name\">Rule</span>.<span class=\"name\">mapM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">β</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Aesop.Rule</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Aesop.Rule</a> <span class=\"fn\">β</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Rule/Basic.lean#L43-L45","name":"Aesop.Rule.map","line":43,"kind":"def","docLink":"./Aesop/Rule/Basic.html#Aesop.Rule.map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Rule/Basic.html#Aesop.Rule.map\"><span class=\"name\">Aesop</span>.<span class=\"name\">Rule</span>.<span class=\"name\">map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α β : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\">β</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(r : <span class=\"fn\"><a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Aesop.Rule</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Aesop.Rule</a> <span class=\"fn\">β</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Rule/Basic.lean#L40-L41","name":"Aesop.Rule.compareByPriorityThenName","line":40,"kind":"def","docLink":"./Aesop/Rule/Basic.html#Aesop.Rule.compareByPriorityThenName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Rule/Basic.html#Aesop.Rule.compareByPriorityThenName\"><span class=\"name\">Aesop</span>.<span class=\"name\">Rule</span>.<span class=\"name\">compareByPriorityThenName</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Ord.html#Ord\">Ord</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r s : <span class=\"fn\"><a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Aesop.Rule</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Ord.html#Ordering\">Ordering</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Rule/Basic.lean#L37-L38","name":"Aesop.Rule.compareByName","line":37,"kind":"def","docLink":"./Aesop/Rule/Basic.html#Aesop.Rule.compareByName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Rule/Basic.html#Aesop.Rule.compareByName\"><span class=\"name\">Aesop</span>.<span class=\"name\">Rule</span>.<span class=\"name\">compareByName</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r s : <span class=\"fn\"><a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Aesop.Rule</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Ord.html#Ordering\">Ordering</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Rule/Basic.lean#L34-L35","name":"Aesop.Rule.compareByPriority","line":34,"kind":"def","docLink":"./Aesop/Rule/Basic.html#Aesop.Rule.compareByPriority","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Rule/Basic.html#Aesop.Rule.compareByPriority\"><span class=\"name\">Aesop</span>.<span class=\"name\">Rule</span>.<span class=\"name\">compareByPriority</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/Ord.html#Ord\">Ord</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(r s : <span class=\"fn\"><a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Aesop.Rule</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Ord.html#Ordering\">Ordering</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Rule/Basic.lean#L31-L32","name":"Aesop.Rule.instHashable","line":31,"kind":"instance","docLink":"./Aesop/Rule/Basic.html#Aesop.Rule.instHashable","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Rule/Basic.html#Aesop.Rule.instHashable\"><span class=\"name\">Aesop</span>.<span class=\"name\">Rule</span>.<span class=\"name\">instHashable</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Hashable\">Hashable</a> <span class=\"fn\">(<a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Aesop.Rule</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Rule/Basic.lean#L28-L29","name":"Aesop.Rule.instOrd","line":28,"kind":"instance","docLink":"./Aesop/Rule/Basic.html#Aesop.Rule.instOrd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Rule/Basic.html#Aesop.Rule.instOrd\"><span class=\"name\">Aesop</span>.<span class=\"name\">Rule</span>.<span class=\"name\">instOrd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Ord.html#Ord\">Ord</a> <span class=\"fn\">(<a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Aesop.Rule</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Rule/Basic.lean#L25-L26","name":"Aesop.Rule.instBEq","line":25,"kind":"instance","docLink":"./Aesop/Rule/Basic.html#Aesop.Rule.instBEq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Rule/Basic.html#Aesop.Rule.instBEq\"><span class=\"name\">Aesop</span>.<span class=\"name\">Rule</span>.<span class=\"name\">instBEq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <span class=\"fn\">(<a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Aesop.Rule</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Rule/Basic.lean#L21-L21","name":"Aesop.instInhabitedRule","line":21,"kind":"instance","docLink":"./Aesop/Rule/Basic.html#Aesop.instInhabitedRule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Rule/Basic.html#Aesop.instInhabitedRule\"><span class=\"name\">Aesop</span>.<span class=\"name\">instInhabitedRule</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a✝ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">a✝</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Aesop.Rule</a> <span class=\"fn\">a✝</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Rule/Basic.lean#L20-L20","name":"Aesop.Rule.tac","line":20,"kind":"def","docLink":"./Aesop/Rule/Basic.html#Aesop.Rule.tac","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Rule/Basic.html#Aesop.Rule.tac\"><span class=\"name\">Aesop</span>.<span class=\"name\">Rule</span>.<span class=\"name\">tac</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Aesop.Rule</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr\">Aesop.RuleTacDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Rule/Basic.lean#L19-L19","name":"Aesop.Rule.extra","line":19,"kind":"def","docLink":"./Aesop/Rule/Basic.html#Aesop.Rule.extra","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Rule/Basic.html#Aesop.Rule.extra\"><span class=\"name\">Aesop</span>.<span class=\"name\">Rule</span>.<span class=\"name\">extra</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Aesop.Rule</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Rule/Basic.lean#L18-L18","name":"Aesop.Rule.pattern?","line":18,"kind":"def","docLink":"./Aesop/Rule/Basic.html#Aesop.Rule.pattern?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Rule/Basic.html#Aesop.Rule.pattern?\"><span class=\"name\">Aesop</span>.<span class=\"name\">Rule</span>.<span class=\"name\">pattern?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Aesop.Rule</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/RulePattern.html#Aesop.RulePattern\">Aesop.RulePattern</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Rule/Basic.lean#L17-L17","name":"Aesop.Rule.indexingMode","line":17,"kind":"def","docLink":"./Aesop/Rule/Basic.html#Aesop.Rule.indexingMode","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Rule/Basic.html#Aesop.Rule.indexingMode\"><span class=\"name\">Aesop</span>.<span class=\"name\">Rule</span>.<span class=\"name\">indexingMode</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Aesop.Rule</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Index/Basic.html#Aesop.IndexingMode\">Aesop.IndexingMode</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Rule/Basic.lean#L16-L16","name":"Aesop.Rule.name","line":16,"kind":"def","docLink":"./Aesop/Rule/Basic.html#Aesop.Rule.name","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Rule/Basic.html#Aesop.Rule.name\"><span class=\"name\">Aesop</span>.<span class=\"name\">Rule</span>.<span class=\"name\">name</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Aesop.Rule</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">Aesop.RuleName</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Rule/Basic.lean#L15-L15","name":"Aesop.Rule.mk","line":15,"kind":"ctor","docLink":"./Aesop/Rule/Basic.html#Aesop.Rule.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Rule/Basic.html#Aesop.Rule.mk\"><span class=\"name\">Aesop</span>.<span class=\"name\">Rule</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Aesop/Rule/Name.html#Aesop.RuleName\">Aesop.RuleName</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(indexingMode : <a href=\"./Aesop/Index/Basic.html#Aesop.IndexingMode\">Aesop.IndexingMode</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pattern? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Aesop/RulePattern.html#Aesop.RulePattern\">Aesop.RulePattern</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(extra : <span class=\"fn\">α</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tac : <a href=\"./Aesop/RuleTac/Basic.html#Aesop.RuleTacDescr\">Aesop.RuleTacDescr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Rule/Basic.html#Aesop.Rule\">Aesop.Rule</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Rule/Basic.lean#L15-L21","name":"Aesop.Rule","line":15,"kind":"structure","docLink":"./Aesop/Rule/Basic.html#Aesop.Rule","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Rule/Basic.html#Aesop.Rule\"><span class=\"name\">Aesop</span>.<span class=\"name\">Rule</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}