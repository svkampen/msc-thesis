{"name":"Init.Data.Nat.Linear","instances":[{"typeNames":["Nat.Linear.Expr"],"name":"Nat.Linear.instInhabitedExpr","className":"Inhabited"},{"typeNames":["Nat.Linear.PolyCnstr"],"name":"Nat.Linear.instBEqPolyCnstr","className":"BEq"},{"typeNames":["Nat.Linear.PolyCnstr"],"name":"Nat.Linear.instLawfulBEqPolyCnstr","className":"LawfulBEq"}],"imports":["Init.ByCases","Init.Data.Prod"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L717-L719","name":"Nat.elimOffset","line":717,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.elimOffset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.elimOffset\"><span class=\"name\">Nat</span>.<span class=\"name\">elimOffset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Sort</a> u}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a b k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">k</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span> → <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">α</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L710-L713","name":"Nat.Linear.Expr.eq_of_toNormPoly_eq","line":710,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.eq_of_toNormPoly_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.eq_of_toNormPoly_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">eq_of_toNormPoly_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e e' : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">e</span>.toNormPoly</span> <a href=\"./Init/Prelude.html#BEq.beq\">==</a> <span class=\"fn\"><span class=\"fn\">e'</span>.toPoly</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">e</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">e'</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L705-L708","name":"Nat.Linear.ExprCnstr.eq_of_toNormPoly_eq","line":705,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq_of_toNormPoly_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq_of_toNormPoly_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">eq_of_toNormPoly_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c d : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.toNormPoly</span> <a href=\"./Init/Prelude.html#BEq.beq\">==</a> <span class=\"fn\"><span class=\"fn\">d</span>.toPoly</span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote\">Nat.Linear.ExprCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote\">Nat.Linear.ExprCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">d</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L700-L703","name":"Nat.Linear.Poly.denote_toExpr","line":700,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_toExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_toExpr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_toExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\"><span class=\"fn\">p</span>.toExpr</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L693-L696","name":"Nat.Linear.Poly.denote_toExpr_go","line":693,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_toExpr_go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_toExpr_go\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_toExpr_go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.toExpr.go\">Nat.Linear.Poly.toExpr.go</a> <span class=\"fn\">e</span> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">e</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L685-L689","name":"Nat.Linear.denote_monomialToExpr","line":685,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.denote_monomialToExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.denote_monomialToExpr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">denote_monomialToExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\">Nat.Linear.Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.monomialToExpr\">Nat.Linear.monomialToExpr</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var.denote\">Nat.Linear.Var.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">v</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L681-L683","name":"Nat.Linear.Certificate.of_combine_isUnsat","line":681,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.of_combine_isUnsat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.of_combine_isUnsat\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Certificate</span>.<span class=\"name\">of_combine_isUnsat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cs : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate\">Nat.Linear.Certificate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">cs</span>.combine</span>.isUnsat</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.denote\">Nat.Linear.Certificate.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">cs</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L672-L679","name":"Nat.Linear.Certificate.of_combine","line":672,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.of_combine","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.of_combine\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Certificate</span>.<span class=\"name\">of_combine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cs : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate\">Nat.Linear.Certificate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">Nat.Linear.PolyCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\"><span class=\"fn\">cs</span>.combine</span></span> → <a href=\"./Init/Prelude.html#False\">False</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.denote\">Nat.Linear.Certificate.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">cs</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L661-L670","name":"Nat.Linear.Certificate.of_combineHyps","line":661,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.of_combineHyps","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.of_combineHyps\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Certificate</span>.<span class=\"name\">of_combineHyps</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cs : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate\">Nat.Linear.Certificate</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">Nat.Linear.PolyCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.combineHyps\">Nat.Linear.Certificate.combineHyps</a> <span class=\"fn\">c</span> <span class=\"fn\">cs</span>)</span></span> → <a href=\"./Init/Prelude.html#False\">False</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">Nat.Linear.PolyCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> → <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.denote\">Nat.Linear.Certificate.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">cs</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L656-L659","name":"Nat.Linear.ExprCnstr.eq_true_of_isValid","line":656,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq_true_of_isValid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq_true_of_isValid\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">eq_true_of_isValid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.toNormPoly</span>.isValid</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote\">Nat.Linear.ExprCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#True\">True</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L651-L654","name":"Nat.Linear.ExprCnstr.eq_false_of_isUnsat","line":651,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq_false_of_isUnsat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq_false_of_isUnsat\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">eq_false_of_isUnsat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.toNormPoly</span>.isUnsat</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote\">Nat.Linear.ExprCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#False\">False</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L642-L649","name":"Nat.Linear.PolyCnstr.eq_true_of_isValid","line":642,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.eq_true_of_isValid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.eq_true_of_isValid\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">eq_true_of_isValid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.isValid</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">Nat.Linear.PolyCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#True\">True</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L631-L640","name":"Nat.Linear.PolyCnstr.eq_false_of_isUnsat","line":631,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.eq_false_of_isUnsat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.eq_false_of_isUnsat\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">eq_false_of_isUnsat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.isUnsat</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">Nat.Linear.PolyCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#False\">False</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L622-L629","name":"Nat.Linear.Poly.of_isNonZero","line":622,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_isNonZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_isNonZero\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">of_isNonZero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.isNonZero</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#GT.gt\">&gt;</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L616-L620","name":"Nat.Linear.Poly.of_isZero","line":616,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_isZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_isZero\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">of_isZero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.isZero</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L609-L614","name":"Nat.Linear.Poly.isNum?_eq_some","line":609,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isNum?_eq_some","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isNum?_eq_some\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">isNum?_eq_some</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">p</span>.isNum?</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Option.some\">some</a> <span class=\"fn\">k</span></span></span> → <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L597-L605","name":"Nat.Linear.PolyCnstr.denote_combine","line":597,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote_combine","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote_combine\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">denote_combine</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c₁ c₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h₁ : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">Nat.Linear.PolyCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c₁</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h₂ : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">Nat.Linear.PolyCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c₂</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">Nat.Linear.PolyCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c₁</span>.combine</span> <span class=\"fn\">c₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L581-L591","name":"Nat.Linear.PolyCnstr.denote_mul","line":581,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote_mul\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">denote_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">Nat.Linear.PolyCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.mul\">Nat.Linear.PolyCnstr.mul</a> <span class=\"fn\">(<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\">1</span>)</span> <span class=\"fn\">c</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">Nat.Linear.PolyCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L571-L574","name":"Nat.Linear.Poly.mul.go_denote","line":571,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.mul.go_denote","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.mul.go_denote\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">mul</span>.<span class=\"name\">go_denote</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.mul.go\">Nat.Linear.Poly.mul.go</a> <span class=\"fn\">k</span> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L562-L567","name":"Nat.Linear.ExprCnstr.denote_toNormPoly","line":562,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote_toNormPoly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote_toNormPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">denote_toNormPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">Nat.Linear.PolyCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\"><span class=\"fn\">c</span>.toNormPoly</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote\">Nat.Linear.ExprCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L553-L558","name":"Nat.Linear.ExprCnstr.denote_toPoly","line":553,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote_toPoly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote_toPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">denote_toPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\">Nat.Linear.PolyCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\"><span class=\"fn\">c</span>.toPoly</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote\">Nat.Linear.ExprCnstr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L550-L551","name":"Nat.Linear.ExprCnstr.toPoly_norm_eq","line":550,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toPoly_norm_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toPoly_norm_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">toPoly_norm_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.toPoly</span>.norm</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">c</span>.toNormPoly</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L547-L548","name":"Nat.Linear.Expr.of_cancel_lt","line":547,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.of_cancel_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.of_cancel_lt\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">of_cancel_lt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a b c d : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.inc</span>.toNormPoly</span>.cancel</span> <span class=\"fn\"><span class=\"fn\">b</span>.toNormPoly</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">c</span>.inc</span>.toPoly</span>, <span class=\"fn\"><span class=\"fn\">d</span>.toPoly</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">b</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">d</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L541-L545","name":"Nat.Linear.Expr.of_cancel_le","line":541,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.of_cancel_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.of_cancel_le\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">of_cancel_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a b c d : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.toNormPoly</span>.cancel</span> <span class=\"fn\"><span class=\"fn\">b</span>.toNormPoly</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.toPoly</span>, <span class=\"fn\"><span class=\"fn\">d</span>.toPoly</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">b</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">d</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L535-L539","name":"Nat.Linear.Expr.of_cancel_eq","line":535,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.of_cancel_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.of_cancel_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">of_cancel_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a b c d : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.toNormPoly</span>.cancel</span> <span class=\"fn\"><span class=\"fn\">b</span>.toNormPoly</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">c</span>.toPoly</span>, <span class=\"fn\"><span class=\"fn\">d</span>.toPoly</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">b</span></span>)</span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\">(<span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">c</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">d</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L529-L533","name":"Nat.Linear.Expr.eq_of_toNormPoly","line":529,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.eq_of_toNormPoly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.eq_of_toNormPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">eq_of_toNormPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a b : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.toNormPoly</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.toNormPoly</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">b</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L519-L525","name":"Nat.Linear.Expr.denote_toPoly","line":519,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote_toPoly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote_toPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">denote_toPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\"><span class=\"fn\">e</span>.toPoly</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\">Nat.Linear.Expr.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">e</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L514-L515","name":"Nat.Linear.Poly.denote_combine","line":514,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_combine","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_combine\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_combine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₁ p₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">p₁</span>.combine</span> <span class=\"fn\">p₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L504-L512","name":"Nat.Linear.Poly.denote_combineAux","line":504,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_combineAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_combineAux\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_combineAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fuel : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₁ p₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.combineAux\">Nat.Linear.Poly.combineAux</a> <span class=\"fn\">fuel</span> <span class=\"fn\">p₁</span> <span class=\"fn\">p₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p₁</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p₂</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L499-L500","name":"Nat.Linear.Poly.denote_le_cancel_eq","line":499,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le_cancel_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le_cancel_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_le_cancel_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₁ m₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">Nat.Linear.Poly.denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span>.cancel</span> <span class=\"fn\">m₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">Nat.Linear.Poly.denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\">m₁</span>, <span class=\"fn\">m₂</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L494-L497","name":"Nat.Linear.Poly.of_denote_le_cancel","line":494,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_le_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_le_cancel\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">of_denote_le_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₁ m₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">Nat.Linear.Poly.denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span>.cancel</span> <span class=\"fn\">m₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">Nat.Linear.Poly.denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\">m₁</span>, <span class=\"fn\">m₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L491-L492","name":"Nat.Linear.Poly.denote_le_cancel","line":491,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le_cancel\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_le_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₁ m₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">Nat.Linear.Poly.denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\">m₁</span>, <span class=\"fn\">m₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">Nat.Linear.Poly.denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span>.cancel</span> <span class=\"fn\">m₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L458-L489","name":"Nat.Linear.Poly.of_denote_le_cancelAux","line":458,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_le_cancelAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_le_cancelAux\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">of_denote_le_cancelAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fuel : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₁ m₂ r₁ r₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">Nat.Linear.Poly.denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancelAux\">Nat.Linear.Poly.cancelAux</a> <span class=\"fn\">fuel</span> <span class=\"fn\">m₁</span> <span class=\"fn\">m₂</span> <span class=\"fn\">r₁</span> <span class=\"fn\">r₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">Nat.Linear.Poly.denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₁</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₁</span></span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₂</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L424-L456","name":"Nat.Linear.Poly.denote_le_cancelAux","line":424,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le_cancelAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le_cancelAux\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_le_cancelAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fuel : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₁ m₂ r₁ r₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">Nat.Linear.Poly.denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₁</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₁</span></span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₂</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₂</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\">Nat.Linear.Poly.denote_le</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancelAux\">Nat.Linear.Poly.cancelAux</a> <span class=\"fn\">fuel</span> <span class=\"fn\">m₁</span> <span class=\"fn\">m₂</span> <span class=\"fn\">r₁</span> <span class=\"fn\">r₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L419-L420","name":"Nat.Linear.Poly.denote_eq_cancel_eq","line":419,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq_cancel_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq_cancel_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_eq_cancel_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₁ m₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">Nat.Linear.Poly.denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span>.cancel</span> <span class=\"fn\">m₂</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">Nat.Linear.Poly.denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\">m₁</span>, <span class=\"fn\">m₂</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L414-L417","name":"Nat.Linear.Poly.of_denote_eq_cancel","line":414,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_eq_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_eq_cancel\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">of_denote_eq_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₁ m₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">Nat.Linear.Poly.denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span>.cancel</span> <span class=\"fn\">m₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">Nat.Linear.Poly.denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\">m₁</span>, <span class=\"fn\">m₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L411-L412","name":"Nat.Linear.Poly.denote_eq_cancel","line":411,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq_cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq_cancel\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_eq_cancel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m₁ m₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">Nat.Linear.Poly.denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\">m₁</span>, <span class=\"fn\">m₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">Nat.Linear.Poly.denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">m₁</span>.cancel</span> <span class=\"fn\">m₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L380-L409","name":"Nat.Linear.Poly.of_denote_eq_cancelAux","line":380,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_eq_cancelAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.of_denote_eq_cancelAux\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">of_denote_eq_cancelAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fuel : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₁ m₂ r₁ r₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">Nat.Linear.Poly.denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancelAux\">Nat.Linear.Poly.cancelAux</a> <span class=\"fn\">fuel</span> <span class=\"fn\">m₁</span> <span class=\"fn\">m₂</span> <span class=\"fn\">r₁</span> <span class=\"fn\">r₂</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">Nat.Linear.Poly.denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₁</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₁</span></span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₂</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₂</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L346-L378","name":"Nat.Linear.Poly.denote_eq_cancelAux","line":346,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq_cancelAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq_cancelAux\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_eq_cancelAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fuel : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₁ m₂ r₁ r₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">Nat.Linear.Poly.denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₁</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₁</span></span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">r₂</span></span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">m₂</span></span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\">Nat.Linear.Poly.denote_eq</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancelAux\">Nat.Linear.Poly.cancelAux</a> <span class=\"fn\">fuel</span> <span class=\"fn\">m₁</span> <span class=\"fn\">m₂</span> <span class=\"fn\">r₁</span> <span class=\"fn\">r₂</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L331-L337","name":"Nat.Linear.Poly.denote_mul","line":331,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_mul\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.mul\">Nat.Linear.Poly.mul</a> <span class=\"fn\">k</span> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L319-L327","name":"Nat.Linear.Poly.denote_fuse","line":319,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_fuse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_fuse\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_fuse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\"><span class=\"fn\">p</span>.fuse</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L314-L315","name":"Nat.Linear.Poly.denote_reverse","line":314,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_reverse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_reverse\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_reverse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.reverse\">List.reverse</a> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L307-L310","name":"Nat.Linear.Poly.denote_reverseAux","line":307,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_reverseAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_reverseAux\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_reverseAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p q : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/List/Basic.html#List.reverseAux\">List.reverseAux</a> <span class=\"fn\">p</span> <span class=\"fn\">q</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">q</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L300-L303","name":"Nat.Linear.Poly.denote_cons","line":300,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_cons","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_cons\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_cons</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\">Nat.Linear.Var</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\">(<span class=\"fn\">k</span>, <span class=\"fn\">v</span>)</span> <a href=\"./Init/Prelude.html#List.cons\">::</a> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var.denote\">Nat.Linear.Var.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">v</span></span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L293-L296","name":"Nat.Linear.Poly.denote_append","line":293,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_append","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_append\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_append</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p q : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#HAppend.hAppend\">++</a> <span class=\"fn\">q</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">q</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L288-L289","name":"Nat.Linear.Poly.denote_sort","line":288,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_sort","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_sort\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_sort</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\"><span class=\"fn\">m</span>.sort</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">m</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L281-L284","name":"Nat.Linear.Poly.denote_sort_go","line":281,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_sort_go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_sort_go\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_sort_go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p r : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.sort.go\">Nat.Linear.Poly.sort.go</a> <span class=\"fn\">p</span> <span class=\"fn\">r</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">r</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L274-L277","name":"Nat.Linear.Poly.denote_insertSorted","line":274,"kind":"theorem","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_insertSorted","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_insertSorted\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_insertSorted</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\">Nat.Linear.Var</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">(<a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.insertSorted\">Nat.Linear.Poly.insertSorted</a> <span class=\"fn\">k</span> <span class=\"fn\">v</span> <span class=\"fn\">p</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\">Nat.Linear.Poly.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var.denote\">Nat.Linear.Var.denote</a> <span class=\"fn\">ctx</span> <span class=\"fn\">v</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L267-L268","name":"Nat.Linear.PolyCnstr.toExpr","line":267,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.toExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.toExpr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">toExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L262-L265","name":"Nat.Linear.Poly.toExpr.go","line":262,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.toExpr.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.toExpr.go\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">toExpr</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L257-L265","name":"Nat.Linear.Poly.toExpr","line":257,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.toExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.toExpr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">toExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L249-L255","name":"Nat.Linear.monomialToExpr","line":249,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.monomialToExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.monomialToExpr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">monomialToExpr</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\">Nat.Linear.Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L244-L247","name":"Nat.Linear.Certificate.denote","line":244,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.denote","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.denote\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Certificate</span>.<span class=\"name\">denote</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate\">Nat.Linear.Certificate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L239-L242","name":"Nat.Linear.Certificate.combine","line":239,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.combine","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.combine\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Certificate</span>.<span class=\"name\">combine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(hs : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate\">Nat.Linear.Certificate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L234-L237","name":"Nat.Linear.Certificate.combineHyps","line":234,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.combineHyps","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate.combineHyps\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Certificate</span>.<span class=\"name\">combineHyps</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hs : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate\">Nat.Linear.Certificate</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L232-L232","name":"Nat.Linear.Certificate","line":232,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Certificate\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Certificate</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L228-L230","name":"Nat.Linear.ExprCnstr.toNormPoly","line":228,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toNormPoly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toNormPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">toNormPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L225-L226","name":"Nat.Linear.ExprCnstr.toPoly","line":225,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toPoly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.toPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">toPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L219-L223","name":"Nat.Linear.ExprCnstr.denote","line":219,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.denote\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">denote</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L213-L217","name":"Nat.Linear.PolyCnstr.isValid","line":213,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.isValid","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.isValid\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">isValid</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L207-L211","name":"Nat.Linear.PolyCnstr.isUnsat","line":207,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.isUnsat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.isUnsat\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">isUnsat</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L203-L205","name":"Nat.Linear.PolyCnstr.norm","line":203,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.norm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.norm\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">norm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L197-L201","name":"Nat.Linear.PolyCnstr.denote","line":197,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.denote\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">denote</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L195-L195","name":"Nat.Linear.ExprCnstr.rhs","line":195,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.rhs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.rhs\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">rhs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L194-L194","name":"Nat.Linear.ExprCnstr.lhs","line":194,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.lhs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.lhs\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">lhs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L193-L193","name":"Nat.Linear.ExprCnstr.eq","line":193,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L192-L192","name":"Nat.Linear.ExprCnstr.mk","line":192,"kind":"ctor","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr.mk\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(eq : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lhs rhs : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\">Nat.Linear.ExprCnstr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L192-L195","name":"Nat.Linear.ExprCnstr","line":192,"kind":"structure","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.ExprCnstr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">ExprCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L188-L190","name":"Nat.Linear.PolyCnstr.combine","line":188,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.combine","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.combine\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">combine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(c₁ c₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L185-L186","name":"Nat.Linear.PolyCnstr.mul","line":185,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.mul\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L172-L183","name":"Nat.Linear.instLawfulBEqPolyCnstr","line":172,"kind":"instance","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.instLawfulBEqPolyCnstr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.instLawfulBEqPolyCnstr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instLawfulBEqPolyCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Core.html#LawfulBEq\">LawfulBEq</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L169-L169","name":"Nat.Linear.instBEqPolyCnstr","line":169,"kind":"instance","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.instBEqPolyCnstr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.instBEqPolyCnstr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instBEqPolyCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#BEq\">BEq</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L168-L168","name":"Nat.Linear.PolyCnstr.rhs","line":168,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.rhs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.rhs\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">rhs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L167-L167","name":"Nat.Linear.PolyCnstr.lhs","line":167,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.lhs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.lhs\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">lhs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L166-L166","name":"Nat.Linear.PolyCnstr.eq","line":166,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L165-L165","name":"Nat.Linear.PolyCnstr.mk","line":165,"kind":"ctor","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr.mk\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(eq : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lhs rhs : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\">Nat.Linear.PolyCnstr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L165-L169","name":"Nat.Linear.PolyCnstr","line":165,"kind":"structure","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.PolyCnstr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">PolyCnstr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L162-L163","name":"Nat.Linear.Expr.inc","line":162,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.inc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.inc\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">inc</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L159-L160","name":"Nat.Linear.Expr.toNormPoly","line":159,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toNormPoly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toNormPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">toNormPoly</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L156-L157","name":"Nat.Linear.Poly.norm","line":156,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.norm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.norm\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">norm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L149-L154","name":"Nat.Linear.Expr.toPoly","line":149,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.toPoly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">toPoly</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a> → <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L146-L147","name":"Nat.Linear.Poly.combine","line":146,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.combine","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.combine\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">combine</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p₁ p₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L131-L144","name":"Nat.Linear.Poly.combineAux","line":131,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.combineAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.combineAux\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">combineAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fuel : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p₁ p₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L129-L129","name":"Nat.Linear.Poly.denote_le","line":129,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_le\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_le</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mp : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L127-L127","name":"Nat.Linear.Poly.denote_eq","line":127,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote_eq\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote_eq</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mp : <span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L122-L125","name":"Nat.Linear.Poly.isNonZero","line":122,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isNonZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isNonZero\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">isNonZero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L117-L120","name":"Nat.Linear.Poly.isZero","line":117,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isZero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isZero\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">isZero</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L111-L115","name":"Nat.Linear.Poly.isNum?","line":111,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isNum?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.isNum?\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">isNum?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L108-L109","name":"Nat.Linear.Poly.cancel","line":108,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancel\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">cancel</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p₁ p₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L106-L106","name":"Nat.Linear.hugeFuel","line":106,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.hugeFuel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.hugeFuel\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">hugeFuel</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L87-L104","name":"Nat.Linear.Poly.cancelAux","line":87,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancelAux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.cancelAux\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">cancelAux</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fuel : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(m₁ m₂ r₁ r₂ : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L83-L85","name":"Nat.Linear.Poly.mul.go","line":83,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.mul.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.mul.go\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">mul</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a> → <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L75-L85","name":"Nat.Linear.Poly.mul","line":75,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.mul\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">mul</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L67-L73","name":"Nat.Linear.Poly.fuse","line":67,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.fuse","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.fuse\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">fuse</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L61-L64","name":"Nat.Linear.Poly.sort.go","line":61,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.sort.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.sort.go\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">sort</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p r : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L60-L65","name":"Nat.Linear.Poly.sort","line":60,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.sort","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.sort\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">sort</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L55-L58","name":"Nat.Linear.Poly.insertSorted","line":55,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.insertSorted","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.insertSorted\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">insertSorted</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\">Nat.Linear.Var</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L50-L53","name":"Nat.Linear.Poly.denote","line":50,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly.denote\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span>.<span class=\"name\">denote</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\">Nat.Linear.Poly</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L48-L48","name":"Nat.Linear.Poly","line":48,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Poly","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Poly\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Poly</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L41-L46","name":"Nat.Linear.Expr.denote","line":41,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.denote\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">denote</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L39-L39","name":"Nat.Linear.instInhabitedExpr","line":39,"kind":"instance","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.instInhabitedExpr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.instInhabitedExpr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">instInhabitedExpr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L38-L38","name":"Nat.Linear.Expr.mulR","line":38,"kind":"ctor","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.mulR","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.mulR\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">mulR</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L37-L37","name":"Nat.Linear.Expr.mulL","line":37,"kind":"ctor","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.mulL","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.mulL\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">mulL</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L36-L36","name":"Nat.Linear.Expr.add","line":36,"kind":"ctor","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.add","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.add\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">add</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a b : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L35-L35","name":"Nat.Linear.Expr.var","line":35,"kind":"ctor","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.var","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.var\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">var</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\">Nat.Linear.Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L34-L34","name":"Nat.Linear.Expr.num","line":34,"kind":"ctor","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.num","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr.num\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span>.<span class=\"name\">num</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(v : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\">Nat.Linear.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L33-L39","name":"Nat.Linear.Expr","line":33,"kind":"inductive","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Expr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Expr\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Expr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L28-L31","name":"Nat.Linear.Var.denote.go","line":28,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Var.denote.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var.denote.go\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Var</span>.<span class=\"name\">denote</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L25-L31","name":"Nat.Linear.Var.denote","line":25,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Var.denote","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var.denote\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Var</span>.<span class=\"name\">denote</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctx : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\">Nat.Linear.Context</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(v : <a href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\">Nat.Linear.Var</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L20-L23","name":"Nat.Linear.fixedVar","line":20,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.fixedVar","doc":"When encoding polynomials. We use `fixedVar` for encoding numerals.\nThe denotation of `fixedVar` is always `1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.fixedVar\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">fixedVar</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L18-L18","name":"Nat.Linear.Context","line":18,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Context","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Context\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/Nat/Linear.lean#L16-L16","name":"Nat.Linear.Var","line":16,"kind":"def","docLink":"./Init/Data/Nat/Linear.html#Nat.Linear.Var","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/Nat/Linear.html#Nat.Linear.Var\"><span class=\"name\">Nat</span>.<span class=\"name\">Linear</span>.<span class=\"name\">Var</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}