{"name":"Init.Data.String.Lemmas","instances":[],"imports":["Init.Data.Char.Lemmas"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/String/Lemmas.lean#L17-L19","name":"String.ne_of_lt","line":17,"kind":"theorem","docLink":"./Init/Data/String/Lemmas.html#String.ne_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/String/Lemmas.html#String.ne_of_lt\"><span class=\"name\">String</span>.<span class=\"name\">ne_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <a href=\"./Init/Prelude.html#String\">String</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/String/Lemmas.lean#L15-L16","name":"String.lt_irrefl","line":15,"kind":"theorem","docLink":"./Init/Data/String/Lemmas.html#String.lt_irrefl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/String/Lemmas.html#String.lt_irrefl\"><span class=\"name\">String</span>.<span class=\"name\">lt_irrefl</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">s</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">s</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/String/Lemmas.lean#L13-L14","name":"String.ne_of_data_ne","line":13,"kind":"theorem","docLink":"./Init/Data/String/Lemmas.html#String.ne_of_data_ne","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/String/Lemmas.html#String.ne_of_data_ne\"><span class=\"name\">String</span>.<span class=\"name\">ne_of_data_ne</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <a href=\"./Init/Prelude.html#String\">String</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.data</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">b</span>.data</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Init/Data/String/Lemmas.lean#L11-L12","name":"String.data_eq_of_eq","line":11,"kind":"theorem","docLink":"./Init/Data/String/Lemmas.html#String.data_eq_of_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Init/Data/String/Lemmas.html#String.data_eq_of_eq\"><span class=\"name\">String</span>.<span class=\"name\">data_eq_of_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <a href=\"./Init/Prelude.html#String\">String</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span>.data</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">b</span>.data</span></span></div></div>"}]}