{"name":"Mathlib.Tactic.Measurability","instances":[],"imports":["Init","Mathlib.Tactic.Measurability.Init","Mathlib.Algebra.Group.Defs"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Measurability.lean#L48-L48","name":"measurability!?","line":48,"kind":"def","docLink":"./Mathlib/Tactic/Measurability.html#measurability!?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Measurability.html#measurability!?\"><span class=\"name\">measurability!?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Measurability.lean#L47-L47","name":"measurability!","line":47,"kind":"def","docLink":"./Mathlib/Tactic/Measurability.html#measurability!","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Measurability.html#measurability!\"><span class=\"name\">measurability!</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Measurability.lean#L41-L43","name":"tacticMeasurability?","line":41,"kind":"def","docLink":"./Mathlib/Tactic/Measurability.html#tacticMeasurability?","doc":"The tactic `measurability?` solves goals of the form `Measurable f`, `AEMeasurable f`,\n`StronglyMeasurable f`, `AEStronglyMeasurable f μ`, or `MeasurableSet s` by applying lemmas tagged\nwith the `measurability` user attribute, and suggests a faster proof script that can be substituted\nfor the tactic call in case of success. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Measurability.html#tacticMeasurability?\"><span class=\"name\">tacticMeasurability?</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Measurability.lean#L32-L34","name":"tacticMeasurability","line":32,"kind":"def","docLink":"./Mathlib/Tactic/Measurability.html#tacticMeasurability","doc":"The tactic `measurability` solves goals of the form `Measurable f`, `AEMeasurable f`,\n`StronglyMeasurable f`, `AEStronglyMeasurable f μ`, or `MeasurableSet s` by applying lemmas tagged\nwith the `measurability` user attribute. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Measurability.html#tacticMeasurability\"><span class=\"name\">tacticMeasurability</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/Measurability.lean#L25-L26","name":"attrMeasurability","line":25,"kind":"def","docLink":"./Mathlib/Tactic/Measurability.html#attrMeasurability","doc":"The `measurability` attribute used to tag measurability statements for the `measurability` tactic."},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/Measurability.html#attrMeasurability\"><span class=\"name\">attrMeasurability</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"}]}