{"name":"Lean.Elab.StructInst","instances":[{"typeNames":["Lean.Elab.Term.StructInst.ExplicitSourceInfo"],"name":"Lean.Elab.Term.StructInst.instInhabitedExplicitSourceInfo","className":"Inhabited"},{"typeNames":["Lean.Elab.Term.StructInst.Source"],"name":"Lean.Elab.Term.StructInst.instInhabitedSource","className":"Inhabited"},{"typeNames":["Lean.Elab.Term.StructInst.FieldLHS"],"name":"Lean.Elab.Term.StructInst.instInhabitedFieldLHS","className":"Inhabited"},{"typeNames":["Lean.Elab.Term.StructInst.FieldLHS"],"name":"Lean.Elab.Term.StructInst.instToFormatFieldLHS","className":"Std.ToFormat"},{"typeNames":["Lean.Elab.Term.StructInst.FieldVal"],"name":"Lean.Elab.Term.StructInst.instInhabitedFieldVal","className":"Inhabited"},{"typeNames":["Lean.Elab.Term.StructInst.Field"],"name":"Lean.Elab.Term.StructInst.instInhabitedField","className":"Inhabited"},{"typeNames":["Lean.Elab.Term.StructInst.Struct"],"name":"Lean.Elab.Term.StructInst.instInhabitedStruct","className":"Inhabited"},{"typeNames":["Lean.Elab.Term.StructInst.Struct"],"name":"Lean.Elab.Term.StructInst.instToFormatStruct","className":"Std.ToFormat"},{"typeNames":["Lean.Elab.Term.StructInst.Struct"],"name":"Lean.Elab.Term.StructInst.instToStringStruct","className":"ToString"},{"typeNames":["Lean.Elab.Term.StructInst.Field"],"name":"Lean.Elab.Term.StructInst.instToFormatFieldStruct","className":"Std.ToFormat"},{"typeNames":["Lean.Elab.Term.StructInst.Field"],"name":"Lean.Elab.Term.StructInst.instToStringFieldStruct","className":"ToString"}],"imports":["Lean.Util.FindExpr","Lean.Parser.Term","Lean.Meta.Structure","Lean.Elab.App","Lean.Elab.Binders","Lean.PrettyPrinter"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L983-L993","name":"Lean.Elab.Term.StructInst.elabStructInst","line":983,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.elabStructInst","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.elabStructInst\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">elabStructInst</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElab\">Lean.Elab.Term.TermElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L950-L953","name":"Lean.Elab.Term.StructInst.DefaultFields.propagate","line":950,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.propagate","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.propagate\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">DefaultFields</span>.<span class=\"name\">propagate</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(struct : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L927-L948","name":"Lean.Elab.Term.StructInst.DefaultFields.propagateLoop","line":927,"kind":"opaque","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.propagateLoop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.propagateLoop\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">DefaultFields</span>.<span class=\"name\">propagateLoop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(hierarchyDepth d : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(struct : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.M\">Lean.Elab.Term.StructInst.DefaultFields.M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L910-L925","name":"Lean.Elab.Term.StructInst.DefaultFields.step","line":910,"kind":"opaque","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.step","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.step\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">DefaultFields</span>.<span class=\"name\">step</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(struct : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.M\">Lean.Elab.Term.StructInst.DefaultFields.M</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L884-L907","name":"Lean.Elab.Term.StructInst.DefaultFields.tryToSynthesizeDefault.loop","line":884,"kind":"opaque","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.tryToSynthesizeDefault.loop","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.tryToSynthesizeDefault.loop\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">DefaultFields</span>.<span class=\"name\">tryToSynthesizeDefault</span>.<span class=\"name\">loop</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(structs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(allStructNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(maxDistance : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fieldName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i dist : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L883-L908","name":"Lean.Elab.Term.StructInst.DefaultFields.tryToSynthesizeDefault","line":883,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.tryToSynthesizeDefault","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.tryToSynthesizeDefault\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">DefaultFields</span>.<span class=\"name\">tryToSynthesizeDefault</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(structs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(allStructNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(maxDistance : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fieldName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(mvarId : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L868-L881","name":"Lean.Elab.Term.StructInst.DefaultFields.reduce.withReduceLCtx","line":868,"kind":"opaque","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.reduce.withReduceLCtx","doc":"Reduce the types and values of the local variables `xs` in the local context.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.reduce.withReduceLCtx\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">DefaultFields</span>.<span class=\"name\">reduce</span>.<span class=\"name\">withReduceLCtx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(structNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(xs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">0</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L826-L881","name":"Lean.Elab.Term.StructInst.DefaultFields.reduce","line":826,"kind":"opaque","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.reduce","doc":"Reduce default value. It performs beta reduction and projections of the given structures. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.reduce\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">DefaultFields</span>.<span class=\"name\">reduce</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(structNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L821-L824","name":"Lean.Elab.Term.StructInst.DefaultFields.mkDefaultValue?","line":821,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.mkDefaultValue?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.mkDefaultValue?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">DefaultFields</span>.<span class=\"name\">mkDefaultValue?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(struct : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(cinfo : <a href=\"./Lean/Declaration.html#Lean.ConstantInfo\">Lean.ConstantInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L795-L819","name":"Lean.Elab.Term.StructInst.DefaultFields.mkDefaultValueAux?","line":795,"kind":"opaque","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.mkDefaultValueAux?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.mkDefaultValueAux?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">DefaultFields</span>.<span class=\"name\">mkDefaultValueAux?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(struct : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a> → <span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L788-L793","name":"Lean.Elab.Term.StructInst.DefaultFields.getFieldValue?","line":788,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.getFieldValue?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.getFieldValue?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">DefaultFields</span>.<span class=\"name\">getFieldValue?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(struct : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fieldName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L785-L786","name":"Lean.Elab.Term.StructInst.DefaultFields.isRoundDone","line":785,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.isRoundDone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.isRoundDone\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">DefaultFields</span>.<span class=\"name\">isRoundDone</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.M\">Lean.Elab.Term.StructInst.DefaultFields.M</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L783-L783","name":"Lean.Elab.Term.StructInst.DefaultFields.M","line":783,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.M","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.M\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">DefaultFields</span>.<span class=\"name\">M</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L778-L781","name":"Lean.Elab.Term.StructInst.DefaultFields.getFieldName","line":778,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.getFieldName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.getFieldName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">DefaultFields</span>.<span class=\"name\">getFieldName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(field : <span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field\">Lean.Elab.Term.StructInst.Field</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L771-L776","name":"Lean.Elab.Term.StructInst.DefaultFields.allDefaultMissing.go","line":771,"kind":"opaque","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.allDefaultMissing.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.allDefaultMissing.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">DefaultFields</span>.<span class=\"name\">allDefaultMissing</span>.<span class=\"name\">go</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/MetavarContext.html#Lean.MonadMCtx\">Lean.MonadMCtx</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(struct : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/State.html#StateT\">StateT</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field\">Lean.Elab.Term.StructInst.Field</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a>)</span>)</span> <span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L768-L776","name":"Lean.Elab.Term.StructInst.DefaultFields.allDefaultMissing","line":768,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.allDefaultMissing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.allDefaultMissing\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">DefaultFields</span>.<span class=\"name\">allDefaultMissing</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/MetavarContext.html#Lean.MonadMCtx\">Lean.MonadMCtx</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(struct : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field\">Lean.Elab.Term.StructInst.Field</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L762-L766","name":"Lean.Elab.Term.StructInst.DefaultFields.findDefaultMissing?","line":762,"kind":"opaque","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.findDefaultMissing?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.findDefaultMissing?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">DefaultFields</span>.<span class=\"name\">findDefaultMissing?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/MetavarContext.html#Lean.MonadMCtx\">Lean.MonadMCtx</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(struct : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field\">Lean.Elab.Term.StructInst.Field</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L755-L760","name":"Lean.Elab.Term.StructInst.DefaultFields.isDefaultMissing?","line":755,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.isDefaultMissing?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.isDefaultMissing?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">DefaultFields</span>.<span class=\"name\">isDefaultMissing?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/MetavarContext.html#Lean.MonadMCtx\">Lean.MonadMCtx</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(field : <span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field\">Lean.Elab.Term.StructInst.Field</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L749-L753","name":"Lean.Elab.Term.StructInst.DefaultFields.getHierarchyDepth","line":749,"kind":"opaque","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.getHierarchyDepth","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.getHierarchyDepth\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">DefaultFields</span>.<span class=\"name\">getHierarchyDepth</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(struct : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L742-L747","name":"Lean.Elab.Term.StructInst.DefaultFields.collectStructNames","line":742,"kind":"opaque","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.collectStructNames","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.collectStructNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">DefaultFields</span>.<span class=\"name\">collectStructNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(struct : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(names : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L740-L740","name":"Lean.Elab.Term.StructInst.DefaultFields.State.progress","line":740,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.State.progress","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.State.progress\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">DefaultFields</span>.<span class=\"name\">State</span>.<span class=\"name\">progress</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.State\">Lean.Elab.Term.StructInst.DefaultFields.State</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L739-L739","name":"Lean.Elab.Term.StructInst.DefaultFields.State.mk","line":739,"kind":"ctor","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.State.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.State.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">DefaultFields</span>.<span class=\"name\">State</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(progress : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.State\">Lean.Elab.Term.StructInst.DefaultFields.State</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L739-L740","name":"Lean.Elab.Term.StructInst.DefaultFields.State","line":739,"kind":"structure","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.State","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.State\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">DefaultFields</span>.<span class=\"name\">State</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L737-L737","name":"Lean.Elab.Term.StructInst.DefaultFields.Context.maxDistance","line":737,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.Context.maxDistance","doc":"Consider the following example:\n```\nstructure A where\n  x : Nat := 1\n\nstructure B extends A where\n  y : Nat := x + 1\n  x := y + 1\n\nstructure C extends B where\n  z : Nat := 2*y\n  x := z + 3\n```\nAnd we are trying to elaborate a structure instance for `C`. There are default values for `x` at `A`, `B`, and `C`.\nWe say the default value at `C` has distance 0, the one at `B` distance 1, and the one at `A` distance 2.\nThe field `maxDistance` specifies the maximum distance considered in a round of Default field computation.\nRemark: since `C` does not set a default value of `y`, the default value at `B` is at distance 0.\n\nThe fixpoint for setting default values works in the following way.\n- Keep computing default values using `maxDistance == 0`.\n- We increase `maxDistance` whenever we failed to compute a new default value in a round.\n- If `maxDistance > 0`, then we interrupt a round as soon as we compute some default value.\n  We use depth-first search.\n- We sign an error if no progress is made when `maxDistance` == structure hierarchy depth (2 in the example above).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.Context.maxDistance\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">DefaultFields</span>.<span class=\"name\">Context</span>.<span class=\"name\">maxDistance</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.Context\">Lean.Elab.Term.StructInst.DefaultFields.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L710-L710","name":"Lean.Elab.Term.StructInst.DefaultFields.Context.allStructNames","line":710,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.Context.allStructNames","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.Context.allStructNames\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">DefaultFields</span>.<span class=\"name\">Context</span>.<span class=\"name\">allStructNames</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.Context\">Lean.Elab.Term.StructInst.DefaultFields.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L709-L709","name":"Lean.Elab.Term.StructInst.DefaultFields.Context.structs","line":709,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.Context.structs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.Context.structs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">DefaultFields</span>.<span class=\"name\">Context</span>.<span class=\"name\">structs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.Context\">Lean.Elab.Term.StructInst.DefaultFields.Context</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L707-L707","name":"Lean.Elab.Term.StructInst.DefaultFields.Context.mk","line":707,"kind":"ctor","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.Context.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.Context.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">DefaultFields</span>.<span class=\"name\">Context</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(structs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(allStructNames : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(maxDistance : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.Context\">Lean.Elab.Term.StructInst.DefaultFields.Context</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L707-L737","name":"Lean.Elab.Term.StructInst.DefaultFields.Context","line":707,"kind":"structure","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.Context","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.DefaultFields.Context\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">DefaultFields</span>.<span class=\"name\">Context</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L644-L644","name":"Lean.Elab.Term.StructInst.ElabStructResult.instMVars","line":644,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ElabStructResult.instMVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ElabStructResult.instMVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">ElabStructResult</span>.<span class=\"name\">instMVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ElabStructResult\">Lean.Elab.Term.StructInst.ElabStructResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L643-L643","name":"Lean.Elab.Term.StructInst.ElabStructResult.struct","line":643,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ElabStructResult.struct","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ElabStructResult.struct\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">ElabStructResult</span>.<span class=\"name\">struct</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ElabStructResult\">Lean.Elab.Term.StructInst.ElabStructResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L642-L642","name":"Lean.Elab.Term.StructInst.ElabStructResult.val","line":642,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ElabStructResult.val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ElabStructResult.val\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">ElabStructResult</span>.<span class=\"name\">val</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ElabStructResult\">Lean.Elab.Term.StructInst.ElabStructResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L641-L641","name":"Lean.Elab.Term.StructInst.ElabStructResult.mk","line":641,"kind":"ctor","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ElabStructResult.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ElabStructResult.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">ElabStructResult</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(val : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(struct : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(instMVars : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ElabStructResult\">Lean.Elab.Term.StructInst.ElabStructResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L641-L644","name":"Lean.Elab.Term.StructInst.ElabStructResult","line":641,"kind":"structure","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ElabStructResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ElabStructResult\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">ElabStructResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L635-L639","name":"Lean.Elab.Term.StructInst.trySynthStructInstance?","line":635,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.trySynthStructInstance?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.trySynthStructInstance?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">trySynthStructInstance?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expectedType : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L632-L633","name":"Lean.Elab.Term.StructInst.throwFailedToElabField","line":632,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.throwFailedToElabField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.throwFailedToElabField\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">throwFailedToElabField</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(fieldName structName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(msgData : <a href=\"./Lean/Message.html#Lean.MessageData\">Lean.MessageData</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L629-L630","name":"Lean.Elab.Term.StructInst.defaultMissing?","line":629,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.defaultMissing?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.defaultMissing?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">defaultMissing?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L626-L627","name":"Lean.Elab.Term.StructInst.markDefaultMissing","line":626,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.markDefaultMissing","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.markDefaultMissing\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">markDefaultMissing</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(e : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L586-L586","name":"Lean.Elab.Term.StructInst.CtorHeaderResult.params","line":586,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.CtorHeaderResult.params","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.CtorHeaderResult.params\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">CtorHeaderResult</span>.<span class=\"name\">params</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.CtorHeaderResult\">Lean.Elab.Term.StructInst.CtorHeaderResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L585-L585","name":"Lean.Elab.Term.StructInst.CtorHeaderResult.instMVars","line":585,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.CtorHeaderResult.instMVars","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.CtorHeaderResult.instMVars\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">CtorHeaderResult</span>.<span class=\"name\">instMVars</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.CtorHeaderResult\">Lean.Elab.Term.StructInst.CtorHeaderResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L584-L584","name":"Lean.Elab.Term.StructInst.CtorHeaderResult.ctorFnType","line":584,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.CtorHeaderResult.ctorFnType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.CtorHeaderResult.ctorFnType\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">CtorHeaderResult</span>.<span class=\"name\">ctorFnType</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.CtorHeaderResult\">Lean.Elab.Term.StructInst.CtorHeaderResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L583-L583","name":"Lean.Elab.Term.StructInst.CtorHeaderResult.ctorFn","line":583,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.CtorHeaderResult.ctorFn","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.CtorHeaderResult.ctorFn\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">CtorHeaderResult</span>.<span class=\"name\">ctorFn</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.CtorHeaderResult\">Lean.Elab.Term.StructInst.CtorHeaderResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L582-L582","name":"Lean.Elab.Term.StructInst.CtorHeaderResult.mk","line":582,"kind":"ctor","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.CtorHeaderResult.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.CtorHeaderResult.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">CtorHeaderResult</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ctorFn ctorFnType : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(instMVars : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(params : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.CtorHeaderResult\">Lean.Elab.Term.StructInst.CtorHeaderResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L582-L586","name":"Lean.Elab.Term.StructInst.CtorHeaderResult","line":582,"kind":"structure","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.CtorHeaderResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.CtorHeaderResult\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">CtorHeaderResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L481-L485","name":"Lean.Elab.Term.StructInst.findField?","line":481,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.findField?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.findField?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">findField?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(fields : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Fields\">Lean.Elab.Term.StructInst.Fields</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fieldName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field\">Lean.Elab.Term.StructInst.Field</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L473-L479","name":"Lean.Elab.Term.StructInst.mkProjStx?","line":473,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.mkProjStx?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.mkProjStx?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">mkProjStx?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(structName fieldName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L387-L389","name":"Lean.Elab.Term.StructInst.Struct.setParams","line":387,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.setParams","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.setParams\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">Struct</span>.<span class=\"name\">setParams</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ps : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L384-L385","name":"Lean.Elab.Term.StructInst.Struct.setFields","line":384,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.setFields","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.setFields\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">Struct</span>.<span class=\"name\">setFields</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fields : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Fields\">Lean.Elab.Term.StructInst.Fields</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L381-L382","name":"Lean.Elab.Term.StructInst.Struct.modifyFields","line":381,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.modifyFields","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.modifyFields\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">Struct</span>.<span class=\"name\">modifyFields</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Fields\">Lean.Elab.Term.StructInst.Fields</a> → <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Fields\">Lean.Elab.Term.StructInst.Fields</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L377-L379","name":"Lean.Elab.Term.StructInst.Struct.modifyFieldsM","line":377,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.modifyFieldsM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.modifyFieldsM\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">Struct</span>.<span class=\"name\">modifyFieldsM</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Fields\">Lean.Elab.Term.StructInst.Fields</a> → <span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Fields\">Lean.Elab.Term.StructInst.Fields</a></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L338-L344","name":"Lean.Elab.Term.StructInst.Field.toSyntax","line":338,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field.toSyntax","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field.toSyntax\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">Field</span>.<span class=\"name\">toSyntax</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field\">Lean.Elab.Term.StructInst.Field</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a></span> → <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L334-L336","name":"Lean.Elab.Term.StructInst.FieldVal.toSyntax","line":334,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldVal.toSyntax","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldVal.toSyntax\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">FieldVal</span>.<span class=\"name\">toSyntax</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldVal\">Lean.Elab.Term.StructInst.FieldVal</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a></span> → <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L329-L332","name":"Lean.Elab.Term.StructInst.FieldLHS.toSyntax","line":329,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS.toSyntax","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS.toSyntax\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">FieldLHS</span>.<span class=\"name\">toSyntax</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(first : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS\">Lean.Elab.Term.StructInst.FieldLHS</a> → <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L318-L318","name":"Lean.Elab.Term.StructInst.instToStringFieldStruct","line":318,"kind":"instance","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instToStringFieldStruct","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instToStringFieldStruct\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">instToStringFieldStruct</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <span class=\"fn\">(<a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field\">Lean.Elab.Term.StructInst.Field</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L317-L317","name":"Lean.Elab.Term.StructInst.instToFormatFieldStruct","line":317,"kind":"instance","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instToFormatFieldStruct","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instToFormatFieldStruct\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">instToFormatFieldStruct</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">Lean.ToFormat</a> <span class=\"fn\">(<a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field\">Lean.Elab.Term.StructInst.Field</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L315-L315","name":"Lean.Elab.Term.StructInst.instToStringStruct","line":315,"kind":"instance","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instToStringStruct","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instToStringStruct\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">instToStringStruct</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/ToString/Basic.html#ToString\">ToString</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L314-L314","name":"Lean.Elab.Term.StructInst.instToFormatStruct","line":314,"kind":"instance","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instToFormatStruct","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instToFormatStruct\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">instToFormatStruct</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">Lean.ToFormat</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L305-L312","name":"Lean.Elab.Term.StructInst.formatStruct","line":305,"kind":"opaque","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.formatStruct","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.formatStruct\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">formatStruct</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Lean.Format</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L298-L303","name":"Lean.Elab.Term.StructInst.formatField","line":298,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.formatField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.formatField\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">formatField</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(formatStruct : <span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a> → <a href=\"./Init/Data/Format/Basic.html#Std.Format\">Lean.Format</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(field : <span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field\">Lean.Elab.Term.StructInst.Field</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Data/Format/Basic.html#Std.Format\">Lean.Format</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L291-L296","name":"Lean.Elab.Term.StructInst.Struct.allDefault","line":291,"kind":"opaque","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.allDefault","doc":"`true` iff all fields of the given structure are marked as `default` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">partial def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.allDefault\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">Struct</span>.<span class=\"name\">allDefault</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L288-L289","name":"Lean.Elab.Term.StructInst.Struct.source","line":288,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.source","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.source\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">Struct</span>.<span class=\"name\">source</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a> → <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Source\">Lean.Elab.Term.StructInst.Source</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L285-L286","name":"Lean.Elab.Term.StructInst.Struct.fields","line":285,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.fields","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.fields\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">Struct</span>.<span class=\"name\">fields</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a> → <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Fields\">Lean.Elab.Term.StructInst.Fields</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L282-L283","name":"Lean.Elab.Term.StructInst.Struct.params","line":282,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.params","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.params\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">Struct</span>.<span class=\"name\">params</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L279-L280","name":"Lean.Elab.Term.StructInst.Struct.structName","line":279,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.structName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.structName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">Struct</span>.<span class=\"name\">structName</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a> → <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L276-L277","name":"Lean.Elab.Term.StructInst.Struct.ref","line":276,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.ref","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">Struct</span>.<span class=\"name\">ref</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a> → <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L274-L274","name":"Lean.Elab.Term.StructInst.Fields","line":274,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Fields","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Fields\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">Fields</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L272-L272","name":"Lean.Elab.Term.StructInst.instInhabitedStruct","line":272,"kind":"instance","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedStruct","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedStruct\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">instInhabitedStruct</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L270-L271","name":"Lean.Elab.Term.StructInst.Struct.mk","line":270,"kind":"ctor","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.mk","doc":"Remark: the field `params` is use for default value propagation. It is initially empty, and then set at `elabStruct`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">Struct</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ref : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(structName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(params : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(fields : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field\">Lean.Elab.Term.StructInst.Field</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(source : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Source\">Lean.Elab.Term.StructInst.Source</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\">Lean.Elab.Term.StructInst.Struct</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L269-L272","name":"Lean.Elab.Term.StructInst.Struct","line":269,"kind":"inductive","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Struct\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">Struct</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L265-L267","name":"Lean.Elab.Term.StructInst.Field.isSimple","line":265,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field.isSimple","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field.isSimple\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">Field</span>.<span class=\"name\">isSimple</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field\">Lean.Elab.Term.StructInst.Field</a> <span class=\"fn\">σ</span></span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L263-L263","name":"Lean.Elab.Term.StructInst.instInhabitedField","line":263,"kind":"instance","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedField","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedField\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">instInhabitedField</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a✝ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field\">Lean.Elab.Term.StructInst.Field</a> <span class=\"fn\">a✝</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L262-L262","name":"Lean.Elab.Term.StructInst.Field.expr?","line":262,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field.expr?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field.expr?\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">Field</span>.<span class=\"name\">expr?</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field\">Lean.Elab.Term.StructInst.Field</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L261-L261","name":"Lean.Elab.Term.StructInst.Field.val","line":261,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field.val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field.val\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">Field</span>.<span class=\"name\">val</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field\">Lean.Elab.Term.StructInst.Field</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldVal\">Lean.Elab.Term.StructInst.FieldVal</a> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L260-L260","name":"Lean.Elab.Term.StructInst.Field.lhs","line":260,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field.lhs","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field.lhs\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">Field</span>.<span class=\"name\">lhs</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field\">Lean.Elab.Term.StructInst.Field</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS\">Lean.Elab.Term.StructInst.FieldLHS</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L259-L259","name":"Lean.Elab.Term.StructInst.Field.ref","line":259,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field.ref","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field.ref\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">Field</span>.<span class=\"name\">ref</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field\">Lean.Elab.Term.StructInst.Field</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L258-L258","name":"Lean.Elab.Term.StructInst.Field.mk","line":258,"kind":"ctor","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">Field</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ref : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(lhs : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS\">Lean.Elab.Term.StructInst.FieldLHS</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(val : <span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldVal\">Lean.Elab.Term.StructInst.FieldVal</a> <span class=\"fn\">σ</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(expr? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field\">Lean.Elab.Term.StructInst.Field</a> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L258-L263","name":"Lean.Elab.Term.StructInst.Field","line":258,"kind":"structure","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Field\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">Field</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(σ : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L256-L256","name":"Lean.Elab.Term.StructInst.instInhabitedFieldVal","line":256,"kind":"instance","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedFieldVal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedFieldVal\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">instInhabitedFieldVal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a✝ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldVal\">Lean.Elab.Term.StructInst.FieldVal</a> <span class=\"fn\">a✝</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L255-L255","name":"Lean.Elab.Term.StructInst.FieldVal.default","line":255,"kind":"ctor","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldVal.default","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldVal.default\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">FieldVal</span>.<span class=\"name\">default</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldVal\">Lean.Elab.Term.StructInst.FieldVal</a> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L254-L254","name":"Lean.Elab.Term.StructInst.FieldVal.nested","line":254,"kind":"ctor","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldVal.nested","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldVal.nested\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">FieldVal</span>.<span class=\"name\">nested</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldVal\">Lean.Elab.Term.StructInst.FieldVal</a> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L253-L253","name":"Lean.Elab.Term.StructInst.FieldVal.term","line":253,"kind":"ctor","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldVal.term","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldVal.term\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">FieldVal</span>.<span class=\"name\">term</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldVal\">Lean.Elab.Term.StructInst.FieldVal</a> <span class=\"fn\">σ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L252-L256","name":"Lean.Elab.Term.StructInst.FieldVal","line":252,"kind":"inductive","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldVal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldVal\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">FieldVal</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(σ : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L246-L250","name":"Lean.Elab.Term.StructInst.instToFormatFieldLHS","line":246,"kind":"instance","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instToFormatFieldLHS","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instToFormatFieldLHS\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">instToFormatFieldLHS</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Format/Basic.html#Std.ToFormat\">Lean.ToFormat</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS\">Lean.Elab.Term.StructInst.FieldLHS</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L244-L244","name":"Lean.Elab.Term.StructInst.instInhabitedFieldLHS","line":244,"kind":"instance","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedFieldLHS","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedFieldLHS\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">instInhabitedFieldLHS</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS\">Lean.Elab.Term.StructInst.FieldLHS</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L243-L243","name":"Lean.Elab.Term.StructInst.FieldLHS.modifyOp","line":243,"kind":"ctor","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS.modifyOp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS.modifyOp\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">FieldLHS</span>.<span class=\"name\">modifyOp</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ref index : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS\">Lean.Elab.Term.StructInst.FieldLHS</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L242-L242","name":"Lean.Elab.Term.StructInst.FieldLHS.fieldIndex","line":242,"kind":"ctor","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS.fieldIndex","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS.fieldIndex\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">FieldLHS</span>.<span class=\"name\">fieldIndex</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ref : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(idx : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS\">Lean.Elab.Term.StructInst.FieldLHS</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L241-L241","name":"Lean.Elab.Term.StructInst.FieldLHS.fieldName","line":241,"kind":"ctor","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS.fieldName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS.fieldName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">FieldLHS</span>.<span class=\"name\">fieldName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ref : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS\">Lean.Elab.Term.StructInst.FieldLHS</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L240-L244","name":"Lean.Elab.Term.StructInst.FieldLHS","line":240,"kind":"inductive","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.FieldLHS\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">FieldLHS</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L113-L115","name":"Lean.Elab.Term.StructInst.Source.isNone","line":113,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Source.isNone","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Source.isNone\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">Source</span>.<span class=\"name\">isNone</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Source\">Lean.Elab.Term.StructInst.Source</a> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L111-L111","name":"Lean.Elab.Term.StructInst.instInhabitedSource","line":111,"kind":"instance","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedSource","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedSource\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">instInhabitedSource</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Source\">Lean.Elab.Term.StructInst.Source</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L110-L110","name":"Lean.Elab.Term.StructInst.Source.implicit","line":110,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Source.implicit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Source.implicit\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">Source</span>.<span class=\"name\">implicit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Source\">Lean.Elab.Term.StructInst.Source</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L109-L109","name":"Lean.Elab.Term.StructInst.Source.explicit","line":109,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Source.explicit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Source.explicit\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">Source</span>.<span class=\"name\">explicit</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Source\">Lean.Elab.Term.StructInst.Source</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceInfo\">Lean.Elab.Term.StructInst.ExplicitSourceInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L108-L108","name":"Lean.Elab.Term.StructInst.Source.mk","line":108,"kind":"ctor","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Source.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Source.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">Source</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(explicit : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceInfo\">Lean.Elab.Term.StructInst.ExplicitSourceInfo</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(implicit : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Source\">Lean.Elab.Term.StructInst.Source</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L108-L111","name":"Lean.Elab.Term.StructInst.Source","line":108,"kind":"structure","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Source","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.Source\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">Source</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L106-L106","name":"Lean.Elab.Term.StructInst.instInhabitedExplicitSourceInfo","line":106,"kind":"instance","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedExplicitSourceInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.instInhabitedExplicitSourceInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">instInhabitedExplicitSourceInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceInfo\">Lean.Elab.Term.StructInst.ExplicitSourceInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L105-L105","name":"Lean.Elab.Term.StructInst.ExplicitSourceInfo.structName","line":105,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceInfo.structName","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceInfo.structName\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">ExplicitSourceInfo</span>.<span class=\"name\">structName</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceInfo\">Lean.Elab.Term.StructInst.ExplicitSourceInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L104-L104","name":"Lean.Elab.Term.StructInst.ExplicitSourceInfo.stx","line":104,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceInfo.stx","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceInfo.stx\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">ExplicitSourceInfo</span>.<span class=\"name\">stx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceInfo\">Lean.Elab.Term.StructInst.ExplicitSourceInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L103-L103","name":"Lean.Elab.Term.StructInst.ExplicitSourceInfo.mk","line":103,"kind":"ctor","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceInfo.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">ExplicitSourceInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(structName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceInfo\">Lean.Elab.Term.StructInst.ExplicitSourceInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L103-L106","name":"Lean.Elab.Term.StructInst.ExplicitSourceInfo","line":103,"kind":"structure","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceInfo","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.ExplicitSourceInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">ExplicitSourceInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L38-L49","name":"Lean.Elab.Term.StructInst.expandStructInstFieldAbbrev","line":38,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.expandStructInstFieldAbbrev","doc":"Expand field abbreviations. Example: `{ x, y := 0 }` expands to `{ x := x, y := 0 }` "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.expandStructInstFieldAbbrev\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">expandStructInstFieldAbbrev</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Macro\">Lean.Macro</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/StructInst.lean#L29-L36","name":"Lean.Elab.Term.StructInst.expandStructInstExpectedType","line":29,"kind":"def","docLink":"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.expandStructInstExpectedType","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/StructInst.html#Lean.Elab.Term.StructInst.expandStructInstExpectedType\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Term</span>.<span class=\"name\">StructInst</span>.<span class=\"name\">expandStructInstExpectedType</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Macro\">Lean.Macro</a></div></div>"}]}