{"name":"Mathlib.Tactic.ToExpr","instances":[{"typeNames":["Option"],"name":"Lean.instToExprOptionOfToLevel","className":"Lean.ToExpr"},{"typeNames":["List"],"name":"Lean.instToExprListOfToLevel","className":"Lean.ToExpr"},{"typeNames":["Array"],"name":"Lean.instToExprArrayOfToLevel","className":"Lean.ToExpr"},{"typeNames":["Prod"],"name":"Lean.instToExprProdOfToLevel","className":"Lean.ToExpr"},{"typeNames":["System.FilePath"],"name":"Lean.instToExprFilePath_mathlib","className":"Lean.ToExpr"},{"typeNames":["ULift"],"name":"Mathlib.instToExprULiftOfToLevel","className":"Lean.ToExpr"},{"typeNames":["PUnit"],"name":"Mathlib.instToExprPUnitOfToLevel","className":"Lean.ToExpr"},{"typeNames":["String.Pos"],"name":"Mathlib.instToExprPos_mathlib","className":"Lean.ToExpr"},{"typeNames":["Substring"],"name":"Mathlib.instToExprSubstring_mathlib","className":"Lean.ToExpr"},{"typeNames":["Lean.SourceInfo"],"name":"Mathlib.instToExprSourceInfo_mathlib","className":"Lean.ToExpr"},{"typeNames":["Lean.Syntax.Preresolved"],"name":"Mathlib.instToExprPreresolved_mathlib","className":"Lean.ToExpr"},{"typeNames":["Lean.Syntax"],"name":"Mathlib.instToExprSyntax_mathlib","className":"Lean.ToExpr"},{"typeNames":["Lean.MData"],"name":"Mathlib.instToExprMData_mathlib","className":"Lean.ToExpr"},{"typeNames":["Lean.FVarId"],"name":"Mathlib.instToExprFVarId_mathlib","className":"Lean.ToExpr"},{"typeNames":["Lean.MVarId"],"name":"Mathlib.instToExprMVarId_mathlib","className":"Lean.ToExpr"},{"typeNames":["Lean.LevelMVarId"],"name":"Mathlib.instToExprLevelMVarId_mathlib","className":"Lean.ToExpr"},{"typeNames":["Lean.Level"],"name":"Mathlib.instToExprLevel_mathlib","className":"Lean.ToExpr"},{"typeNames":["Lean.BinderInfo"],"name":"Mathlib.instToExprBinderInfo_mathlib","className":"Lean.ToExpr"},{"typeNames":["Lean.Literal"],"name":"Mathlib.instToExprLiteral_mathlib","className":"Lean.ToExpr"},{"typeNames":["Lean.Expr"],"name":"Mathlib.instToExprExpr_mathlib","className":"Lean.ToExpr"}],"imports":["Init","Mathlib.Tactic.DeriveToExpr","Mathlib.Util.WhatsNew"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/ToExpr.lean#L95-L95","name":"Mathlib.instToExprExpr_mathlib","line":95,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprExpr_mathlib","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprExpr_mathlib\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprExpr_mathlib</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/ToExpr.lean#L94-L94","name":"Mathlib.instToExprLiteral_mathlib","line":94,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprLiteral_mathlib","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprLiteral_mathlib\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprLiteral_mathlib</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Lean/Expr.html#Lean.Literal\">Lean.Literal</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/ToExpr.lean#L93-L93","name":"Mathlib.instToExprBinderInfo_mathlib","line":93,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprBinderInfo_mathlib","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprBinderInfo_mathlib\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprBinderInfo_mathlib</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Lean/Expr.html#Lean.BinderInfo\">Lean.BinderInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/ToExpr.lean#L92-L92","name":"Mathlib.instToExprLevel_mathlib","line":92,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprLevel_mathlib","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprLevel_mathlib\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprLevel_mathlib</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Lean/Level.html#Lean.Level\">Lean.Level</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/ToExpr.lean#L91-L91","name":"Mathlib.instToExprLevelMVarId_mathlib","line":91,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprLevelMVarId_mathlib","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprLevelMVarId_mathlib\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprLevelMVarId_mathlib</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Lean/Level.html#Lean.LevelMVarId\">Lean.LevelMVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/ToExpr.lean#L90-L90","name":"Mathlib.instToExprMVarId_mathlib","line":90,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprMVarId_mathlib","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprMVarId_mathlib\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprMVarId_mathlib</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/ToExpr.lean#L89-L89","name":"Mathlib.instToExprFVarId_mathlib","line":89,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprFVarId_mathlib","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprFVarId_mathlib\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprFVarId_mathlib</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Lean/Expr.html#Lean.FVarId\">Lean.FVarId</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/ToExpr.lean#L85-L87","name":"Mathlib.instToExprMData_mathlib","line":85,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprMData_mathlib","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprMData_mathlib\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprMData_mathlib</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Lean/Expr.html#Lean.MData\">Lean.MData</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/ToExpr.lean#L66-L66","name":"Mathlib.instToExprSyntax_mathlib","line":66,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprSyntax_mathlib","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprSyntax_mathlib\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprSyntax_mathlib</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/ToExpr.lean#L65-L65","name":"Mathlib.instToExprPreresolved_mathlib","line":65,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprPreresolved_mathlib","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprPreresolved_mathlib\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprPreresolved_mathlib</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Init/Prelude.html#Lean.Syntax.Preresolved\">Lean.Syntax.Preresolved</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/ToExpr.lean#L64-L64","name":"Mathlib.instToExprSourceInfo_mathlib","line":64,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprSourceInfo_mathlib","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprSourceInfo_mathlib\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprSourceInfo_mathlib</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Init/Prelude.html#Lean.SourceInfo\">Lean.SourceInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/ToExpr.lean#L63-L63","name":"Mathlib.instToExprSubstring_mathlib","line":63,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprSubstring_mathlib","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprSubstring_mathlib\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprSubstring_mathlib</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Init/Prelude.html#Substring\">Substring</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/ToExpr.lean#L62-L62","name":"Mathlib.instToExprPos_mathlib","line":62,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprPos_mathlib","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprPos_mathlib\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprPos_mathlib</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Init/Prelude.html#String.Pos\">String.Pos</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/ToExpr.lean#L57-L60","name":"Mathlib.instToExprPUnitOfToLevel","line":57,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprPUnitOfToLevel","doc":"Hand-written instance since `PUnit` is a `Sort` rather than a `Type`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprPUnitOfToLevel\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprPUnitOfToLevel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel\">Lean.ToLevel.{u}</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Init/Prelude.html#PUnit\">PUnit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/ToExpr.lean#L54-L54","name":"Mathlib.instToExprULiftOfToLevel","line":54,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprULiftOfToLevel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Mathlib.instToExprULiftOfToLevel\"><span class=\"name\">Mathlib</span>.<span class=\"name\">instToExprULiftOfToLevel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α✝ : <a href=\"./foundational_types.html\">Type</a> s}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">α✝</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel\">Lean.ToLevel.{r}</a>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel\">Lean.ToLevel.{s}</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#ULift\">ULift</a> <span class=\"fn\">α✝</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/ToExpr.lean#L45-L45","name":"Lean.instToExprFilePath_mathlib","line":45,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Lean.instToExprFilePath_mathlib","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Lean.instToExprFilePath_mathlib\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprFilePath_mathlib</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/ToExpr.lean#L43-L43","name":"Lean.instToExprProdOfToLevel","line":43,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Lean.instToExprProdOfToLevel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Lean.instToExprProdOfToLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprProdOfToLevel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α✝ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β✝ : <a href=\"./foundational_types.html\">Type</a> v}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">α✝</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">β✝</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel\">Lean.ToLevel.{u}</a>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel\">Lean.ToLevel.{v}</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">(<span class=\"fn\">α✝</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\">β✝</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/ToExpr.lean#L35-L38","name":"Lean.instToExprArrayOfToLevel","line":35,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Lean.instToExprArrayOfToLevel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Lean.instToExprArrayOfToLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprArrayOfToLevel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel\">Lean.ToLevel.{u}</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/ToExpr.lean#L30-L30","name":"Lean.instToExprListOfToLevel","line":30,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Lean.instToExprListOfToLevel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Lean.instToExprListOfToLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprListOfToLevel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α✝ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">α✝</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel\">Lean.ToLevel.{u}</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">α✝</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/Tactic/ToExpr.lean#L25-L25","name":"Lean.instToExprOptionOfToLevel","line":25,"kind":"instance","docLink":"./Mathlib/Tactic/ToExpr.html#Lean.instToExprOptionOfToLevel","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/Tactic/ToExpr.html#Lean.instToExprOptionOfToLevel\"><span class=\"name\">Lean</span>.<span class=\"name\">instToExprOptionOfToLevel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α✝ : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">α✝</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<a href=\"./Mathlib/Tactic/ToLevel.html#Lean.ToLevel\">Lean.ToLevel.{u}</a>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/ToExpr.html#Lean.ToExpr\">Lean.ToExpr</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α✝</span>)</span></span></div></div>"}]}