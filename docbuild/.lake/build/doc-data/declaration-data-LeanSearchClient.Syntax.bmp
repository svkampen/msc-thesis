{"name":"LeanSearchClient.Syntax","instances":[{"typeNames":["LeanSearchClient.SearchResult"],"name":"LeanSearchClient.instReprSearchResult","className":"Repr"},{"typeNames":["LeanSearchClient.SearchServer"],"name":"LeanSearchClient.instInhabitedSearchServer","className":"Inhabited"}],"imports":["Init","Lean.Elab.Tactic.Meta","Lean.Meta.Tactic.TryThis","LeanSearchClient.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L374-L381","name":"LeanSearchClient.moogleTacticImpl","line":374,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleTacticImpl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleTacticImpl\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">moogleTacticImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Tactic\">Lean.Elab.Tactic.Tactic</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L370-L372","name":"LeanSearchClient.moogle_search_tactic","line":370,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.moogle_search_tactic","doc":"Search [Moogle](https://www.moogle.ai/api/search) from within Lean.\nQueries should be a string that ends with a `.` or `?`. This works as a command, as a term\nand as a tactic as in the following examples. In tactic mode, only valid tactics are displayed.\n\n```lean\n#moogle \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample := #moogle \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample : 3 ≤ 5 := by\n  #moogle \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n  sorry\n```\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.moogle_search_tactic\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">moogle_search_tactic</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L361-L368","name":"LeanSearchClient.leanSearchTacticImpl","line":361,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchTacticImpl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchTacticImpl\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">leanSearchTacticImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.Tactic\">Lean.Elab.Tactic.Tactic</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L357-L359","name":"LeanSearchClient.leansearch_search_tactic","line":357,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.leansearch_search_tactic","doc":"Search [LeanSearch](https://leansearch.net/) from within Lean.\nQueries should be a string that ends with a `.` or `?`. This works as a command, as a term\nand as a tactic as in the following examples. In tactic mode, only valid tactics are displayed.\n\n```lean\n#leansearch \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample := #leansearch \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample : 3 ≤ 5 := by\n  #leansearch \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n  sorry\n```\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.leansearch_search_tactic\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">leansearch_search_tactic</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L346-L355","name":"LeanSearchClient.moogleTermImpl","line":346,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleTermImpl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleTermImpl\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">moogleTermImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElab\">Lean.Elab.Term.TermElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L343-L344","name":"LeanSearchClient.moogle_search_term","line":343,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.moogle_search_term","doc":"Search [Moogle](https://www.moogle.ai/api/search) from within Lean.\nQueries should be a string that ends with a `.` or `?`. This works as a command, as a term\nand as a tactic as in the following examples. In tactic mode, only valid tactics are displayed.\n\n```lean\n#moogle \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample := #moogle \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample : 3 ≤ 5 := by\n  #moogle \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n  sorry\n```\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.moogle_search_term\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">moogle_search_term</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L332-L341","name":"LeanSearchClient.leanSearchTermImpl","line":332,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchTermImpl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchTermImpl\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">leanSearchTermImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElab\">Lean.Elab.Term.TermElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L329-L330","name":"LeanSearchClient.leansearch_search_term","line":329,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.leansearch_search_term","doc":"Search [LeanSearch](https://leansearch.net/) from within Lean.\nQueries should be a string that ends with a `.` or `?`. This works as a command, as a term\nand as a tactic as in the following examples. In tactic mode, only valid tactics are displayed.\n\n```lean\n#leansearch \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample := #leansearch \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample : 3 ≤ 5 := by\n  #leansearch \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n  sorry\n```\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.leansearch_search_term\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">leansearch_search_term</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L320-L327","name":"LeanSearchClient.moogleCommandImpl","line":320,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleCommandImpl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleCommandImpl\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">moogleCommandImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElab\">Lean.Elab.Command.CommandElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L304-L318","name":"LeanSearchClient.moogle_search_cmd","line":304,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.moogle_search_cmd","doc":"Search [Moogle](https://www.moogle.ai/api/search) from within Lean.\nQueries should be a string that ends with a `.` or `?`. This works as a command, as a term\nand as a tactic as in the following examples. In tactic mode, only valid tactics are displayed.\n\n```lean\n#moogle \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample := #moogle \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample : 3 ≤ 5 := by\n  #moogle \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n  sorry\n```\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.moogle_search_cmd\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">moogle_search_cmd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L295-L302","name":"LeanSearchClient.leanSearchCommandImpl","line":295,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchCommandImpl","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchCommandImpl\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">leanSearchCommandImpl</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElab\">Lean.Elab.Command.CommandElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L279-L293","name":"LeanSearchClient.leansearch_search_cmd","line":279,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.leansearch_search_cmd","doc":"Search [LeanSearch](https://leansearch.net/) from within Lean.\nQueries should be a string that ends with a `.` or `?`. This works as a command, as a term\nand as a tactic as in the following examples. In tactic mode, only valid tactics are displayed.\n\n```lean\n#leansearch \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample := #leansearch \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n\nexample : 3 ≤ 5 := by\n  #leansearch \"If a natural number n is less than m, then the successor of n is less than the successor of m.\"\n  sorry\n```\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.leansearch_search_cmd\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">leansearch_search_cmd</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.ParserDescr\">Lean.ParserDescr</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L252-L274","name":"LeanSearchClient.SearchServer.searchTacticSuggestions","line":252,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.searchTacticSuggestions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.searchTacticSuggestions\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">searchTacticSuggestions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ss : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">LeanSearchClient.SearchServer</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`str</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Tactic/Basic.html#Lean.Elab.Tactic.TacticM\">Lean.Elab.Tactic.TacticM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L243-L250","name":"LeanSearchClient.SearchServer.searchTermSuggestions","line":243,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.searchTermSuggestions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.searchTermSuggestions\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">searchTermSuggestions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ss : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">LeanSearchClient.SearchServer</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`str</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L235-L241","name":"LeanSearchClient.SearchServer.searchCommandSuggestions","line":235,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.searchCommandSuggestions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.searchCommandSuggestions\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">searchCommandSuggestions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ss : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">LeanSearchClient.SearchServer</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.TSyntax\">Lean.TSyntax</a> <span class=\"fn\">`str</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L230-L232","name":"LeanSearchClient.SearchServer.incompleteSearchQuery","line":230,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.incompleteSearchQuery","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.incompleteSearchQuery\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">incompleteSearchQuery</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ss : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">LeanSearchClient.SearchServer</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L221-L228","name":"LeanSearchClient.SearchServer.getTacticSuggestionGroups","line":221,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.getTacticSuggestionGroups","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.getTacticSuggestionGroups\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">getTacticSuggestionGroups</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ss : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">LeanSearchClient.SearchServer</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(num_results : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Lean.Meta.Tactic.TryThis.Suggestion</a></span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L216-L219","name":"LeanSearchClient.SearchServer.getTermSuggestions","line":216,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.getTermSuggestions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.getTermSuggestions\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">getTermSuggestions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ss : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">LeanSearchClient.SearchServer</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(num_results : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Lean.Meta.Tactic.TryThis.Suggestion</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L211-L214","name":"LeanSearchClient.SearchServer.getCommandSuggestions","line":211,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.getCommandSuggestions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.getCommandSuggestions\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">getCommandSuggestions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ss : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">LeanSearchClient.SearchServer</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(num_results : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Lean.Meta.Tactic.TryThis.Suggestion</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L207-L207","name":"LeanSearchClient.instInhabitedSearchServer","line":207,"kind":"instance","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.instInhabitedSearchServer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.instInhabitedSearchServer\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">instInhabitedSearchServer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">LeanSearchClient.SearchServer</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L203-L205","name":"LeanSearchClient.moogleServer","line":203,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleServer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleServer\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">moogleServer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">LeanSearchClient.SearchServer</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L199-L201","name":"LeanSearchClient.leanSearchServer","line":199,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchServer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchServer\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">leanSearchServer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">LeanSearchClient.SearchServer</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L197-L197","name":"LeanSearchClient.SearchServer.queryNum","line":197,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.queryNum","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.queryNum\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">queryNum</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">LeanSearchClient.SearchServer</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L196-L196","name":"LeanSearchClient.SearchServer.query","line":196,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.query","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.query\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">query</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">LeanSearchClient.SearchServer</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">LeanSearchClient.SearchResult</a>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L195-L195","name":"LeanSearchClient.SearchServer.cmd","line":195,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.cmd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.cmd\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">cmd</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">LeanSearchClient.SearchServer</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L194-L194","name":"LeanSearchClient.SearchServer.url","line":194,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.url","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.url\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">url</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">LeanSearchClient.SearchServer</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L193-L193","name":"LeanSearchClient.SearchServer.name","line":193,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.name","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.name\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">LeanSearchClient.SearchServer</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L192-L192","name":"LeanSearchClient.SearchServer.mk","line":192,"kind":"ctor","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer.mk\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(name url cmd : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(query : <span class=\"fn\"><a href=\"./Init/Prelude.html#String\">String</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">Nat</a> → <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">LeanSearchClient.SearchResult</a>)</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(queryNum : <span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\">LeanSearchClient.SearchServer</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L192-L197","name":"LeanSearchClient.SearchServer","line":192,"kind":"structure","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchServer\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchServer</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L179-L190","name":"LeanSearchClient.checkTactic","line":179,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.checkTactic","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.checkTactic\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">checkTactic</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(target : <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tac : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Term.html#Lean.Elab.Term.TermElabM\">Lean.Elab.TermElabM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L170-L177","name":"LeanSearchClient.defaultTerm","line":170,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.defaultTerm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.defaultTerm\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">defaultTerm</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(expectedType? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <a href=\"./Lean/Expr.html#Lean.Expr\">Lean.Expr</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L165-L168","name":"LeanSearchClient.queryMoogle","line":165,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.queryMoogle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.queryMoogle\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">queryMoogle</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(num_results : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">LeanSearchClient.SearchResult</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L160-L163","name":"LeanSearchClient.queryLeanSearch","line":160,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.queryLeanSearch","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.queryLeanSearch\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">queryLeanSearch</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(num_results : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">LeanSearchClient.SearchResult</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L149-L155","name":"LeanSearchClient.SearchResult.toTacticSuggestions","line":149,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.toTacticSuggestions","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.toTacticSuggestions\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">toTacticSuggestions</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sr : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">LeanSearchClient.SearchResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Meta/Tactic/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Lean.Meta.Tactic.TryThis.Suggestion</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L144-L147","name":"LeanSearchClient.SearchResult.toTermSuggestion","line":144,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.toTermSuggestion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.toTermSuggestion\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">toTermSuggestion</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sr : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">LeanSearchClient.SearchResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Lean.Meta.Tactic.TryThis.Suggestion</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L138-L142","name":"LeanSearchClient.SearchResult.toCommandSuggestion","line":138,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.toCommandSuggestion","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.toCommandSuggestion\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">toCommandSuggestion</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(sr : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">LeanSearchClient.SearchResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Meta/Tactic/TryThis.html#Lean.Meta.Tactic.TryThis.Suggestion\">Lean.Meta.Tactic.TryThis.Suggestion</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L129-L136","name":"LeanSearchClient.SearchResult.ofLoogleJson?","line":129,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.ofLoogleJson?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.ofLoogleJson?\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">ofLoogleJson?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(js : <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">LeanSearchClient.SearchResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L113-L127","name":"LeanSearchClient.SearchResult.ofMoogleJson?","line":113,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.ofMoogleJson?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.ofMoogleJson?\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">ofMoogleJson?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(js : <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">LeanSearchClient.SearchResult</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L102-L111","name":"LeanSearchClient.SearchResult.ofLeanSearchJson?","line":102,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.ofLeanSearchJson?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.ofLeanSearchJson?\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">ofLeanSearchJson?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(js : <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">LeanSearchClient.SearchResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L98-L98","name":"LeanSearchClient.instReprSearchResult","line":98,"kind":"instance","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.instReprSearchResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.instReprSearchResult\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">instReprSearchResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/Repr.html#Repr\">Repr</a> <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">LeanSearchClient.SearchResult</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L97-L97","name":"LeanSearchClient.SearchResult.kind?","line":97,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.kind?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.kind?\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">kind?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">LeanSearchClient.SearchResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L96-L96","name":"LeanSearchClient.SearchResult.doc_url?","line":96,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.doc_url?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.doc_url?\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">doc_url?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">LeanSearchClient.SearchResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L95-L95","name":"LeanSearchClient.SearchResult.docString?","line":95,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.docString?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.docString?\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">docString?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">LeanSearchClient.SearchResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L94-L94","name":"LeanSearchClient.SearchResult.type?","line":94,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.type?","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.type?\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">type?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">LeanSearchClient.SearchResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L93-L93","name":"LeanSearchClient.SearchResult.name","line":93,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.name","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.name\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">name</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">LeanSearchClient.SearchResult</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#String\">String</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L92-L92","name":"LeanSearchClient.SearchResult.mk","line":92,"kind":"ctor","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult.mk\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(type? docString? doc_url? kind? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#String\">String</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\">LeanSearchClient.SearchResult</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L92-L98","name":"LeanSearchClient.SearchResult","line":92,"kind":"structure","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.SearchResult\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">SearchResult</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L68-L89","name":"LeanSearchClient.getMoogleQueryJson","line":68,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.getMoogleQueryJson","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.getMoogleQueryJson\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">getMoogleQueryJson</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(num_results : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">6</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L49-L66","name":"LeanSearchClient.getLeanSearchQueryJson","line":49,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.getLeanSearchQueryJson","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.getLeanSearchQueryJson\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">getLeanSearchQueryJson</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(s : <a href=\"./Init/Prelude.html#String\">String</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(num_results : <a href=\"./Init/Prelude.html#Nat\">Nat</a> := <span class=\"fn\">6</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L46-L47","name":"LeanSearchClient.moogleCache","line":46,"kind":"opaque","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleCache","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.moogleCache\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">moogleCache</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#String\">String</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L43-L44","name":"LeanSearchClient.leanSearchCache","line":43,"kind":"opaque","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchCache","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">opaque</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.leanSearchCache\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">leanSearchCache</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO.Ref\">IO.Ref</a> <span class=\"fn\">(<a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#String\">String</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Json/Basic.html#Lean.Json\">Lean.Json</a>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/LeanSearchClient/blob/d7caecce0d0f003fd5e9cce9a61f1dd6ba83142b/LeanSearchClient/Syntax.lean#L40-L41","name":"LeanSearchClient.useragent","line":40,"kind":"def","docLink":"./LeanSearchClient/Syntax.html#LeanSearchClient.useragent","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./LeanSearchClient/Syntax.html#LeanSearchClient.useragent\"><span class=\"name\">LeanSearchClient</span>.<span class=\"name\">useragent</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/CoreM.html#Lean.Core.CoreM\">Lean.CoreM</a> <a href=\"./Init/Prelude.html#String\">String</a></span></div></div>"}]}