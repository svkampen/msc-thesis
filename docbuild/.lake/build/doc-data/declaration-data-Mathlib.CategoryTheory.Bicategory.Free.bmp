{"name":"Mathlib.CategoryTheory.Bicategory.Free","instances":[{"typeNames":["CategoryTheory.FreeBicategory"],"name":"CategoryTheory.instInhabitedFreeBicategory","className":"Inhabited"},{"typeNames":["CategoryTheory.FreeBicategory.Hom"],"name":"CategoryTheory.FreeBicategory.instInhabitedHomOfHom","className":"Inhabited"},{"typeNames":["CategoryTheory.FreeBicategory"],"name":"CategoryTheory.FreeBicategory.quiver","className":"Quiver"},{"typeNames":["CategoryTheory.FreeBicategory"],"name":"CategoryTheory.FreeBicategory.categoryStruct","className":"CategoryTheory.CategoryStruct"},{"typeNames":["Quiver.Hom"],"name":"CategoryTheory.FreeBicategory.homCategory","className":"CategoryTheory.Category"},{"typeNames":["CategoryTheory.FreeBicategory"],"name":"CategoryTheory.FreeBicategory.bicategory","className":"CategoryTheory.Bicategory"}],"imports":["Init","Mathlib.CategoryTheory.Bicategory.Functor.Pseudofunctor"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L326-L326","name":"CategoryTheory.FreeBicategory.lift_toPrelaxFunctor_toPrelaxFunctorStruct_toPrefunctor_obj","line":326,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift_toPrelaxFunctor_toPrelaxFunctorStruct_toPrefunctor_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift_toPrelaxFunctor_toPrelaxFunctorStruct_toPrefunctor_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">lift_toPrelaxFunctor_toPrelaxFunctorStruct_toPrefunctor_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory\">CategoryTheory.Bicategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor\">⥤q</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a✝ : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift\">CategoryTheory.FreeBicategory.lift</a> <span class=\"fn\">F</span>)</span>.obj</span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">a✝</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L326-L326","name":"CategoryTheory.FreeBicategory.lift_toPrelaxFunctor_toPrelaxFunctorStruct_map₂","line":326,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift_toPrelaxFunctor_toPrelaxFunctorStruct_map₂","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift_toPrelaxFunctor_toPrelaxFunctorStruct_map₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">lift_toPrelaxFunctor_toPrelaxFunctorStruct_map₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory\">CategoryTheory.Bicategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor\">⥤q</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a✝ b✝ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f✝ g✝ : <span class=\"fn\"><span class=\"fn\">a✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b✝</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot\">Quot</a> <span class=\"fn\">CategoryTheory.FreeBicategory.Rel</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift\">CategoryTheory.FreeBicategory.lift</a> <span class=\"fn\">F</span>)</span>.map₂</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.lift\">Quot.lift</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom₂\">CategoryTheory.FreeBicategory.liftHom₂</a> <span class=\"fn\">F</span>)</span> <span class=\"fn\">⋯</span> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L326-L326","name":"CategoryTheory.FreeBicategory.lift_mapId","line":326,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift_mapId","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift_mapId\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">lift_mapId</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory\">CategoryTheory.Bicategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor\">⥤q</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x✝ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift\">CategoryTheory.FreeBicategory.lift</a> <span class=\"fn\">F</span>)</span>.mapId</span> <span class=\"fn\">x✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.refl\">CategoryTheory.Iso.refl</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><span class=\"fn\">F</span>.obj</span>, <span class=\"fn\">map</span> := <span class=\"fn\">fun {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>} =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom\">CategoryTheory.FreeBicategory.liftHom</a> <span class=\"fn\">F</span></span></span>,\n          <span class=\"fn\">map₂</span> := <span class=\"fn\">fun {<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>} {<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>} =&gt;\n            <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.lift\">Quot.lift</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom₂\">CategoryTheory.FreeBicategory.liftHom₂</a> <span class=\"fn\">F</span>)</span> <span class=\"fn\">⋯</span></span></span>,\n          <span class=\"fn\">map₂_id</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map₂_comp</span> := <span class=\"fn\">⋯</span> }</span>.map</span>\n      <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">x✝</span>)</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L326-L326","name":"CategoryTheory.FreeBicategory.lift_mapComp","line":326,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift_mapComp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift_mapComp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">lift_mapComp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory\">CategoryTheory.Bicategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor\">⥤q</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a✝ b✝ c✝ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x✝ : <span class=\"fn\"><span class=\"fn\">a✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b✝</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x✝¹ : <span class=\"fn\"><span class=\"fn\">b✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c✝</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift\">CategoryTheory.FreeBicategory.lift</a> <span class=\"fn\">F</span>)</span>.mapComp</span> <span class=\"fn\">x✝</span> <span class=\"fn\">x✝¹</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Iso.html#CategoryTheory.Iso.refl\">CategoryTheory.Iso.refl</a>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">{ <span class=\"fn\">obj</span> := <span class=\"fn\"><span class=\"fn\">F</span>.obj</span>, <span class=\"fn\">map</span> := <span class=\"fn\">fun {<span class=\"fn\">X </span><span class=\"fn\">Y</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>} =&gt; <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom\">CategoryTheory.FreeBicategory.liftHom</a> <span class=\"fn\">F</span></span></span>,\n          <span class=\"fn\">map₂</span> := <span class=\"fn\">fun {<span class=\"fn\">a </span><span class=\"fn\">b</span> : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>} {<span class=\"fn\">f </span><span class=\"fn\">g</span> : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>} =&gt;\n            <span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.lift\">Quot.lift</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom₂\">CategoryTheory.FreeBicategory.liftHom₂</a> <span class=\"fn\">F</span>)</span> <span class=\"fn\">⋯</span></span></span>,\n          <span class=\"fn\">map₂_id</span> := <span class=\"fn\">⋯</span>, <span class=\"fn\">map₂_comp</span> := <span class=\"fn\">⋯</span> }</span>.map</span>\n      <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">x✝</span> <span class=\"fn\">x✝¹</span>)</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L326-L326","name":"CategoryTheory.FreeBicategory.lift_toPrelaxFunctor_toPrelaxFunctorStruct_toPrefunctor_map","line":326,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift_toPrelaxFunctor_toPrelaxFunctorStruct_toPrefunctor_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift_toPrelaxFunctor_toPrelaxFunctorStruct_toPrefunctor_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">lift_toPrelaxFunctor_toPrelaxFunctorStruct_toPrefunctor_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory\">CategoryTheory.Bicategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor\">⥤q</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{X✝ Y✝ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a✝ : <span class=\"fn\"><span class=\"fn\">X✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">Y✝</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift\">CategoryTheory.FreeBicategory.lift</a> <span class=\"fn\">F</span>)</span>.map</span> <span class=\"fn\">a✝</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom\">CategoryTheory.FreeBicategory.liftHom</a> <span class=\"fn\">F</span> <span class=\"fn\">a✝</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L323-L346","name":"CategoryTheory.FreeBicategory.lift","line":323,"kind":"def","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift","doc":"A prefunctor from a quiver `B` to a bicategory `C` can be lifted to a pseudofunctor from\n`free_bicategory B` to `C`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.lift\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">lift</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory\">CategoryTheory.Bicategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor\">⥤q</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Functor/Pseudofunctor.html#CategoryTheory.Pseudofunctor\">CategoryTheory.Pseudofunctor</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span>)</span> <span class=\"fn\">C</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L320-L321","name":"CategoryTheory.FreeBicategory.liftHom₂_congr","line":320,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom₂_congr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom₂_congr\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">liftHom₂_congr</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory\">CategoryTheory.Bicategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor\">⥤q</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f g : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{η θ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">η</span> <span class=\"fn\">θ</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom₂\">CategoryTheory.FreeBicategory.liftHom₂</a> <span class=\"fn\">F</span> <span class=\"fn\">η</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom₂\">CategoryTheory.FreeBicategory.liftHom₂</a> <span class=\"fn\">F</span> <span class=\"fn\">θ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L304-L316","name":"CategoryTheory.FreeBicategory.liftHom₂","line":304,"kind":"def","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom₂","doc":"Auxiliary definition for `lift`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">liftHom₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory\">CategoryTheory.Bicategory</a> <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor\">⥤q</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f g : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span> →\n  <span class=\"fn\">(<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom\">CategoryTheory.FreeBicategory.liftHom</a> <span class=\"fn\">F</span> <span class=\"fn\">f</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom\">CategoryTheory.FreeBicategory.liftHom</a> <span class=\"fn\">F</span> <span class=\"fn\">g</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L292-L295","name":"CategoryTheory.FreeBicategory.liftHom_comp","line":292,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">liftHom_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct\">CategoryTheory.CategoryStruct.{v₂, u₂}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor\">⥤q</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b c : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom\">CategoryTheory.FreeBicategory.liftHom</a> <span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom\">CategoryTheory.FreeBicategory.liftHom</a> <span class=\"fn\">F</span> <span class=\"fn\">f</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom\">CategoryTheory.FreeBicategory.liftHom</a> <span class=\"fn\">F</span> <span class=\"fn\">g</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L288-L290","name":"CategoryTheory.FreeBicategory.liftHom_id","line":288,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">liftHom_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct\">CategoryTheory.CategoryStruct.{v₂, u₂}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor\">⥤q</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom\">CategoryTheory.FreeBicategory.liftHom</a> <span class=\"fn\">F</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">a</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L281-L286","name":"CategoryTheory.FreeBicategory.liftHom","line":281,"kind":"def","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom","doc":"Auxiliary definition for `lift`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.liftHom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">liftHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u₁}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{C : <a href=\"./foundational_types.html\">Type</a> u₂}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct\">CategoryTheory.CategoryStruct.{v₂, u₂}</a>     <span class=\"fn\">C</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(F : <span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor\">⥤q</a> <span class=\"fn\">C</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span>)</span> → <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">a</span></span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">F</span>.obj</span> <span class=\"fn\">b</span></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L269-L269","name":"CategoryTheory.FreeBicategory.of_map","line":269,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.of_map","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.of_map\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">of_map</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x✝ x✝¹ : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">x✝</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">x✝¹</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.FreeBicategory.of</span>.map</span> <span class=\"fn\">f</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.of\">CategoryTheory.FreeBicategory.Hom.of</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L269-L269","name":"CategoryTheory.FreeBicategory.of_obj","line":269,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.of_obj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.of_obj\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">of_obj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">CategoryTheory.FreeBicategory.of</span>.obj</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#id\">id</a> <span class=\"fn\">a</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L268-L272","name":"CategoryTheory.FreeBicategory.of","line":268,"kind":"def","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.of","doc":"Canonical prefunctor from `B` to `free_bicategory B`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.of\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">B</span> <a href=\"./Mathlib/Combinatorics/Quiver/Prefunctor.html#Prefunctor\">⥤q</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L264-L266","name":"CategoryTheory.FreeBicategory.mk_right_unitor_inv","line":264,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_right_unitor_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_right_unitor_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">mk_right_unitor_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">CategoryTheory.FreeBicategory.Rel</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.right_unitor_inv\">CategoryTheory.FreeBicategory.Hom₂.right_unitor_inv</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory.rightUnitor\">CategoryTheory.Bicategory.rightUnitor</a> <span class=\"fn\">f</span>)</span>.inv</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L260-L262","name":"CategoryTheory.FreeBicategory.mk_right_unitor_hom","line":260,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_right_unitor_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_right_unitor_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">mk_right_unitor_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">CategoryTheory.FreeBicategory.Rel</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.right_unitor\">CategoryTheory.FreeBicategory.Hom₂.right_unitor</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory.rightUnitor\">CategoryTheory.Bicategory.rightUnitor</a> <span class=\"fn\">f</span>)</span>.hom</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L256-L258","name":"CategoryTheory.FreeBicategory.mk_left_unitor_inv","line":256,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_left_unitor_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_left_unitor_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">mk_left_unitor_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">CategoryTheory.FreeBicategory.Rel</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.left_unitor_inv\">CategoryTheory.FreeBicategory.Hom₂.left_unitor_inv</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory.leftUnitor\">CategoryTheory.Bicategory.leftUnitor</a> <span class=\"fn\">f</span>)</span>.inv</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L252-L254","name":"CategoryTheory.FreeBicategory.mk_left_unitor_hom","line":252,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_left_unitor_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_left_unitor_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">mk_left_unitor_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">CategoryTheory.FreeBicategory.Rel</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.left_unitor\">CategoryTheory.FreeBicategory.Hom₂.left_unitor</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory.leftUnitor\">CategoryTheory.Bicategory.leftUnitor</a> <span class=\"fn\">f</span>)</span>.hom</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L248-L250","name":"CategoryTheory.FreeBicategory.mk_associator_inv","line":248,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_associator_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_associator_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">mk_associator_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b c d : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">CategoryTheory.FreeBicategory.Rel</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator_inv\">CategoryTheory.FreeBicategory.Hom₂.associator_inv</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory.associator\">CategoryTheory.Bicategory.associator</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span>)</span>.inv</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L244-L246","name":"CategoryTheory.FreeBicategory.mk_associator_hom","line":244,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_associator_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_associator_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">mk_associator_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b c d : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">CategoryTheory.FreeBicategory.Rel</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator\">CategoryTheory.FreeBicategory.Hom₂.associator</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>   <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory.associator\">CategoryTheory.Bicategory.associator</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span>)</span>.hom</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L240-L242","name":"CategoryTheory.FreeBicategory.mk_id","line":240,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">mk_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Quot.mk\">Quot.mk</a> <span class=\"fn\">CategoryTheory.FreeBicategory.Rel</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id\">CategoryTheory.FreeBicategory.Hom₂.id</a> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L237-L238","name":"CategoryTheory.FreeBicategory.comp_def","line":237,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.comp_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.comp_def\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">comp_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b c : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.comp\">CategoryTheory.FreeBicategory.Hom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L226-L229","name":"CategoryTheory.FreeBicategory.mk_whisker_right","line":226,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_whisker_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_whisker_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">mk_whisker_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b c : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f g : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">h</span> <span class=\"fn\">η</span>)</span>.mk</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory.whiskerRight\">CategoryTheory.Bicategory.whiskerRight</a> <span class=\"fn\"><span class=\"fn\">η</span>.mk</span> <span class=\"fn\">h</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L221-L224","name":"CategoryTheory.FreeBicategory.mk_whisker_left","line":221,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_whisker_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_whisker_left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">mk_whisker_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b c : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g h : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">f</span> <span class=\"fn\">η</span>)</span>.mk</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory.whiskerLeft\">CategoryTheory.Bicategory.whiskerLeft</a> <span class=\"fn\">f</span> <span class=\"fn\"><span class=\"fn\">η</span>.mk</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L216-L219","name":"CategoryTheory.FreeBicategory.mk_vcomp","line":216,"kind":"theorem","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_vcomp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.mk_vcomp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">mk_vcomp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f g h : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(θ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">η</span>.vcomp</span> <span class=\"fn\">θ</span>)</span>.mk</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\"><span class=\"fn\">η</span>.mk</span> <span class=\"fn\"><span class=\"fn\">θ</span>.mk</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L213-L214","name":"CategoryTheory.FreeBicategory.Hom₂.mk","line":213,"kind":"def","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.mk\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom₂</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f g : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">f</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">g</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L162-L209","name":"CategoryTheory.FreeBicategory.bicategory","line":162,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.bicategory","doc":"Bicategory structure on the free bicategory. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.bicategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">bicategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Basic.html#CategoryTheory.Bicategory\">CategoryTheory.Bicategory</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L148-L160","name":"CategoryTheory.FreeBicategory.homCategory","line":148,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.homCategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.homCategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">homCategory</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.Category\">CategoryTheory.Category.{max u v, max u v}</a>               <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L144-L144","name":"CategoryTheory.FreeBicategory.Rel.triangle","line":144,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.triangle","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.triangle\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">triangle</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b c : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator\">CategoryTheory.FreeBicategory.Hom₂.associator</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.id\">CategoryTheory.FreeBicategory.Hom.id</a> <span class=\"fn\">b</span>)</span> <span class=\"fn\">g</span>)</span>.vcomp</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.left_unitor\">CategoryTheory.FreeBicategory.Hom₂.left_unitor</a> <span class=\"fn\">g</span>)</span>)</span>)</span>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">g</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.right_unitor\">CategoryTheory.FreeBicategory.Hom₂.right_unitor</a> <span class=\"fn\">f</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L141-L143","name":"CategoryTheory.FreeBicategory.Rel.pentagon","line":141,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.pentagon","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.pentagon\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">pentagon</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b c d e : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">d</span> <span class=\"fn\">e</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">i</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator\">CategoryTheory.FreeBicategory.Hom₂.associator</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span>)</span>)</span>.vcomp</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator\">CategoryTheory.FreeBicategory.Hom₂.associator</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span>.comp</span> <span class=\"fn\">h</span>)</span> <span class=\"fn\">i</span>)</span>.vcomp</span>\n      <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator\">CategoryTheory.FreeBicategory.Hom₂.associator</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span> <span class=\"fn\">i</span>)</span>)</span>)</span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator\">CategoryTheory.FreeBicategory.Hom₂.associator</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.comp</span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">h</span> <span class=\"fn\">i</span>)</span>.vcomp</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator\">CategoryTheory.FreeBicategory.Hom₂.associator</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">h</span>.comp</span> <span class=\"fn\">i</span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L140-L140","name":"CategoryTheory.FreeBicategory.Rel.right_unitor_inv_hom","line":140,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.right_unitor_inv_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.right_unitor_inv_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">right_unitor_inv_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.right_unitor_inv\">CategoryTheory.FreeBicategory.Hom₂.right_unitor_inv</a> <span class=\"fn\">f</span>)</span>.vcomp</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.right_unitor\">CategoryTheory.FreeBicategory.Hom₂.right_unitor</a> <span class=\"fn\">f</span>)</span>)</span>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id\">CategoryTheory.FreeBicategory.Hom₂.id</a> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L139-L139","name":"CategoryTheory.FreeBicategory.Rel.right_unitor_hom_inv","line":139,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.right_unitor_hom_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.right_unitor_hom_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">right_unitor_hom_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.right_unitor\">CategoryTheory.FreeBicategory.Hom₂.right_unitor</a> <span class=\"fn\">f</span>)</span>.vcomp</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.right_unitor_inv\">CategoryTheory.FreeBicategory.Hom₂.right_unitor_inv</a> <span class=\"fn\">f</span>)</span>)</span>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id\">CategoryTheory.FreeBicategory.Hom₂.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.comp</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.id\">CategoryTheory.FreeBicategory.Hom.id</a> <span class=\"fn\">b</span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L138-L138","name":"CategoryTheory.FreeBicategory.Rel.left_unitor_inv_hom","line":138,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.left_unitor_inv_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.left_unitor_inv_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">left_unitor_inv_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.left_unitor_inv\">CategoryTheory.FreeBicategory.Hom₂.left_unitor_inv</a> <span class=\"fn\">f</span>)</span>.vcomp</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.left_unitor\">CategoryTheory.FreeBicategory.Hom₂.left_unitor</a> <span class=\"fn\">f</span>)</span>)</span>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id\">CategoryTheory.FreeBicategory.Hom₂.id</a> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L137-L137","name":"CategoryTheory.FreeBicategory.Rel.left_unitor_hom_inv","line":137,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.left_unitor_hom_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.left_unitor_hom_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">left_unitor_hom_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.left_unitor\">CategoryTheory.FreeBicategory.Hom₂.left_unitor</a> <span class=\"fn\">f</span>)</span>.vcomp</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.left_unitor_inv\">CategoryTheory.FreeBicategory.Hom₂.left_unitor_inv</a> <span class=\"fn\">f</span>)</span>)</span>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id\">CategoryTheory.FreeBicategory.Hom₂.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.id\">CategoryTheory.FreeBicategory.Hom.id</a> <span class=\"fn\">a</span>)</span>.comp</span> <span class=\"fn\">f</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L135-L136","name":"CategoryTheory.FreeBicategory.Rel.associator_inv_hom","line":135,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.associator_inv_hom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.associator_inv_hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">associator_inv_hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b c d : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator_inv\">CategoryTheory.FreeBicategory.Hom₂.associator_inv</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span>)</span>.vcomp</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator\">CategoryTheory.FreeBicategory.Hom₂.associator</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span>)</span>)</span>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id\">CategoryTheory.FreeBicategory.Hom₂.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.comp</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span>.comp</span> <span class=\"fn\">h</span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L133-L134","name":"CategoryTheory.FreeBicategory.Rel.associator_hom_inv","line":133,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.associator_hom_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.associator_hom_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">associator_hom_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b c d : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator\">CategoryTheory.FreeBicategory.Hom₂.associator</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span>)</span>.vcomp</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator_inv\">CategoryTheory.FreeBicategory.Hom₂.associator_inv</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span>)</span>)</span>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id\">CategoryTheory.FreeBicategory.Hom₂.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.comp</span> <span class=\"fn\">g</span>)</span>.comp</span> <span class=\"fn\">h</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L131-L132","name":"CategoryTheory.FreeBicategory.Rel.whisker_exchange","line":131,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_exchange","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_exchange\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">whisker_exchange</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b c : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h i : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(θ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">h</span> <span class=\"fn\">i</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">f</span> <span class=\"fn\">θ</span>)</span>.vcomp</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">i</span> <span class=\"fn\">η</span>)</span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">h</span> <span class=\"fn\">η</span>)</span>.vcomp</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">g</span> <span class=\"fn\">θ</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L129-L130","name":"CategoryTheory.FreeBicategory.Rel.whisker_assoc","line":129,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">whisker_assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b c d : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g g' : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">g</span> <span class=\"fn\">g'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">h</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">f</span> <span class=\"fn\">η</span>)</span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator\">CategoryTheory.FreeBicategory.Hom₂.associator</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span>)</span>.vcomp</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">h</span> <span class=\"fn\">η</span>)</span>)</span>.vcomp</span>\n      <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator_inv\">CategoryTheory.FreeBicategory.Hom₂.associator_inv</a> <span class=\"fn\">f</span> <span class=\"fn\">g'</span> <span class=\"fn\">h</span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L127-L128","name":"CategoryTheory.FreeBicategory.Rel.whisker_right_comp","line":127,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_right_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_right_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">whisker_right_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b c d : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f f' : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">f'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">g</span>.comp</span> <span class=\"fn\">h</span>)</span> <span class=\"fn\">η</span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator_inv\">CategoryTheory.FreeBicategory.Hom₂.associator_inv</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span>)</span>.vcomp</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">h</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">g</span> <span class=\"fn\">η</span>)</span>)</span>.vcomp</span>\n      <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator\">CategoryTheory.FreeBicategory.Hom₂.associator</a> <span class=\"fn\">f'</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L126-L126","name":"CategoryTheory.FreeBicategory.Rel.whisker_right_id","line":126,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_right_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_right_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">whisker_right_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.id\">CategoryTheory.FreeBicategory.Hom.id</a> <span class=\"fn\">b</span>)</span> <span class=\"fn\">η</span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.right_unitor\">CategoryTheory.FreeBicategory.Hom₂.right_unitor</a> <span class=\"fn\">f</span>)</span>.vcomp</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">η</span>.vcomp</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.right_unitor_inv\">CategoryTheory.FreeBicategory.Hom₂.right_unitor_inv</a> <span class=\"fn\">g</span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L124-L125","name":"CategoryTheory.FreeBicategory.Rel.comp_whisker_right","line":124,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.comp_whisker_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.comp_whisker_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">comp_whisker_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b c : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f g h : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(i : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(θ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">i</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">η</span>.vcomp</span> <span class=\"fn\">θ</span>)</span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">i</span> <span class=\"fn\">η</span>)</span>.vcomp</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">i</span> <span class=\"fn\">θ</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L123-L123","name":"CategoryTheory.FreeBicategory.Rel.id_whisker_right","line":123,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.id_whisker_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.id_whisker_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">id_whisker_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b c : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">g</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id\">CategoryTheory.FreeBicategory.Hom₂.id</a> <span class=\"fn\">f</span>)</span>)</span>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id\">CategoryTheory.FreeBicategory.Hom₂.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.comp</span> <span class=\"fn\">g</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L121-L122","name":"CategoryTheory.FreeBicategory.Rel.whisker_right","line":121,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">whisker_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b c : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(η η' : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">η</span> <span class=\"fn\">η'</span></span> →\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">h</span> <span class=\"fn\">η</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\">CategoryTheory.FreeBicategory.Hom₂.whisker_right</a> <span class=\"fn\">h</span> <span class=\"fn\">η'</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L119-L120","name":"CategoryTheory.FreeBicategory.Rel.comp_whisker_left","line":119,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.comp_whisker_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.comp_whisker_left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">comp_whisker_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b c d : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{h h' : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">c</span> <span class=\"fn\">d</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">h</span> <span class=\"fn\">h'</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.comp</span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">η</span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator\">CategoryTheory.FreeBicategory.Hom₂.associator</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h</span>)</span>.vcomp</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">g</span> <span class=\"fn\">η</span>)</span>)</span>.vcomp</span>\n      <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator_inv\">CategoryTheory.FreeBicategory.Hom₂.associator_inv</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span> <span class=\"fn\">h'</span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L118-L118","name":"CategoryTheory.FreeBicategory.Rel.id_whisker_left","line":118,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.id_whisker_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.id_whisker_left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">id_whisker_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.id\">CategoryTheory.FreeBicategory.Hom.id</a> <span class=\"fn\">a</span>)</span> <span class=\"fn\">η</span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.left_unitor\">CategoryTheory.FreeBicategory.Hom₂.left_unitor</a> <span class=\"fn\">f</span>)</span>.vcomp</span>\n    <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">η</span>.vcomp</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.left_unitor_inv\">CategoryTheory.FreeBicategory.Hom₂.left_unitor_inv</a> <span class=\"fn\">g</span>)</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L116-L117","name":"CategoryTheory.FreeBicategory.Rel.whisker_left_comp","line":116,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_left_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_left_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">whisker_left_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b c : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g h i : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(θ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">h</span> <span class=\"fn\">i</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">f</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">η</span>.vcomp</span> <span class=\"fn\">θ</span>)</span>)</span>\n  <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">f</span> <span class=\"fn\">η</span>)</span>.vcomp</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">f</span> <span class=\"fn\">θ</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L115-L115","name":"CategoryTheory.FreeBicategory.Rel.whisker_left_id","line":115,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_left_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_left_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">whisker_left_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b c : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id\">CategoryTheory.FreeBicategory.Hom₂.id</a> <span class=\"fn\">g</span>)</span>)</span>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id\">CategoryTheory.FreeBicategory.Hom₂.id</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">f</span>.comp</span> <span class=\"fn\">g</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L113-L114","name":"CategoryTheory.FreeBicategory.Rel.whisker_left","line":113,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.whisker_left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">whisker_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b c : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g h : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(η η' : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">η</span> <span class=\"fn\">η'</span></span> →\n  <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">f</span> <span class=\"fn\">η</span>)</span>\n    <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\">CategoryTheory.FreeBicategory.Hom₂.whisker_left</a> <span class=\"fn\">f</span> <span class=\"fn\">η'</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L111-L112","name":"CategoryTheory.FreeBicategory.Rel.assoc","line":111,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.assoc","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.assoc\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">assoc</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f g h i : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(θ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ι : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">h</span> <span class=\"fn\">i</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">η</span>.vcomp</span> <span class=\"fn\">θ</span>)</span>.vcomp</span> <span class=\"fn\">ι</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">η</span>.vcomp</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">θ</span>.vcomp</span> <span class=\"fn\">ι</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L110-L110","name":"CategoryTheory.FreeBicategory.Rel.comp_id","line":110,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.comp_id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.comp_id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">comp_id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">η</span>.vcomp</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id\">CategoryTheory.FreeBicategory.Hom₂.id</a> <span class=\"fn\">g</span>)</span>)</span> <span class=\"fn\">η</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L109-L109","name":"CategoryTheory.FreeBicategory.Rel.id_comp","line":109,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.id_comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.id_comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">id_comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id\">CategoryTheory.FreeBicategory.Hom₂.id</a> <span class=\"fn\">f</span>)</span>.vcomp</span> <span class=\"fn\">η</span>)</span> <span class=\"fn\">η</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L107-L108","name":"CategoryTheory.FreeBicategory.Rel.vcomp_left","line":107,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.vcomp_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.vcomp_left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">vcomp_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f g h : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η₁ η₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(θ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">η₁</span> <span class=\"fn\">η₂</span></span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">η₁</span>.vcomp</span> <span class=\"fn\">θ</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">η₂</span>.vcomp</span> <span class=\"fn\">θ</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L105-L106","name":"CategoryTheory.FreeBicategory.Rel.vcomp_right","line":105,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.vcomp_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel.vcomp_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span>.<span class=\"name\">vcomp_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f g h : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(θ₁ θ₂ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">θ₁</span> <span class=\"fn\">θ₂</span></span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\">CategoryTheory.FreeBicategory.Rel</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">η</span>.vcomp</span> <span class=\"fn\">θ₁</span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">η</span>.vcomp</span> <span class=\"fn\">θ₂</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L103-L144","name":"CategoryTheory.FreeBicategory.Rel","line":103,"kind":"inductive","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel","doc":"Relations between 2-morphisms in the free bicategory. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Rel\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Rel</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f g : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span> → <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span> → <a href=\"./foundational_types.html\">Prop</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L78-L78","name":"CategoryTheory.FreeBicategory.Hom₂.left_unitor_inv","line":78,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.left_unitor_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.left_unitor_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom₂</span>.<span class=\"name\">left_unitor_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">a</span>)</span> <span class=\"fn\">f</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L77-L77","name":"CategoryTheory.FreeBicategory.Hom₂.left_unitor","line":77,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.left_unitor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.left_unitor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom₂</span>.<span class=\"name\">left_unitor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">a</span>)</span> <span class=\"fn\">f</span>)</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L76-L76","name":"CategoryTheory.FreeBicategory.Hom₂.right_unitor_inv","line":76,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.right_unitor_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.right_unitor_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom₂</span>.<span class=\"name\">right_unitor_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">b</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L75-L75","name":"CategoryTheory.FreeBicategory.Hom₂.right_unitor","line":75,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.right_unitor","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.right_unitor\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom₂</span>.<span class=\"name\">right_unitor</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.id\">CategoryTheory.CategoryStruct.id</a> <span class=\"fn\">b</span>)</span>)</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L73-L74","name":"CategoryTheory.FreeBicategory.Hom₂.associator_inv","line":73,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator_inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator_inv\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom₂</span>.<span class=\"name\">associator_inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b c d : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span>)</span>)</span>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L71-L72","name":"CategoryTheory.FreeBicategory.Hom₂.associator","line":71,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.associator\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom₂</span>.<span class=\"name\">associator</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b c d : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">d</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">h</span>)</span>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L70-L70","name":"CategoryTheory.FreeBicategory.Hom₂.whisker_right","line":70,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_right\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom₂</span>.<span class=\"name\">whisker_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b c : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f g : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.comp\">CategoryTheory.FreeBicategory.Hom.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">h</span>)</span>\n  <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.comp\">CategoryTheory.FreeBicategory.Hom.comp</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L68-L69","name":"CategoryTheory.FreeBicategory.Hom₂.whisker_left","line":68,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.whisker_left\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom₂</span>.<span class=\"name\">whisker_left</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b c : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{g h : <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">c</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct.comp\">CategoryTheory.CategoryStruct.comp</a> <span class=\"fn\">f</span> <span class=\"fn\">h</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L67-L67","name":"CategoryTheory.FreeBicategory.Hom₂.vcomp","line":67,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.vcomp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom₂</span>.<span class=\"name\">vcomp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f g h : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">g</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(θ : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">g</span> <span class=\"fn\">h</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">h</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L66-L66","name":"CategoryTheory.FreeBicategory.Hom₂.id","line":66,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂.id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom₂</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\">CategoryTheory.FreeBicategory.Hom₂</a> <span class=\"fn\">f</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L62-L78","name":"CategoryTheory.FreeBicategory.Hom₂","line":62,"kind":"inductive","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂","doc":"Representatives of 2-morphisms in the free bicategory. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom₂\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom₂</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span>)</span> → <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span>)</span> → <a href=\"./foundational_types.html\">Type</a> (max u v)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L58-L60","name":"CategoryTheory.FreeBicategory.categoryStruct","line":58,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.categoryStruct","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.categoryStruct\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">categoryStruct</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Category/Basic.html#CategoryTheory.CategoryStruct\">CategoryTheory.CategoryStruct.{max u v, u}</a>         <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L55-L56","name":"CategoryTheory.FreeBicategory.quiver","line":55,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.quiver","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.quiver\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">quiver</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L52-L53","name":"CategoryTheory.FreeBicategory.instInhabitedHomOfHom","line":52,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.instInhabitedHomOfHom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.instInhabitedHomOfHom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">instInhabitedHomOfHom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a b : <span class=\"fn\">B</span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span>)</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L50-L50","name":"CategoryTheory.FreeBicategory.Hom.comp","line":50,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.comp","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.comp\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom</span>.<span class=\"name\">comp</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b c : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(g : <span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">b</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">c</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L49-L49","name":"CategoryTheory.FreeBicategory.Hom.id","line":49,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.id","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.id\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom</span>.<span class=\"name\">id</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">B</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">a</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L48-L48","name":"CategoryTheory.FreeBicategory.Hom.of","line":48,"kind":"ctor","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.of","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom.of\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom</span>.<span class=\"name\">of</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a b : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver.Hom\">⟶</a> <span class=\"fn\">b</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\">CategoryTheory.FreeBicategory.Hom</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L46-L50","name":"CategoryTheory.FreeBicategory.Hom","line":46,"kind":"inductive","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom","doc":"1-morphisms in the free bicategory. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">inductive</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory.Hom\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span>.<span class=\"name\">Hom</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Combinatorics/Quiver/Basic.html#Quiver\">Quiver</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">B</span> → <span class=\"fn\">B</span> → <a href=\"./foundational_types.html\">Type</a> (max u v)</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L36-L38","name":"CategoryTheory.instInhabitedFreeBicategory","line":36,"kind":"instance","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.instInhabitedFreeBicategory","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.instInhabitedFreeBicategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">instInhabitedFreeBicategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">B</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Inhabited\">Inhabited</a> <span class=\"fn\">(<a href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\">CategoryTheory.FreeBicategory</a> <span class=\"fn\">B</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/CategoryTheory/Bicategory/Free.lean#L32-L34","name":"CategoryTheory.FreeBicategory","line":32,"kind":"def","docLink":"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory","doc":"Free bicategory over a quiver. Its objects are the same as those in the underlying quiver. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/CategoryTheory/Bicategory/Free.html#CategoryTheory.FreeBicategory\"><span class=\"name\">CategoryTheory</span>.<span class=\"name\">FreeBicategory</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(B : <a href=\"./foundational_types.html\">Type</a> u)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a> u</div></div>"}]}