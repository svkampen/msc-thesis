{"name":"Lean.Server.References","instances":[{"typeNames":["Lean.Server.Ilean"],"name":"Lean.Server.instFromJsonIlean","className":"Lean.FromJson"},{"typeNames":["Lean.Server.Ilean"],"name":"Lean.Server.instToJsonIlean","className":"Lean.ToJson"}],"imports":["Lean.Data.Lsp.Internal","Lean.Server.Utils"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L510-L530","name":"Lean.Server.References.definitionsMatching","line":510,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.definitionsMatching","doc":"Yields all definitions matching the given `filter`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.definitionsMatching\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">definitionsMatching</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/References.html#Lean.Server.References\">Lean.Server.References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(srcSearchPath : <a href=\"./Lean/Util/Path.html#Lean.SearchPath\">Lean.SearchPath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(filter : <span class=\"fn\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(maxAmount? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span> := <span class=\"fn\">none</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Location\">Lean.Lsp.Location</a>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L498-L508","name":"Lean.Server.References.definitionOf?","line":498,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.definitionOf?","doc":"Yields the definition location of `ident`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.definitionOf?\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">definitionOf?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/References.html#Lean.Server.References\">Lean.Server.References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ident : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lean.Lsp.RefIdent</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(srcSearchPath : <a href=\"./Lean/Util/Path.html#Lean.SearchPath\">Lean.SearchPath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo\">Lean.Server.References.DocumentRefInfo</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L482-L496","name":"Lean.Server.References.referringTo","line":482,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.referringTo","doc":"Yields locations and parent declaration for all references referring to `ident`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.referringTo\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">referringTo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/References.html#Lean.Server.References\">Lean.Server.References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(srcSearchPath : <a href=\"./Lean/Util/Path.html#Lean.SearchPath\">Lean.SearchPath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ident : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lean.Lsp.RefIdent</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(includeDefinition : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo\">Lean.Server.References.DocumentRefInfo</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L480-L480","name":"Lean.Server.References.DocumentRefInfo.parentInfo?","line":480,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo.parentInfo?","doc":"Parent declaration of the reference. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo.parentInfo?\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">DocumentRefInfo</span>.<span class=\"name\">parentInfo?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo\">Lean.Server.References.DocumentRefInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo.ParentDecl\">Lean.Lsp.RefInfo.ParentDecl</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L478-L478","name":"Lean.Server.References.DocumentRefInfo.location","line":478,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo.location","doc":"Location of the reference. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo.location\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">DocumentRefInfo</span>.<span class=\"name\">location</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo\">Lean.Server.References.DocumentRefInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Location\">Lean.Lsp.Location</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L476-L476","name":"Lean.Server.References.DocumentRefInfo.mk","line":476,"kind":"ctor","docLink":"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">DocumentRefInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(location : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Location\">Lean.Lsp.Location</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(parentInfo? : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo.ParentDecl\">Lean.Lsp.RefInfo.ParentDecl</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo\">Lean.Server.References.DocumentRefInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L475-L480","name":"Lean.Server.References.DocumentRefInfo","line":475,"kind":"structure","docLink":"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo","doc":"Location and parent declaration of a reference. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.DocumentRefInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">DocumentRefInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L470-L473","name":"Lean.Server.References.findRange?","line":470,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.findRange?","doc":"Yields the first reference in `module` at `pos`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.findRange?\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">findRange?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/References.html#Lean.Server.References\">Lean.Server.References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(module : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Position\">Lean.Lsp.Position</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(includeStop : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Range\">Lean.Lsp.Range</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L464-L468","name":"Lean.Server.References.findAt","line":464,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.findAt","doc":"Yields all references in `module` at `pos`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.findAt\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">findAt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/References.html#Lean.Server.References\">Lean.Server.References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(module : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Position\">Lean.Lsp.Position</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(includeStop : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lean.Lsp.RefIdent</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L436-L462","name":"Lean.Server.References.allRefsFor","line":436,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.allRefsFor","doc":"Yields all references in `self` for `ident`, as well as the `DocumentUri` that each\nreference occurs in.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.allRefsFor\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">allRefsFor</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/References.html#Lean.Server.References\">Lean.Server.References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(srcSearchPath : <a href=\"./Lean/Util/Path.html#Lean.SearchPath\">Lean.SearchPath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ident : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lean.Lsp.RefIdent</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.DocumentUri\">Lean.Lsp.DocumentUri</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo\">Lean.Lsp.RefInfo</a>)</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L431-L434","name":"Lean.Server.References.allRefs","line":431,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.allRefs","doc":"Yields a map from all modules to all of their references. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.allRefs\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">allRefs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/References.html#Lean.Server.References\">Lean.Server.References</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">Lean.Lsp.ModuleRefs</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L427-L429","name":"Lean.Server.References.removeWorkerRefs","line":427,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.removeWorkerRefs","doc":"Erases all worker references in `self` for the worker managing `name`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.removeWorkerRefs\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">removeWorkerRefs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/References.html#Lean.Server.References\">Lean.Server.References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.References\">Lean.Server.References</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L417-L425","name":"Lean.Server.References.finalizeWorkerRefs","line":417,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.finalizeWorkerRefs","doc":"Replaces the worker references in `self` with the `refs` of the worker managing the module `name`\nif `version` is newer than the current version managed in `refs`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.finalizeWorkerRefs\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">finalizeWorkerRefs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/References.html#Lean.Server.References\">Lean.Server.References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(version : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(refs : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">Lean.Lsp.ModuleRefs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.References\">Lean.Server.References</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L401-L415","name":"Lean.Server.References.updateWorkerRefs","line":401,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.updateWorkerRefs","doc":"Updates the worker references in `self` with the `refs` of the worker managing the module `name`.\nReplaces the current references with `refs` if `version` is newer than the current version managed\nin `refs` and otherwise merges the reference data if `version` is equal to the current version.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.updateWorkerRefs\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">updateWorkerRefs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/References.html#Lean.Server.References\">Lean.Server.References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(name : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(version : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(refs : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">Lean.Lsp.ModuleRefs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.References\">Lean.Server.References</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L394-L399","name":"Lean.Server.References.removeIlean","line":394,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.removeIlean","doc":"Removes the ilean file data at `path` from `self`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.removeIlean\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">removeIlean</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/References.html#Lean.Server.References\">Lean.Server.References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(path : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.References\">Lean.Server.References</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L390-L392","name":"Lean.Server.References.addIlean","line":390,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.addIlean","doc":"Adds the contents of an ilean file `ilean` at `path` to `self`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.addIlean\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">addIlean</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/References.html#Lean.Server.References\">Lean.Server.References</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(path : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ilean : <a href=\"./Lean/Server/References.html#Lean.Server.Ilean\">Lean.Server.Ilean</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.References\">Lean.Server.References</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L387-L388","name":"Lean.Server.References.empty","line":387,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.empty","doc":"No ilean files, no information from workers. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.empty\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.References\">Lean.Server.References</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L383-L383","name":"Lean.Server.References.workers","line":383,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.workers","doc":"References from workers, overriding the corresponding ilean files "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.workers\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">workers</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/References.html#Lean.Server.References\">Lean.Server.References</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">Lean.Lsp.ModuleRefs</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L381-L381","name":"Lean.Server.References.ileans","line":381,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.References.ileans","doc":"References loaded from ilean files "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.ileans\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">ileans</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/References.html#Lean.Server.References\">Lean.Server.References</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <span class=\"fn\">(<a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">Lean.Lsp.ModuleRefs</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L379-L379","name":"Lean.Server.References.mk","line":379,"kind":"ctor","docLink":"./Lean/Server/References.html#Lean.Server.References.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ileans : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <span class=\"fn\">(<a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">Lean.Lsp.ModuleRefs</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(workers : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">Lean.Lsp.ModuleRefs</a>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.References\">Lean.Server.References</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L378-L383","name":"Lean.Server.References","line":378,"kind":"structure","docLink":"./Lean/Server/References.html#Lean.Server.References","doc":"References from ilean files and current ilean information from file workers. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.References\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">References</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L360-L374","name":"Lean.Server.findModuleRefs","line":360,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.findModuleRefs","doc":"Finds all references in `trees` and deduplicates the result.\nSee `dedupReferences` and `combineIdents`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.findModuleRefs\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">findModuleRefs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(text : <a href=\"./Lean/Data/Position.html#Lean.FileMap\">Lean.FileMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(trees : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoTree\">Lean.Elab.InfoTree</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(localVars : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(allowSimultaneousBinderUse : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.ModuleRefs\">Lean.Server.ModuleRefs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L343-L358","name":"Lean.Server.dedupReferences","line":343,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.dedupReferences","doc":"Groups `refs` by identifier and range s.t. references with the same identifier and range\nare added to the `aliases` of the representative of the group.\nYields to separate groups for declaration and usages if `allowSimultaneousBinderUse` is set.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.dedupReferences\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">dedupReferences</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(refs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Lean.Server.Reference</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(allowSimultaneousBinderUse : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Lean.Server.Reference</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L336-L341","name":"Lean.Server.combineIdents.insertIdMap","line":336,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.combineIdents.insertIdMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.combineIdents.insertIdMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">combineIdents</span>.<span class=\"name\">insertIdMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(id baseId : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lean.Lsp.RefIdent</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Control/State.html#StateT\">StateT</a> <span class=\"fn\">(<a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lean.Lsp.RefIdent</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lean.Lsp.RefIdent</a>)</span> <a href=\"./Init/Control/Id.html#Id\">Id</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L319-L333","name":"Lean.Server.combineIdents.buildIdMap","line":319,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.combineIdents.buildIdMap","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.combineIdents.buildIdMap\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">combineIdents</span>.<span class=\"name\">buildIdMap</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(trees : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoTree\">Lean.Elab.InfoTree</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(refs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Lean.Server.Reference</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(posMap : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Range\">Lean.Lsp.Range</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lean.Lsp.RefIdent</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lean.Lsp.RefIdent</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lean.Lsp.RefIdent</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L313-L317","name":"Lean.Server.combineIdents.findCanonicalRepresentative","line":313,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.combineIdents.findCanonicalRepresentative","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.combineIdents.findCanonicalRepresentative\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">combineIdents</span>.<span class=\"name\">findCanonicalRepresentative</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(idMap : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lean.Lsp.RefIdent</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lean.Lsp.RefIdent</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(id : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lean.Lsp.RefIdent</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lean.Lsp.RefIdent</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L280-L311","name":"Lean.Server.combineIdents.useConstRepresentatives","line":280,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.combineIdents.useConstRepresentatives","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.combineIdents.useConstRepresentatives\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">combineIdents</span>.<span class=\"name\">useConstRepresentatives</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(idMap : <span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lean.Lsp.RefIdent</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lean.Lsp.RefIdent</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Data/HashMap/Basic.html#Std.HashMap\">Std.HashMap</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lean.Lsp.RefIdent</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lean.Lsp.RefIdent</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L245-L341","name":"Lean.Server.combineIdents","line":245,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.combineIdents","doc":"There are several different identifiers that should be considered equal for the purpose of finding\nall references of an identifier:\n- `FVarId`s of a function parameter in the function's signature and body\n- Chains of helper definitions like those created for do-reassignment `x := e`\n- Overlapping definitions like those defined by `where` declarations that define both an FVar\n  (for local usage) and a constant (for non-local usage)\n- Identifiers connected by `FVarAliasInfo` such as variables before and after `match` generalization\n\nIn the first three cases that are not explicitly denoted as aliases with an `FVarAliasInfo`, the\ncorresponding `Reference`s have the exact same range.\nThis function finds all definitions that have the exact same range as another definition or usage\nand collapses them into a single identifier. It also collapses identifiers connected by\nan `FVarAliasInfo`.\nWhen collapsing identifiers, it prefers using a `RefIdent.const name` over a `RefIdent.fvar id` for\nall identifiers that are being collapsed into one.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.combineIdents\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">combineIdents</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(trees : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoTree\">Lean.Elab.InfoTree</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(refs : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Lean.Server.Reference</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Lean.Server.Reference</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L232-L243","name":"Lean.Server.findReferences","line":232,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.findReferences","doc":"Finds all references in `trees`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.findReferences\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">findReferences</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(text : <a href=\"./Lean/Data/Position.html#Lean.FileMap\">Lean.FileMap</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(trees : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.InfoTree\">Lean.Elab.InfoTree</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Lean.Server.Reference</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L214-L230","name":"Lean.Server.identOf","line":214,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.identOf","doc":"Determines the `RefIdent` for the `Info` `i` of an identifier in `module` and\nwhether it is a declaration.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.identOf\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">identOf</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ci : <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.ContextInfo\">Lean.Elab.ContextInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.Info\">Lean.Elab.Info</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">(<a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lean.Lsp.RefIdent</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L207-L212","name":"Lean.Server.getModuleContainingDecl?","line":207,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.getModuleContainingDecl?","doc":"Gets the name of the module that contains `declName`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.getModuleContainingDecl?\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">getModuleContainingDecl?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(env : <a href=\"./Lean/Environment.html#Lean.Environment\">Lean.Environment</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(declName : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L197-L202","name":"Lean.Server.Ilean.load","line":197,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.Ilean.load","doc":"Reads and parses the .ilean file at `path`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Ilean.load\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Ilean</span>.<span class=\"name\">load</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(path : <a href=\"./Init/System/FilePath.html#System.FilePath\">System.FilePath</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#IO\">IO</a> <a href=\"./Lean/Server/References.html#Lean.Server.Ilean\">Lean.Server.Ilean</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L193-L193","name":"Lean.Server.instToJsonIlean","line":193,"kind":"instance","docLink":"./Lean/Server/References.html#Lean.Server.instToJsonIlean","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.instToJsonIlean\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instToJsonIlean</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.ToJson\">Lean.ToJson</a> <a href=\"./Lean/Server/References.html#Lean.Server.Ilean\">Lean.Server.Ilean</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L193-L193","name":"Lean.Server.instFromJsonIlean","line":193,"kind":"instance","docLink":"./Lean/Server/References.html#Lean.Server.instFromJsonIlean","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.instFromJsonIlean\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">instFromJsonIlean</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Data/Json/FromToJson.html#Lean.FromJson\">Lean.FromJson</a> <a href=\"./Lean/Server/References.html#Lean.Server.Ilean\">Lean.Server.Ilean</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L192-L192","name":"Lean.Server.Ilean.references","line":192,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.Ilean.references","doc":"All references of this module. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Ilean.references\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Ilean</span>.<span class=\"name\">references</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/References.html#Lean.Server.Ilean\">Lean.Server.Ilean</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">Lean.Lsp.ModuleRefs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L190-L190","name":"Lean.Server.Ilean.module","line":190,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.Ilean.module","doc":"Name of the module that this ilean data has been collected for. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Ilean.module\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Ilean</span>.<span class=\"name\">module</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/References.html#Lean.Server.Ilean\">Lean.Server.Ilean</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L188-L188","name":"Lean.Server.Ilean.version","line":188,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.Ilean.version","doc":"Version number of the ilean format. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Ilean.version\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Ilean</span>.<span class=\"name\">version</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/References.html#Lean.Server.Ilean\">Lean.Server.Ilean</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Nat\">Nat</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L186-L186","name":"Lean.Server.Ilean.mk","line":186,"kind":"ctor","docLink":"./Lean/Server/References.html#Lean.Server.Ilean.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Ilean.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Ilean</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(version : <a href=\"./Init/Prelude.html#Nat\">Nat</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(module : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(references : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">Lean.Lsp.ModuleRefs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.Ilean\">Lean.Server.Ilean</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L185-L193","name":"Lean.Server.Ilean","line":185,"kind":"structure","docLink":"./Lean/Server/References.html#Lean.Server.Ilean","doc":"Content of individual `.ilean` files "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Ilean\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Ilean</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L171-L176","name":"Lean.Lsp.ModuleRefs.findRange?","line":171,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Lsp.ModuleRefs.findRange?","doc":"Finds the first range in `self` that contains `pos`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Lsp.ModuleRefs.findRange?\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">ModuleRefs</span>.<span class=\"name\">findRange?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">Lean.Lsp.ModuleRefs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Position\">Lean.Lsp.Position</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(includeStop : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Range\">Lean.Lsp.Range</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L157-L169","name":"Lean.Lsp.ModuleRefs.findAt","line":157,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Lsp.ModuleRefs.findAt","doc":"Find all identifiers in `self` with a reference in this module that contains `pos` in its range.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Lsp.ModuleRefs.findAt\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">ModuleRefs</span>.<span class=\"name\">findAt</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">Lean.Lsp.ModuleRefs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Position\">Lean.Lsp.Position</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(includeStop : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lean.Lsp.RefIdent</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L148-L150","name":"Lean.Lsp.RefInfo.contains","line":148,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Lsp.RefInfo.contains","doc":"Checks whether any of the ranges in `self.definition?` or `self.usages` contains `pos`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Lsp.RefInfo.contains\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">contains</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo\">Lean.Lsp.RefInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Position\">Lean.Lsp.Position</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(includeStop : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L145-L146","name":"Lean.Lsp.RefInfo.findReferenceLocation?.contains","line":145,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Lsp.RefInfo.findReferenceLocation?.contains","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Lsp.RefInfo.findReferenceLocation?.contains\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">findReferenceLocation?</span>.<span class=\"name\">contains</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(includeStop : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(range : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Range\">Lean.Lsp.Range</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Position\">Lean.Lsp.Position</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L126-L146","name":"Lean.Lsp.RefInfo.findReferenceLocation?","line":126,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Lsp.RefInfo.findReferenceLocation?","doc":"Finds the first definition or usage in `self` where the `RefInfo.Location.range`\ncontains the given `pos`. The `includeStop` parameter can be used to toggle between closed-interval\nand half-open-interval behavior for the range. Closed-interval behavior matches the expectation of\nVSCode when selecting an identifier at a cursor position (see #767).\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Lsp.RefInfo.findReferenceLocation?\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">findReferenceLocation?</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo\">Lean.Lsp.RefInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pos : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Position\">Lean.Lsp.Position</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(includeStop : <a href=\"./Init/Prelude.html#Bool\">Bool</a> := <a href=\"./Init/Prelude.html#Bool.false\">false</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo.Location\">Lean.Lsp.RefInfo.Location</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L121-L124","name":"Lean.Lsp.RefInfo.merge","line":121,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Lsp.RefInfo.merge","doc":"Combines the `usages` of `a` and `b` and prefers the `definition?` of `b` over that of `a`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Lsp.RefInfo.merge\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">merge</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a b : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo\">Lean.Lsp.RefInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo\">Lean.Lsp.RefInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L118-L119","name":"Lean.Lsp.RefInfo.empty","line":118,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Lsp.RefInfo.empty","doc":"No definition, no usages "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Lsp.RefInfo.empty\"><span class=\"name\">Lean</span>.<span class=\"name\">Lsp</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo\">Lean.Lsp.RefInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L105-L109","name":"Lean.Server.ModuleRefs.toLspModuleRefs","line":105,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.ModuleRefs.toLspModuleRefs","doc":"Converts `refs` to a JSON-serializable `Lsp.ModuleRefs`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.ModuleRefs.toLspModuleRefs\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">ModuleRefs</span>.<span class=\"name\">toLspModuleRefs</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(refs : <a href=\"./Lean/Server/References.html#Lean.Server.ModuleRefs\">Lean.Server.ModuleRefs</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.ModuleRefs\">Lean.Lsp.ModuleRefs</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L100-L103","name":"Lean.Server.ModuleRefs.addRef","line":100,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.ModuleRefs.addRef","doc":"Adds `ref` to the `RefInfo` corresponding to `ref.ident` in `self`. See `RefInfo.addRef`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.ModuleRefs.addRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">ModuleRefs</span>.<span class=\"name\">addRef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/References.html#Lean.Server.ModuleRefs\">Lean.Server.ModuleRefs</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ref : <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Lean.Server.Reference</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.ModuleRefs\">Lean.Server.ModuleRefs</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L95-L96","name":"Lean.Server.ModuleRefs","line":95,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.ModuleRefs","doc":"All references from within a module for all identifiers used in a single module. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.ModuleRefs\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">ModuleRefs</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L68-L91","name":"Lean.Server.RefInfo.toLspRefInfo","line":68,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.RefInfo.toLspRefInfo","doc":"Converts `i` to a JSON-serializable `Lsp.RefInfo`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.RefInfo.toLspRefInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">toLspRefInfo</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Lean/Server/References.html#Lean.Server.RefInfo\">Lean.Server.RefInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/System/IO.html#BaseIO\">BaseIO</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefInfo\">Lean.Lsp.RefInfo</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L53-L66","name":"Lean.Server.RefInfo.addRef","line":53,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.RefInfo.addRef","doc":"Adds `ref` to `i`.\nIf `i` has no `definition` and `ref` is a declaration, it becomes the `definition`.\nIf `i` already has a `definition` and `ref` is also a declaration, it is not added to `i`.\nOtherwise, `ref` is added to `i.usages`.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.RefInfo.addRef\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">addRef</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Lean/Server/References.html#Lean.Server.RefInfo\">Lean.Server.RefInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ref : <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Lean.Server.Reference</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.RefInfo\">Lean.Server.RefInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L50-L51","name":"Lean.Server.RefInfo.empty","line":50,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.RefInfo.empty","doc":"No definition, no usages. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.RefInfo.empty\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">empty</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.RefInfo\">Lean.Server.RefInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L46-L46","name":"Lean.Server.RefInfo.usages","line":46,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.RefInfo.usages","doc":"All usage `Reference`s of the identifier in a single module. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.RefInfo.usages\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">usages</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/References.html#Lean.Server.RefInfo\">Lean.Server.RefInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Lean.Server.Reference</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L44-L44","name":"Lean.Server.RefInfo.definition","line":44,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.RefInfo.definition","doc":"Definition `Reference` of the identifier.\nIs equal to `none` if e.g. the definition is outside of the module where this `RefInfo` is used.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.RefInfo.definition\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">definition</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/References.html#Lean.Server.RefInfo\">Lean.Server.RefInfo</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Lean.Server.Reference</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L39-L39","name":"Lean.Server.RefInfo.mk","line":39,"kind":"ctor","docLink":"./Lean/Server/References.html#Lean.Server.RefInfo.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.RefInfo.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RefInfo</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(definition : <span class=\"fn\"><a href=\"./Init/Prelude.html#Option\">Option</a> <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Lean.Server.Reference</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(usages : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Lean.Server.Reference</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.RefInfo\">Lean.Server.RefInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L38-L46","name":"Lean.Server.RefInfo","line":38,"kind":"structure","docLink":"./Lean/Server/References.html#Lean.Server.RefInfo","doc":"Definition and usages of an identifier within a single module. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.RefInfo\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">RefInfo</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L36-L36","name":"Lean.Server.Reference.isBinder","line":36,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.Reference.isBinder","doc":"Whether this reference declares `ident`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Reference.isBinder\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Reference</span>.<span class=\"name\">isBinder</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Lean.Server.Reference</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Bool\">Bool</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L34-L34","name":"Lean.Server.Reference.info","line":34,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.Reference.info","doc":"Additional `InfoTree` information for this reference. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Reference.info\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Reference</span>.<span class=\"name\">info</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Lean.Server.Reference</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.Info\">Lean.Elab.Info</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L32-L32","name":"Lean.Server.Reference.ci","line":32,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.Reference.ci","doc":"`ContextInfo` at the point of elaboration of this reference. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Reference.ci\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Reference</span>.<span class=\"name\">ci</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Lean.Server.Reference</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.ContextInfo\">Lean.Elab.ContextInfo</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L30-L30","name":"Lean.Server.Reference.stx","line":30,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.Reference.stx","doc":"Syntax of this reference. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Reference.stx\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Reference</span>.<span class=\"name\">stx</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Lean.Server.Reference</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L28-L28","name":"Lean.Server.Reference.range","line":28,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.Reference.range","doc":"Range where this reference occurs. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Reference.range\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Reference</span>.<span class=\"name\">range</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Lean.Server.Reference</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Range\">Lean.Lsp.Range</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L26-L26","name":"Lean.Server.Reference.aliases","line":26,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.Reference.aliases","doc":"Identifiers that are logically identical to this reference. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Reference.aliases\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Reference</span>.<span class=\"name\">aliases</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Lean.Server.Reference</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lean.Lsp.RefIdent</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L24-L24","name":"Lean.Server.Reference.ident","line":24,"kind":"def","docLink":"./Lean/Server/References.html#Lean.Server.Reference.ident","doc":"Identifier of this reference. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Reference.ident\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Reference</span>.<span class=\"name\">ident</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(self : <a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Lean.Server.Reference</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lean.Lsp.RefIdent</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L22-L22","name":"Lean.Server.Reference.mk","line":22,"kind":"ctor","docLink":"./Lean/Server/References.html#Lean.Server.Reference.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Reference.mk\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Reference</span>.<span class=\"name\">mk</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ident : <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lean.Lsp.RefIdent</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(aliases : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Data/Lsp/Internal.html#Lean.Lsp.RefIdent\">Lean.Lsp.RefIdent</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(range : <a href=\"./Lean/Data/Lsp/Basic.html#Lean.Lsp.Range\">Lean.Lsp.Range</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ci : <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.ContextInfo\">Lean.Elab.ContextInfo</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(info : <a href=\"./Lean/Elab/InfoTree/Types.html#Lean.Elab.Info\">Lean.Elab.Info</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(isBinder : <a href=\"./Init/Prelude.html#Bool\">Bool</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Server/References.html#Lean.Server.Reference\">Lean.Server.Reference</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Server/References.lean#L18-L36","name":"Lean.Server.Reference","line":18,"kind":"structure","docLink":"./Lean/Server/References.html#Lean.Server.Reference","doc":"Global reference. Used by the language server to figure out which identifiers refer to which\nother identifiers across the whole project.\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Server/References.html#Lean.Server.Reference\"><span class=\"name\">Lean</span>.<span class=\"name\">Server</span>.<span class=\"name\">Reference</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}