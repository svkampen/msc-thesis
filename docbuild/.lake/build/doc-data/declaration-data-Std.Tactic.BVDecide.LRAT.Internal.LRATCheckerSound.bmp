{"name":"Std.Tactic.BVDecide.LRAT.Internal.LRATCheckerSound","instances":[],"imports":["Std.Tactic.BVDecide.LRAT.Internal.LRATChecker","Std.Tactic.BVDecide.LRAT.Internal.CNF","Std.Tactic.BVDecide.LRAT.Internal.Actions"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Tactic/BVDecide/LRAT/Internal/LRATCheckerSound.lean#L101-L148","name":"Std.Tactic.BVDecide.LRAT.Internal.lratCheckerSound","line":101,"kind":"theorem","docLink":"./Std/Tactic/BVDecide/LRAT/Internal/LRATCheckerSound.html#Std.Tactic.BVDecide.LRAT.Internal.lratCheckerSound","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/LRAT/Internal/LRATCheckerSound.html#Std.Tactic.BVDecide.LRAT.Internal.lratCheckerSound\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">Internal</span>.<span class=\"name\">lratCheckerSound</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Clause.html#Std.Tactic.BVDecide.LRAT.Internal.Clause\">Std.Tactic.BVDecide.LRAT.Internal.Clause</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Entails.html#Std.Tactic.BVDecide.LRAT.Internal.Entails\">Std.Tactic.BVDecide.LRAT.Internal.Entails</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Formula/Class.html#Std.Tactic.BVDecide.LRAT.Internal.Formula\">Std.Tactic.BVDecide.LRAT.Internal.Formula</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f_readyForRupAdd : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Formula/Class.html#Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRupAdd\">Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRupAdd</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f_readyForRatAdd : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Formula/Class.html#Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRatAdd\">Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRatAdd</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prf : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/LRAT/Actions.html#Std.Tactic.BVDecide.LRAT.Action\">Std.Tactic.BVDecide.LRAT.Action</a> <span class=\"fn\">β</span> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(prfWellFormed :\n  <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Actions.html#Std.Tactic.BVDecide.LRAT.Action\">Std.Tactic.BVDecide.LRAT.Action</a> <span class=\"fn\">β</span> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">prf</span></span> → <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Actions.html#Std.Tactic.BVDecide.LRAT.Internal.WellFormedAction\">Std.Tactic.BVDecide.LRAT.Internal.WellFormedAction</a> <span class=\"fn\">a</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/LRATChecker.html#Std.Tactic.BVDecide.LRAT.Internal.lratChecker\">Std.Tactic.BVDecide.LRAT.Internal.lratChecker</a> <span class=\"fn\">f</span> <span class=\"fn\">prf</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Std/Tactic/BVDecide/LRAT/Internal/LRATChecker.html#Std.Tactic.BVDecide.LRAT.Internal.Result.success\">Std.Tactic.BVDecide.LRAT.Internal.Result.success</a></span> →\n  <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Entails.html#Std.Tactic.BVDecide.LRAT.Internal.Unsatisfiable\">Std.Tactic.BVDecide.LRAT.Internal.Unsatisfiable</a> <span class=\"fn\">α</span> <span class=\"fn\">f</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Tactic/BVDecide/LRAT/Internal/LRATCheckerSound.lean#L87-L99","name":"Std.Tactic.BVDecide.LRAT.Internal.delCaseSound","line":87,"kind":"theorem","docLink":"./Std/Tactic/BVDecide/LRAT/Internal/LRATCheckerSound.html#Std.Tactic.BVDecide.LRAT.Internal.delCaseSound","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/LRAT/Internal/LRATCheckerSound.html#Std.Tactic.BVDecide.LRAT.Internal.delCaseSound\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">Internal</span>.<span class=\"name\">delCaseSound</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Clause.html#Std.Tactic.BVDecide.LRAT.Internal.Clause\">Std.Tactic.BVDecide.LRAT.Internal.Clause</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Entails.html#Std.Tactic.BVDecide.LRAT.Internal.Entails\">Std.Tactic.BVDecide.LRAT.Internal.Entails</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Formula/Class.html#Std.Tactic.BVDecide.LRAT.Internal.Formula\">Std.Tactic.BVDecide.LRAT.Internal.Formula</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f_readyForRupAdd : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Formula/Class.html#Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRupAdd\">Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRupAdd</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f_readyForRatAdd : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Formula/Class.html#Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRatAdd\">Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRatAdd</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ids : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(restPrf : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/LRAT/Actions.html#Std.Tactic.BVDecide.LRAT.Action\">Std.Tactic.BVDecide.LRAT.Action</a> <span class=\"fn\">β</span> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(restPrfWellFormed :\n  <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Actions.html#Std.Tactic.BVDecide.LRAT.Action\">Std.Tactic.BVDecide.LRAT.Action</a> <span class=\"fn\">β</span> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">restPrf</span></span> → <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Actions.html#Std.Tactic.BVDecide.LRAT.Internal.WellFormedAction\">Std.Tactic.BVDecide.LRAT.Internal.WellFormedAction</a> <span class=\"fn\">a</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ih :\n  <span class=\"fn\">∀ (<span class=\"fn\">f</span> : <span class=\"fn\">σ</span>),\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Formula/Class.html#Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRupAdd\">Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRupAdd</a> <span class=\"fn\">f</span></span> →\n      <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Formula/Class.html#Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRatAdd\">Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRatAdd</a> <span class=\"fn\">f</span></span> →\n        <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Actions.html#Std.Tactic.BVDecide.LRAT.Action\">Std.Tactic.BVDecide.LRAT.Action</a> <span class=\"fn\">β</span> <span class=\"fn\">α</span></span>),\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">restPrf</span></span> → <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Actions.html#Std.Tactic.BVDecide.LRAT.Internal.WellFormedAction\">Std.Tactic.BVDecide.LRAT.Internal.WellFormedAction</a> <span class=\"fn\">a</span></span></span>)</span> →\n          <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/LRATChecker.html#Std.Tactic.BVDecide.LRAT.Internal.lratChecker\">Std.Tactic.BVDecide.LRAT.Internal.lratChecker</a> <span class=\"fn\">f</span> <span class=\"fn\">restPrf</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Std/Tactic/BVDecide/LRAT/Internal/LRATChecker.html#Std.Tactic.BVDecide.LRAT.Internal.Result.success\">Std.Tactic.BVDecide.LRAT.Internal.Result.success</a></span> →\n            <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Entails.html#Std.Tactic.BVDecide.LRAT.Internal.Unsatisfiable\">Std.Tactic.BVDecide.LRAT.Internal.Unsatisfiable</a> <span class=\"fn\">α</span> <span class=\"fn\">f</span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h :\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/LRATChecker.html#Std.Tactic.BVDecide.LRAT.Internal.lratChecker\">Std.Tactic.BVDecide.LRAT.Internal.lratChecker</a> <span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Formula/Class.html#Std.Tactic.BVDecide.LRAT.Internal.Formula.delete\">Std.Tactic.BVDecide.LRAT.Internal.Formula.delete</a> <span class=\"fn\">f</span> <span class=\"fn\">ids</span>)</span> <span class=\"fn\">restPrf</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <a href=\"./Std/Tactic/BVDecide/LRAT/Internal/LRATChecker.html#Std.Tactic.BVDecide.LRAT.Internal.Result.success\">Std.Tactic.BVDecide.LRAT.Internal.Result.success</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Entails.html#Std.Tactic.BVDecide.LRAT.Internal.Unsatisfiable\">Std.Tactic.BVDecide.LRAT.Internal.Unsatisfiable</a> <span class=\"fn\">α</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Tactic/BVDecide/LRAT/Internal/LRATCheckerSound.lean#L62-L85","name":"Std.Tactic.BVDecide.LRAT.Internal.addRatCaseSound","line":62,"kind":"theorem","docLink":"./Std/Tactic/BVDecide/LRAT/Internal/LRATCheckerSound.html#Std.Tactic.BVDecide.LRAT.Internal.addRatCaseSound","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/LRAT/Internal/LRATCheckerSound.html#Std.Tactic.BVDecide.LRAT.Internal.addRatCaseSound\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">Internal</span>.<span class=\"name\">addRatCaseSound</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Clause.html#Std.Tactic.BVDecide.LRAT.Internal.Clause\">Std.Tactic.BVDecide.LRAT.Internal.Clause</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Entails.html#Std.Tactic.BVDecide.LRAT.Internal.Entails\">Std.Tactic.BVDecide.LRAT.Internal.Entails</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Formula/Class.html#Std.Tactic.BVDecide.LRAT.Internal.Formula\">Std.Tactic.BVDecide.LRAT.Internal.Formula</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f_readyForRupAdd : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Formula/Class.html#Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRupAdd\">Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRupAdd</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f_readyForRatAdd : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Formula/Class.html#Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRatAdd\">Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRatAdd</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pivot : <span class=\"fn\"><a href=\"./Std/Sat/CNF/Literal.html#Std.Sat.Literal\">Std.Sat.Literal</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f' : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rupHints : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ratHints : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Nat\">Nat</a> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(pivot_limplies_c : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Entails.html#Std.Tactic.BVDecide.LRAT.Internal.Limplies\">Std.Tactic.BVDecide.LRAT.Internal.Limplies</a> <span class=\"fn\">α</span> <span class=\"fn\">pivot</span> <span class=\"fn\">c</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(heq : <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Formula/Class.html#Std.Tactic.BVDecide.LRAT.Internal.Formula.performRatAdd\">Std.Tactic.BVDecide.LRAT.Internal.Formula.performRatAdd</a> <span class=\"fn\">f</span> <span class=\"fn\">c</span> <span class=\"fn\">pivot</span> <span class=\"fn\">rupHints</span> <span class=\"fn\">ratHints</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\">f'</span>, <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(restPrf : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/LRAT/Actions.html#Std.Tactic.BVDecide.LRAT.Action\">Std.Tactic.BVDecide.LRAT.Action</a> <span class=\"fn\">β</span> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(restPrfWellFormed :\n  <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Actions.html#Std.Tactic.BVDecide.LRAT.Action\">Std.Tactic.BVDecide.LRAT.Action</a> <span class=\"fn\">β</span> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">restPrf</span></span> → <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Actions.html#Std.Tactic.BVDecide.LRAT.Internal.WellFormedAction\">Std.Tactic.BVDecide.LRAT.Internal.WellFormedAction</a> <span class=\"fn\">a</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ih :\n  <span class=\"fn\">∀ (<span class=\"fn\">f</span> : <span class=\"fn\">σ</span>),\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Formula/Class.html#Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRupAdd\">Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRupAdd</a> <span class=\"fn\">f</span></span> →\n      <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Formula/Class.html#Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRatAdd\">Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRatAdd</a> <span class=\"fn\">f</span></span> →\n        <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Actions.html#Std.Tactic.BVDecide.LRAT.Action\">Std.Tactic.BVDecide.LRAT.Action</a> <span class=\"fn\">β</span> <span class=\"fn\">α</span></span>),\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">restPrf</span></span> → <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Actions.html#Std.Tactic.BVDecide.LRAT.Internal.WellFormedAction\">Std.Tactic.BVDecide.LRAT.Internal.WellFormedAction</a> <span class=\"fn\">a</span></span></span>)</span> →\n          <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/LRATChecker.html#Std.Tactic.BVDecide.LRAT.Internal.lratChecker\">Std.Tactic.BVDecide.LRAT.Internal.lratChecker</a> <span class=\"fn\">f</span> <span class=\"fn\">restPrf</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Std/Tactic/BVDecide/LRAT/Internal/LRATChecker.html#Std.Tactic.BVDecide.LRAT.Internal.Result.success\">Std.Tactic.BVDecide.LRAT.Internal.Result.success</a></span> →\n            <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Entails.html#Std.Tactic.BVDecide.LRAT.Internal.Unsatisfiable\">Std.Tactic.BVDecide.LRAT.Internal.Unsatisfiable</a> <span class=\"fn\">α</span> <span class=\"fn\">f</span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f'_success :\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/LRATChecker.html#Std.Tactic.BVDecide.LRAT.Internal.lratChecker\">Std.Tactic.BVDecide.LRAT.Internal.lratChecker</a> <span class=\"fn\">f'</span> <span class=\"fn\">restPrf</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Std/Tactic/BVDecide/LRAT/Internal/LRATChecker.html#Std.Tactic.BVDecide.LRAT.Internal.Result.success\">Std.Tactic.BVDecide.LRAT.Internal.Result.success</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Entails.html#Std.Tactic.BVDecide.LRAT.Internal.Unsatisfiable\">Std.Tactic.BVDecide.LRAT.Internal.Unsatisfiable</a> <span class=\"fn\">α</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Tactic/BVDecide/LRAT/Internal/LRATCheckerSound.lean#L39-L60","name":"Std.Tactic.BVDecide.LRAT.Internal.addRupCaseSound","line":39,"kind":"theorem","docLink":"./Std/Tactic/BVDecide/LRAT/Internal/LRATCheckerSound.html#Std.Tactic.BVDecide.LRAT.Internal.addRupCaseSound","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/LRAT/Internal/LRATCheckerSound.html#Std.Tactic.BVDecide.LRAT.Internal.addRupCaseSound\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">Internal</span>.<span class=\"name\">addRupCaseSound</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Clause.html#Std.Tactic.BVDecide.LRAT.Internal.Clause\">Std.Tactic.BVDecide.LRAT.Internal.Clause</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Entails.html#Std.Tactic.BVDecide.LRAT.Internal.Entails\">Std.Tactic.BVDecide.LRAT.Internal.Entails</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Formula/Class.html#Std.Tactic.BVDecide.LRAT.Internal.Formula\">Std.Tactic.BVDecide.LRAT.Internal.Formula</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f_readyForRupAdd : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Formula/Class.html#Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRupAdd\">Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRupAdd</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f_readyForRatAdd : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Formula/Class.html#Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRatAdd\">Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRatAdd</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(c : <span class=\"fn\">β</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f' : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rupHints : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(heq : <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Formula/Class.html#Std.Tactic.BVDecide.LRAT.Internal.Formula.performRupAdd\">Std.Tactic.BVDecide.LRAT.Internal.Formula.performRupAdd</a> <span class=\"fn\">f</span> <span class=\"fn\">c</span> <span class=\"fn\">rupHints</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">(<span class=\"fn\">f'</span>, <a href=\"./Init/Prelude.html#Bool.true\">true</a>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(restPrf : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/LRAT/Actions.html#Std.Tactic.BVDecide.LRAT.Action\">Std.Tactic.BVDecide.LRAT.Action</a> <span class=\"fn\">β</span> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(restPrfWellFormed :\n  <span class=\"fn\">∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Actions.html#Std.Tactic.BVDecide.LRAT.Action\">Std.Tactic.BVDecide.LRAT.Action</a> <span class=\"fn\">β</span> <span class=\"fn\">α</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">restPrf</span></span> → <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Actions.html#Std.Tactic.BVDecide.LRAT.Internal.WellFormedAction\">Std.Tactic.BVDecide.LRAT.Internal.WellFormedAction</a> <span class=\"fn\">a</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ih :\n  <span class=\"fn\">∀ (<span class=\"fn\">f</span> : <span class=\"fn\">σ</span>),\n    <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Formula/Class.html#Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRupAdd\">Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRupAdd</a> <span class=\"fn\">f</span></span> →\n      <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Formula/Class.html#Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRatAdd\">Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRatAdd</a> <span class=\"fn\">f</span></span> →\n        <span class=\"fn\"><span class=\"fn\">(∀ (<span class=\"fn\">a</span> : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Actions.html#Std.Tactic.BVDecide.LRAT.Action\">Std.Tactic.BVDecide.LRAT.Action</a> <span class=\"fn\">β</span> <span class=\"fn\">α</span></span>),\n            <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\">restPrf</span></span> → <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Actions.html#Std.Tactic.BVDecide.LRAT.Internal.WellFormedAction\">Std.Tactic.BVDecide.LRAT.Internal.WellFormedAction</a> <span class=\"fn\">a</span></span></span>)</span> →\n          <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/LRATChecker.html#Std.Tactic.BVDecide.LRAT.Internal.lratChecker\">Std.Tactic.BVDecide.LRAT.Internal.lratChecker</a> <span class=\"fn\">f</span> <span class=\"fn\">restPrf</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Std/Tactic/BVDecide/LRAT/Internal/LRATChecker.html#Std.Tactic.BVDecide.LRAT.Internal.Result.success\">Std.Tactic.BVDecide.LRAT.Internal.Result.success</a></span> →\n            <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Entails.html#Std.Tactic.BVDecide.LRAT.Internal.Unsatisfiable\">Std.Tactic.BVDecide.LRAT.Internal.Unsatisfiable</a> <span class=\"fn\">α</span> <span class=\"fn\">f</span></span></span></span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f'_success :\n  <span class=\"fn\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/LRATChecker.html#Std.Tactic.BVDecide.LRAT.Internal.lratChecker\">Std.Tactic.BVDecide.LRAT.Internal.lratChecker</a> <span class=\"fn\">f'</span> <span class=\"fn\">restPrf</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Std/Tactic/BVDecide/LRAT/Internal/LRATChecker.html#Std.Tactic.BVDecide.LRAT.Internal.Result.success\">Std.Tactic.BVDecide.LRAT.Internal.Result.success</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Entails.html#Std.Tactic.BVDecide.LRAT.Internal.Unsatisfiable\">Std.Tactic.BVDecide.LRAT.Internal.Unsatisfiable</a> <span class=\"fn\">α</span> <span class=\"fn\">f</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Std/Tactic/BVDecide/LRAT/Internal/LRATCheckerSound.lean#L17-L37","name":"Std.Tactic.BVDecide.LRAT.Internal.addEmptyCaseSound","line":17,"kind":"theorem","docLink":"./Std/Tactic/BVDecide/LRAT/Internal/LRATCheckerSound.html#Std.Tactic.BVDecide.LRAT.Internal.addEmptyCaseSound","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Std/Tactic/BVDecide/LRAT/Internal/LRATCheckerSound.html#Std.Tactic.BVDecide.LRAT.Internal.addEmptyCaseSound\"><span class=\"name\">Std</span>.<span class=\"name\">Tactic</span>.<span class=\"name\">BVDecide</span>.<span class=\"name\">LRAT</span>.<span class=\"name\">Internal</span>.<span class=\"name\">addEmptyCaseSound</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{β : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{σ : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#DecidableEq\">DecidableEq</a> <span class=\"fn\">α</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Clause.html#Std.Tactic.BVDecide.LRAT.Internal.Clause\">Std.Tactic.BVDecide.LRAT.Internal.Clause</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Entails.html#Std.Tactic.BVDecide.LRAT.Internal.Entails\">Std.Tactic.BVDecide.LRAT.Internal.Entails</a> <span class=\"fn\">α</span> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Formula/Class.html#Std.Tactic.BVDecide.LRAT.Internal.Formula\">Std.Tactic.BVDecide.LRAT.Internal.Formula</a> <span class=\"fn\">α</span> <span class=\"fn\">β</span> <span class=\"fn\">σ</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\">σ</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(f_readyForRupAdd : <span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Formula/Class.html#Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRupAdd\">Std.Tactic.BVDecide.LRAT.Internal.Formula.ReadyForRupAdd</a> <span class=\"fn\">f</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rupHints : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Init/Prelude.html#Nat\">Nat</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(rupAddSuccess :\n  <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Formula/Class.html#Std.Tactic.BVDecide.LRAT.Internal.Formula.performRupAdd\">Std.Tactic.BVDecide.LRAT.Internal.Formula.performRupAdd</a> <span class=\"fn\">f</span> <span class=\"fn\">Std.Tactic.BVDecide.LRAT.Internal.Clause.empty</span>\n        <span class=\"fn\">rupHints</span>)</span>.snd</span> <a href=\"./Init/Prelude.html#Eq\">=</a>     <a href=\"./Init/Prelude.html#Bool.true\">true</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Std/Tactic/BVDecide/LRAT/Internal/Entails.html#Std.Tactic.BVDecide.LRAT.Internal.Unsatisfiable\">Std.Tactic.BVDecide.LRAT.Internal.Unsatisfiable</a> <span class=\"fn\">α</span> <span class=\"fn\">f</span></span></div></div>"}]}