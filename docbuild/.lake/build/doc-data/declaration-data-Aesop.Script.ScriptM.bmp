{"name":"Aesop.Script.ScriptM","instances":[],"imports":["Init","Aesop.Script.Step","Aesop.Script.Tactic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Script/ScriptM.lean#L48-L60","name":"Aesop.withOptScriptStep","line":48,"kind":"def","docLink":"./Aesop/Script/ScriptM.html#Aesop.withOptScriptStep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/ScriptM.html#Aesop.withOptScriptStep\"><span class=\"name\">Aesop</span>.<span class=\"name\">withOptScriptStep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(preGoal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(postGoals : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tacticBuilder : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Aesop/Script/Tactic.html#Aesop.Script.TacticBuilder\">Aesop.Script.TacticBuilder</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script/ScriptM.html#Aesop.ScriptM\">Aesop.ScriptM</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Option\">Option</a> <span class=\"fn\">α</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Script/ScriptM.lean#L34-L46","name":"Aesop.withScriptStep","line":34,"kind":"def","docLink":"./Aesop/Script/ScriptM.html#Aesop.withScriptStep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/ScriptM.html#Aesop.withScriptStep\"><span class=\"name\">Aesop</span>.<span class=\"name\">withScriptStep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(preGoal : <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(postGoals : <span class=\"fn\"><span class=\"fn\">α</span> → <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Lean/Expr.html#Lean.MVarId\">Lean.MVarId</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(success : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Init/Prelude.html#Bool\">Bool</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(tacticBuilder : <span class=\"fn\"><span class=\"fn\">α</span> → <a href=\"./Aesop/Script/Tactic.html#Aesop.Script.TacticBuilder\">Aesop.Script.TacticBuilder</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Lean/Meta/Basic.html#Lean.Meta.MetaM\">Lean.MetaM</a> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Aesop/Script/ScriptM.html#Aesop.ScriptM\">Aesop.ScriptM</a> <span class=\"fn\">α</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Script/ScriptM.lean#L31-L32","name":"Aesop.recordScriptSteps","line":31,"kind":"def","docLink":"./Aesop/Script/ScriptM.html#Aesop.recordScriptSteps","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/ScriptM.html#Aesop.recordScriptSteps\"><span class=\"name\">Aesop</span>.<span class=\"name\">recordScriptSteps</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadStateOf\">MonadStateOf</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep\">Aesop.Script.LazyStep</a>)</span> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(steps : <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep\">Aesop.Script.LazyStep</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Script/ScriptM.lean#L28-L29","name":"Aesop.recordScriptStep","line":28,"kind":"def","docLink":"./Aesop/Script/ScriptM.html#Aesop.recordScriptStep","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/ScriptM.html#Aesop.recordScriptStep\"><span class=\"name\">Aesop</span>.<span class=\"name\">recordScriptStep</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a> u_1</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadStateOf\">MonadStateOf</a> <span class=\"fn\">(<a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep\">Aesop.Script.LazyStep</a>)</span> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(step : <a href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep\">Aesop.Script.LazyStep</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Script/ScriptM.lean#L24-L24","name":"Aesop.ScriptM","line":24,"kind":"def","docLink":"./Aesop/Script/ScriptM.html#Aesop.ScriptM","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/ScriptM.html#Aesop.ScriptM\"><span class=\"name\">Aesop</span>.<span class=\"name\">ScriptM</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Script/ScriptM.lean#L18-L20","name":"Aesop.ScriptT.run","line":18,"kind":"def","docLink":"./Aesop/Script/ScriptM.html#Aesop.ScriptT.run","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/ScriptM.html#Aesop.ScriptT.run\"><span class=\"name\">Aesop</span>.<span class=\"name\">ScriptT</span>.<span class=\"name\">run</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <a href=\"./foundational_types.html\">Type</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#Monad\">Monad</a> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Prelude.html#MonadLiftT\">MonadLiftT</a> <span class=\"fn\">(<a href=\"./Init/System/ST.html#ST\">ST</a> <a href=\"./Init/System/IO.html#IO.RealWorld\">IO.RealWorld</a>)</span> <span class=\"fn\">m</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\"><a href=\"./Aesop/Script/ScriptM.html#Aesop.ScriptT\">Aesop.ScriptT</a> <span class=\"fn\">m</span> <span class=\"fn\">α</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">m</span> <span class=\"fn\">(<span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#Prod\">×</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Array\">Array</a> <a href=\"./Aesop/Script/Step.html#Aesop.Script.LazyStep\">Aesop.Script.LazyStep</a></span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/aesop/blob/5a0ec8588855265ade536f35bcdcf0fb24fd6030/Aesop/Script/ScriptM.lean#L14-L14","name":"Aesop.ScriptT","line":14,"kind":"def","docLink":"./Aesop/Script/ScriptM.html#Aesop.ScriptT","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">abbrev</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Aesop/Script/ScriptM.html#Aesop.ScriptT\"><span class=\"name\">Aesop</span>.<span class=\"name\">ScriptT</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(m : <span class=\"fn\"><a href=\"./foundational_types.html\">Type</a> → <a href=\"./foundational_types.html\">Type</a></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(α : <a href=\"./foundational_types.html\">Type</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Type</a></div></div>"}]}