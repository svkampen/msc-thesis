{"name":"Mathlib.RingTheory.RootsOfUnity.PrimitiveRoots","instances":[],"imports":["Init","Mathlib.RingTheory.RootsOfUnity.Basic"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L780-L791","name":"ZMod.exists_monoidHom_apply_ne_one","line":780,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#ZMod.exists_monoidHom_apply_ne_one","doc":"If `M` is a commutative group that contains a primitive `n`th root of unity\nand `a : ZMod n` is nonzero, then there exists a group homomorphism `φ` from the\nadditive group `ZMod n` to the multiplicative group `Mˣ` such that `φ a ≠ 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#ZMod.exists_monoidHom_apply_ne_one\"><span class=\"name\">ZMod</span>.<span class=\"name\">exists_monoidHom_apply_ne_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hG : <span class=\"fn\">∃ (<span class=\"fn\">ζ</span> : <span class=\"fn\">M</span>), <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">n</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Multiplicative\">Multiplicative</a> <span class=\"fn\">(<a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span>)</span></span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a></span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">(<span class=\"fn\">Multiplicative.ofAdd</span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L756-L778","name":"IsCyclic.exists_apply_ne_one","line":756,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsCyclic.exists_apply_ne_one","doc":"If `G` is cyclic of order `n` and `G'` contains a primitive `n`th root of unity,\nthen for each `a : G` with `a ≠ 1` there is a homomorphism `φ : G →* G'` such that `φ a ≠ 1`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsCyclic.exists_apply_ne_one\"><span class=\"name\">IsCyclic</span>.<span class=\"name\">exists_apply_ne_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G' : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#IsCyclic\">IsCyclic</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Finite/Defs.html#Finite\">Finite</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommGroup\">CommGroup</a> <span class=\"fn\">G'</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hG' : <span class=\"fn\">∃ (<span class=\"fn\">ζ</span> : <span class=\"fn\">G'</span>), <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">(<a href=\"./Mathlib/SetTheory/Cardinal/Finite.html#Nat.card\">Nat.card</a> <span class=\"fn\">G</span>)</span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃a : <span class=\"fn\">G</span>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ (<span class=\"fn\">φ</span> : <span class=\"fn\"><span class=\"fn\">G</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\">G'</span></span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">φ</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L738-L748","name":"IsPrimitiveRoot.autToPow_spec","line":738,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.autToPow_spec","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.autToPow_spec\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">autToPow_spec</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hμ : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">μ</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">≃ₐ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">]</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.autToPow\">IsPrimitiveRoot.autToPow</a> <span class=\"fn\">R</span> <span class=\"fn\">hμ</span>)</span> <span class=\"fn\">f</span>)</span>)</span>.val</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">μ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L733-L736","name":"IsPrimitiveRoot.coe_autToPow_apply","line":733,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.coe_autToPow_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.coe_autToPow_apply\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">coe_autToPow_apply</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hμ : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">μ</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(f : <span class=\"fn\"><span class=\"fn\">S</span> <a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">≃ₐ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">]</a> <span class=\"fn\">S</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.autToPow\">IsPrimitiveRoot.autToPow</a> <span class=\"fn\">R</span> <span class=\"fn\">hμ</span>)</span> <span class=\"fn\">f</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">⋯</span>.choose</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L698-L730","name":"IsPrimitiveRoot.autToPow","line":698,"kind":"def","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.autToPow","doc":"The `MonoidHom` that takes an automorphism to the power of `μ` that `μ` gets mapped to\nunder it. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.autToPow\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">autToPow</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_4)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_5}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\">S</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hμ : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">μ</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Algebra/Defs.html#Algebra\">Algebra</a> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<span class=\"fn\">S</span> <a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">≃ₐ[</a><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Algebra/Equiv.html#AlgEquiv\">]</a> <span class=\"fn\">S</span>)</span> <a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHom\">→*</a> <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">n</span>)</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L681-L689","name":"IsPrimitiveRoot.nthRoots_one_eq_biUnion_primitiveRoots","line":681,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.nthRoots_one_eq_biUnion_primitiveRoots","doc":"`nthRoots n` as a `Finset` is equal to the union of `primitiveRoots i R` for `i ∣ n`\nif there is a primitive `n`th root of unity in `R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.nthRoots_one_eq_biUnion_primitiveRoots\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">nthRoots_one_eq_biUnion_primitiveRoots</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Roots.html#Polynomial.nthRootsFinset\">Polynomial.nthRootsFinset</a> <span class=\"fn\">n</span> <span class=\"fn\">R</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">n</span>.divisors</span>.biUnion</span> <span class=\"fn\">fun (<span class=\"fn\">i</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#primitiveRoots\">primitiveRoots</a> <span class=\"fn\">i</span> <span class=\"fn\">R</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L648-L652","name":"IsPrimitiveRoot.disjoint","line":648,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.disjoint","doc":"The sets `primitiveRoots k R` are pairwise disjoint. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.disjoint\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">disjoint</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k l : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">l</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Order/Disjoint.html#Disjoint\">Disjoint</a> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#primitiveRoots\">primitiveRoots</a> <span class=\"fn\">k</span> <span class=\"fn\">R</span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#primitiveRoots\">primitiveRoots</a> <span class=\"fn\">l</span> <span class=\"fn\">R</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L627-L646","name":"IsPrimitiveRoot.card_primitiveRoots","line":627,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.card_primitiveRoots","doc":"If an integral domain has a primitive `k`-th root of unity, then it has `φ k` of them. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.card_primitiveRoots\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">card_primitiveRoots</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#primitiveRoots\">primitiveRoots</a> <span class=\"fn\">k</span> <span class=\"fn\">R</span>)</span>.card</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">k</span>.totient</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L620-L623","name":"IsPrimitiveRoot.card_nthRootsFinset","line":620,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.card_nthRootsFinset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.card_nthRootsFinset\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">card_nthRootsFinset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Roots.html#Polynomial.nthRootsFinset\">Polynomial.nthRootsFinset</a> <span class=\"fn\">n</span> <span class=\"fn\">R</span>)</span>.card</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L614-L618","name":"IsPrimitiveRoot.nthRoots_one_nodup","line":614,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.nthRoots_one_nodup","doc":"The multiset `nthRoots ↑n (1 : R)` has no repeated elements\nif there is a primitive root of unity in `R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.nthRoots_one_nodup\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">nthRoots_one_nodup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Roots.html#Polynomial.nthRoots\">Polynomial.nthRoots</a> <span class=\"fn\">n</span> <span class=\"fn\">1</span>)</span>.Nodup</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L601-L612","name":"IsPrimitiveRoot.nthRoots_nodup","line":601,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.nthRoots_nodup","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.nthRoots_nodup\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">nthRoots_nodup</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ha : <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Roots.html#Polynomial.nthRoots\">Polynomial.nthRoots</a> <span class=\"fn\">n</span> <span class=\"fn\">a</span>)</span>.Nodup</span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L595-L599","name":"IsPrimitiveRoot.card_nthRoots_one","line":595,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.card_nthRoots_one","doc":"The cardinality of the multiset `nthRoots ↑n (1 : R)` is `n`\nif there is a primitive root of unity in `R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.card_nthRoots_one\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">card_nthRoots_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Multiset.card</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Roots.html#Polynomial.nthRoots\">Polynomial.nthRoots</a> <span class=\"fn\">n</span> <span class=\"fn\">1</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L589-L593","name":"IsPrimitiveRoot.card_rootsOfUnity","line":589,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.card_rootsOfUnity","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.card_rootsOfUnity\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">card_rootsOfUnity</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/RootsOfUnity/Basic.html#rootsOfUnity\">rootsOfUnity</a> <span class=\"fn\">n</span> <span class=\"fn\">R</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L578-L587","name":"IsPrimitiveRoot.card_rootsOfUnity'","line":578,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.card_rootsOfUnity'","doc":"A variant of `IsPrimitiveRoot.card_rootsOfUnity` for `ζ : Rˣ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.card_rootsOfUnity'\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">card_rootsOfUnity'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\"><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/RootsOfUnity/Basic.html#rootsOfUnity\">rootsOfUnity</a> <span class=\"fn\">n</span> <span class=\"fn\">R</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L569-L576","name":"IsPrimitiveRoot.card_nthRoots","line":569,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.card_nthRoots","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.card_nthRoots\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">card_nthRoots</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hζ : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <span class=\"fn\">R</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">Multiset.card</span> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Polynomial/Roots.html#Polynomial.nthRoots\">Polynomial.nthRoots</a> <span class=\"fn\">n</span> <span class=\"fn\">a</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">if <span class=\"fn\">∃ (<span class=\"fn\">α</span> : <span class=\"fn\">R</span>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span></span> then <span class=\"fn\">n</span> else <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L550-L567","name":"IsPrimitiveRoot.nthRoots_eq","line":550,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.nthRoots_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.nthRoots_eq\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">nthRoots_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hζ : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α a : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(e : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">n</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">a</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Roots.html#Polynomial.nthRoots\">Polynomial.nthRoots</a> <span class=\"fn\">n</span> <span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Multiset/Basic.html#Multiset.map\">Multiset.map</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">α</span></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/Data/Multiset/Range.html#Multiset.range\">Multiset.range</a> <span class=\"fn\">n</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L541-L548","name":"IsPrimitiveRoot.isPrimitiveRoot_iff","line":541,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.isPrimitiveRoot_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.isPrimitiveRoot_iff\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">isPrimitiveRoot_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ ξ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ξ</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ <span class=\"fn\">i</span> &lt; <span class=\"fn\">k</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span>.Coprime</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ξ</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L532-L539","name":"IsPrimitiveRoot.isPrimitiveRoot_iff'","line":532,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.isPrimitiveRoot_iff'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.isPrimitiveRoot_iff'\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">isPrimitiveRoot_iff'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ ξ : <span class=\"fn\"><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ξ</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\">∃ <span class=\"fn\">i</span> &lt; <span class=\"fn\">k</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span>.Coprime</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ξ</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L523-L530","name":"IsPrimitiveRoot.eq_pow_of_pow_eq_one","line":523,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.eq_pow_of_pow_eq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.eq_pow_of_pow_eq_one\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">eq_pow_of_pow_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ ξ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hξ : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ξ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">i</span> &lt; <span class=\"fn\">k</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ξ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L511-L521","name":"IsPrimitiveRoot.eq_pow_of_mem_rootsOfUnity","line":511,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.eq_pow_of_mem_rootsOfUnity","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.eq_pow_of_mem_rootsOfUnity\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">eq_pow_of_mem_rootsOfUnity</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ ξ : <span class=\"fn\"><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hξ : <span class=\"fn\"><span class=\"fn\">ξ</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/Basic.html#rootsOfUnity\">rootsOfUnity</a> <span class=\"fn\">k</span> <span class=\"fn\">R</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">i</span> &lt; <span class=\"fn\">k</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">ξ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L503-L508","name":"rootsOfUnityEquivOfPrimitiveRoots_symm_apply","line":503,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#rootsOfUnityEquivOfPrimitiveRoots_symm_apply","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#rootsOfUnityEquivOfPrimitiveRoots_symm_apply\"><span class=\"name\">rootsOfUnityEquivOfPrimitiveRoots_symm_apply</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">F</span> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHomClass\">MonoidHomClass</a> <span class=\"fn\">F</span> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hζ : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#primitiveRoots\">primitiveRoots</a> <span class=\"fn\">n</span> <span class=\"fn\">R</span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(η : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/RootsOfUnity/Basic.html#rootsOfUnity\">rootsOfUnity</a> <span class=\"fn\">n</span> <span class=\"fn\">S</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#rootsOfUnityEquivOfPrimitiveRoots\">rootsOfUnityEquivOfPrimitiveRoots</a> <span class=\"fn\">hf</span> <span class=\"fn\">hζ</span>)</span>.symm</span> <span class=\"fn\">η</span>)</span></span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">η</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L493-L493","name":"rootsOfUnityEquivOfPrimitiveRoots_apply_coe_inv_val","line":493,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#rootsOfUnityEquivOfPrimitiveRoots_apply_coe_inv_val","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#rootsOfUnityEquivOfPrimitiveRoots_apply_coe_inv_val\"><span class=\"name\">rootsOfUnityEquivOfPrimitiveRoots_apply_coe_inv_val</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">F</span> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHomClass\">MonoidHomClass</a> <span class=\"fn\">F</span> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hζ : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#primitiveRoots\">primitiveRoots</a> <span class=\"fn\">n</span> <span class=\"fn\">R</span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a✝ : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/RootsOfUnity/Basic.html#rootsOfUnity\">rootsOfUnity</a> <span class=\"fn\">n</span> <span class=\"fn\">R</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">⋯</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">⋯</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L493-L493","name":"val_rootsOfUnityEquivOfPrimitiveRoots_apply_coe","line":493,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#val_rootsOfUnityEquivOfPrimitiveRoots_apply_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#val_rootsOfUnityEquivOfPrimitiveRoots_apply_coe\"><span class=\"name\">val_rootsOfUnityEquivOfPrimitiveRoots_apply_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">F</span> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHomClass\">MonoidHomClass</a> <span class=\"fn\">F</span> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hζ : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#primitiveRoots\">primitiveRoots</a> <span class=\"fn\">n</span> <span class=\"fn\">R</span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a✝ : <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/RootsOfUnity/Basic.html#rootsOfUnity\">rootsOfUnity</a> <span class=\"fn\">n</span> <span class=\"fn\">R</span>)</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">(<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#rootsOfUnityEquivOfPrimitiveRoots\">rootsOfUnityEquivOfPrimitiveRoots</a> <span class=\"fn\">hf</span> <span class=\"fn\">hζ</span>)</span> <span class=\"fn\">a✝</span>)</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">f</span> <span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">a✝</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L490-L501","name":"rootsOfUnityEquivOfPrimitiveRoots","line":490,"kind":"def","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#rootsOfUnityEquivOfPrimitiveRoots","doc":"If `R` contains an `n`-th primitive root, and `S/R` is a ring extension,\nthen the `n`-th roots of unity in `R` and `S` are isomorphic.\nAlso see `IsPrimitiveRoot.map_rootsOfUnity` for the equality as `Subgroup Sˣ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#rootsOfUnityEquivOfPrimitiveRoots\"><span class=\"name\">rootsOfUnityEquivOfPrimitiveRoots</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">F</span> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHomClass\">MonoidHomClass</a> <span class=\"fn\">F</span> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hζ : <span class=\"fn\"><span class=\"fn\">(<a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#primitiveRoots\">primitiveRoots</a> <span class=\"fn\">n</span> <span class=\"fn\">R</span>)</span>.Nonempty</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/RootsOfUnity/Basic.html#rootsOfUnity\">rootsOfUnity</a> <span class=\"fn\">n</span> <span class=\"fn\">R</span>)</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#MulEquiv\">≃*</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/RootsOfUnity/Basic.html#rootsOfUnity\">rootsOfUnity</a> <span class=\"fn\">n</span> <span class=\"fn\">S</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L481-L488","name":"IsPrimitiveRoot.map_rootsOfUnity","line":481,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.map_rootsOfUnity","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.map_rootsOfUnity\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">map_rootsOfUnity</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{S : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">F</span> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHomClass\">MonoidHomClass</a> <span class=\"fn\">F</span> <span class=\"fn\">R</span> <span class=\"fn\">S</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hζ : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/Map.html#Subgroup.map\">Subgroup.map</a> <span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Units/Hom.html#Units.map\">Units.map</a> <span class=\"fn\">↑<span class=\"fn\">f</span></span>)</span> <span class=\"fn\">(<a href=\"./Mathlib/RingTheory/RootsOfUnity/Basic.html#rootsOfUnity\">rootsOfUnity</a> <span class=\"fn\">n</span> <span class=\"fn\">R</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/Basic.html#rootsOfUnity\">rootsOfUnity</a> <span class=\"fn\">n</span> <span class=\"fn\">S</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L469-L479","name":"IsPrimitiveRoot.zpowers_eq","line":469,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.zpowers_eq","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.zpowers_eq\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">zpowers_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">k</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\"><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">ζ</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/Basic.html#rootsOfUnity\">rootsOfUnity</a> <span class=\"fn\">k</span> <span class=\"fn\">R</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L463-L465","name":"IsPrimitiveRoot.zmodEquivZPowers_symm_apply_pow'","line":463,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.zmodEquivZPowers_symm_apply_pow'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.zmodEquivZPowers_symm_apply_pow'\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">zmodEquivZPowers_symm_apply_pow'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\"><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span>.zmodEquivZPowers</span>.symm</span> <span class=\"fn\">⟨<span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span>, <span class=\"fn\">⋯</span>⟩</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L458-L461","name":"IsPrimitiveRoot.zmodEquivZPowers_symm_apply_pow","line":458,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.zmodEquivZPowers_symm_apply_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.zmodEquivZPowers_symm_apply_pow\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">zmodEquivZPowers_symm_apply_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\"><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span>.zmodEquivZPowers</span>.symm</span> <span class=\"fn\">(<span class=\"fn\">Additive.ofMul</span> <span class=\"fn\">⟨<span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span>, <span class=\"fn\">⋯</span>⟩</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L454-L456","name":"IsPrimitiveRoot.zmodEquivZPowers_symm_apply_zpow'","line":454,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.zmodEquivZPowers_symm_apply_zpow'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.zmodEquivZPowers_symm_apply_zpow'\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">zmodEquivZPowers_symm_apply_zpow'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\"><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span>.zmodEquivZPowers</span>.symm</span> <span class=\"fn\">⟨<span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span>, <span class=\"fn\">⋯</span>⟩</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L449-L452","name":"IsPrimitiveRoot.zmodEquivZPowers_symm_apply_zpow","line":449,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.zmodEquivZPowers_symm_apply_zpow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.zmodEquivZPowers_symm_apply_zpow\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">zmodEquivZPowers_symm_apply_zpow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\"><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span>.zmodEquivZPowers</span>.symm</span> <span class=\"fn\">(<span class=\"fn\">Additive.ofMul</span> <span class=\"fn\">⟨<span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span>, <span class=\"fn\">⋯</span>⟩</span>)</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">↑<span class=\"fn\">i</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L443-L447","name":"IsPrimitiveRoot.zmodEquivZPowers_apply_coe_nat","line":443,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.zmodEquivZPowers_apply_coe_nat","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.zmodEquivZPowers_apply_coe_nat\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">zmodEquivZPowers_apply_coe_nat</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\"><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span>.zmodEquivZPowers</span> <span class=\"fn\">↑<span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Additive.ofMul</span> <span class=\"fn\">⟨<span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span>, <span class=\"fn\">⋯</span>⟩</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L437-L441","name":"IsPrimitiveRoot.zmodEquivZPowers_apply_coe_int","line":437,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.zmodEquivZPowers_apply_coe_int","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.zmodEquivZPowers_apply_coe_int\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">zmodEquivZPowers_apply_coe_int</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\"><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">h</span>.zmodEquivZPowers</span> <span class=\"fn\">↑<span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">Additive.ofMul</span> <span class=\"fn\">⟨<span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span>, <span class=\"fn\">⋯</span>⟩</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L412-L435","name":"IsPrimitiveRoot.zmodEquivZPowers","line":412,"kind":"def","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.zmodEquivZPowers","doc":"The (additive) monoid equivalence between `ZMod k`\nand the powers of a primitive root of unity `ζ`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.zmodEquivZPowers\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">zmodEquivZPowers</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\"><span class=\"fn\">R</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a></span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Data/ZMod/Defs.html#ZMod\">ZMod</a> <span class=\"fn\">k</span></span> <a href=\"./Mathlib/Algebra/Group/Equiv/Basic.html#AddEquiv\">≃+</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/TypeTags/Basic.html#Additive\">Additive</a> <span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/Algebra/Group/Subgroup/ZPowers/Basic.html#Subgroup.zpowers\">Subgroup.zpowers</a> <span class=\"fn\">ζ</span>)</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L406-L410","name":"IsPrimitiveRoot.pow_sub_one_eq","line":406,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.pow_sub_one_eq","doc":"If `1 < k`, then `ζ ^ k.pred = -(∑ i ∈ range k.pred, ζ ^ i)`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.pow_sub_one_eq\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">pow_sub_one_eq</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hζ : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hk : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\"><span class=\"fn\">k</span>.pred</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Init/Prelude.html#Neg.neg\">-</a><span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\"><span class=\"fn\">k</span>.pred</span></span>, <span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L400-L404","name":"IsPrimitiveRoot.geom_sum_eq_zero","line":400,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.geom_sum_eq_zero","doc":"If `1 < k` then `(∑ i ∈ range k, ζ ^ i) = 0`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.geom_sum_eq_zero\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">geom_sum_eq_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hζ : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hk : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">∑ <span class=\"fn\">i</span> ∈ <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">k</span></span>, <span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L395-L398","name":"IsPrimitiveRoot.neg_one","line":395,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.neg_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.neg_one\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">neg_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[h : <span class=\"fn\"><a href=\"./Mathlib/Algebra/CharP/Defs.html#CharP\">CharP</a> <span class=\"fn\">R</span> <span class=\"fn\">p</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">(-<span class=\"fn\">1</span>)</span> <span class=\"fn\">2</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L392-L393","name":"IsPrimitiveRoot.eq_neg_one_of_two_right","line":392,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.eq_neg_one_of_two_right","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.eq_neg_one_of_two_right\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">eq_neg_one_of_two_right</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#NoZeroDivisors\">NoZeroDivisors</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">2</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">-<span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L382-L384","name":"IsPrimitiveRoot.mem_nthRootsFinset","line":382,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.mem_nthRootsFinset","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.mem_nthRootsFinset\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">mem_nthRootsFinset</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hζ : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hk : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Algebra/Polynomial/Roots.html#Polynomial.nthRootsFinset\">Polynomial.nthRootsFinset</a> <span class=\"fn\">k</span> <span class=\"fn\">R</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L364-L380","name":"IsPrimitiveRoot.neZero'","line":364,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.neZero'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.neZero'\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">neZero'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hζ : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">↑<span class=\"fn\">n</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L358-L362","name":"IsPrimitiveRoot.primitiveRoots_one","line":358,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.primitiveRoots_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.primitiveRoots_one\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">primitiveRoots_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#primitiveRoots\">primitiveRoots</a> <span class=\"fn\">1</span> <span class=\"fn\">R</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">{<span class=\"fn\">1</span>}</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L349-L350","name":"IsPrimitiveRoot.sub_one_ne_zero","line":349,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.sub_one_ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.sub_one_ne_zero\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">sub_one_ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hζ : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L332-L341","name":"IsPrimitiveRoot.zpow_of_gcd_eq_one","line":332,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.zpow_of_gcd_eq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.zpow_of_gcd_eq_one\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">zpow_of_gcd_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#DivisionCommMonoid\">DivisionCommMonoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hi : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span>.gcd</span> <span class=\"fn\">↑<span class=\"fn\">k</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">(<span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span>)</span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L328-L330","name":"IsPrimitiveRoot.inv_iff","line":328,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.inv_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.inv_iff\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">inv_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#DivisionCommMonoid\">DivisionCommMonoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\"><span class=\"fn\">ζ</span><a href=\"./Mathlib/Algebra/Group/Operations.html#Inv.inv\">⁻¹</a></span> <span class=\"fn\">k</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L321-L326","name":"IsPrimitiveRoot.inv","line":321,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.inv","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.inv\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">inv</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#DivisionCommMonoid\">DivisionCommMonoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\"><span class=\"fn\">ζ</span><a href=\"./Mathlib/Algebra/Group/Operations.html#Inv.inv\">⁻¹</a></span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L312-L319","name":"IsPrimitiveRoot.zpow_eq_one_iff_dvd","line":312,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.zpow_eq_one_iff_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.zpow_eq_one_iff_dvd\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">zpow_eq_one_iff_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#DivisionCommMonoid\">DivisionCommMonoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(l : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">l</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L309-L310","name":"IsPrimitiveRoot.zpow_eq_one","line":309,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.zpow_eq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.zpow_eq_one\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">zpow_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#DivisionCommMonoid\">DivisionCommMonoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">↑<span class=\"fn\">k</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L298-L301","name":"IsPrimitiveRoot.injOn_pow_mul","line":298,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.injOn_pow_mul","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.injOn_pow_mul\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">injOn_pow_mul</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CancelCommMonoidWithZero\">CancelCommMonoidWithZero</a> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">M₀</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hζ : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{α : <span class=\"fn\">M₀</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hα : <span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.InjOn\">Set.InjOn</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">x</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">α</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L289-L290","name":"IsPrimitiveRoot.ne_zero","line":289,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.ne_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.ne_zero\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">ne_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">M₀</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span> → <span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L286-L287","name":"IsPrimitiveRoot.zero","line":286,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.zero\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M₀ : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/GroupWithZero/Defs.html#CommMonoidWithZero\">CommMonoidWithZero</a> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Nontrivial/Defs.html#Nontrivial\">Nontrivial</a> <span class=\"fn\">M₀</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">0</span> <span class=\"fn\">0</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L274-L276","name":"IsPrimitiveRoot.map_iff_of_injective","line":274,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.map_iff_of_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.map_iff_of_injective\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">map_iff_of_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">F</span> <span class=\"fn\">M</span> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHomClass\">MonoidHomClass</a> <span class=\"fn\">F</span> <span class=\"fn\">M</span> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">ζ</span>)</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L264-L272","name":"IsPrimitiveRoot.of_map_of_injective","line":264,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.of_map_of_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.of_map_of_injective\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">of_map_of_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">F</span> <span class=\"fn\">M</span> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHomClass\">MonoidHomClass</a> <span class=\"fn\">F</span> <span class=\"fn\">M</span> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">ζ</span>)</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L255-L262","name":"IsPrimitiveRoot.map_of_injective","line":255,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.map_of_injective","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.map_of_injective\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">map_of_injective</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <a href=\"./foundational_types.html\">Type</a> u_2}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{F : <a href=\"./foundational_types.html\">Type</a> u_6}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{f : <span class=\"fn\">F</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/FunLike/Basic.html#FunLike\">FunLike</a> <span class=\"fn\">F</span> <span class=\"fn\">M</span> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Hom/Defs.html#MonoidHomClass\">MonoidHomClass</a> <span class=\"fn\">F</span> <span class=\"fn\">M</span> <span class=\"fn\">N</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hf : <span class=\"fn\"><a href=\"./Mathlib/Logic/Function/Defs.html#Function.Injective\">Function.Injective</a> <span class=\"fn\">⇑<span class=\"fn\">f</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">(<span class=\"fn\">f</span> <span class=\"fn\">ζ</span>)</span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L243-L247","name":"IsPrimitiveRoot.injOn_pow","line":243,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.injOn_pow","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.injOn_pow\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">injOn_pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hζ : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Set/Operations.html#Set.InjOn\">Set.InjOn</a> <span class=\"fn\">(fun (<span class=\"fn\">x</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>) =&gt; <span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">x</span></span>)</span> <span class=\"fn\">↑<span class=\"fn\">(<a href=\"./Mathlib/Data/Finset/Range.html#Finset.range\">Finset.range</a> <span class=\"fn\">n</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L234-L241","name":"IsPrimitiveRoot.pow","line":234,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.pow","doc":"If there is an `n`-th primitive root of unity in `R` and `b` divides `n`,\nthen there is a `b`-th primitive root of unity in `R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.pow\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">pow</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n a b : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hprod : <span class=\"fn\"><span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">(<span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">a</span>)</span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L230-L232","name":"IsPrimitiveRoot.mem_rootsOfUnity","line":230,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.mem_rootsOfUnity","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.mem_rootsOfUnity\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">mem_rootsOfUnity</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a></span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/Basic.html#rootsOfUnity\">rootsOfUnity</a> <span class=\"fn\">n</span> <span class=\"fn\">M</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L224-L228","name":"IsPrimitiveRoot.pow_of_dvd","line":224,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.pow_of_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.pow_of_dvd\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">pow_of_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hdiv : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">(<span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span>)</span> <span class=\"fn\">(<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\">p</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L214-L222","name":"IsPrimitiveRoot.pow_mul_pow_lcm","line":214,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.pow_mul_pow_lcm","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.pow_mul_pow_lcm\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">pow_mul_pow_lcm</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ ζ' : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k' : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hζ : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hζ' : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ'</span> <span class=\"fn\">k'</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hk : <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hk' : <span class=\"fn\"><span class=\"fn\">k'</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>.factorizationLCMLeft</span> <span class=\"fn\">k'</span></span>)</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">ζ'</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\">k'</span> <a href=\"./Init/Prelude.html#HDiv.hDiv\">/</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">k</span>.factorizationLCMRight</span> <span class=\"fn\">k'</span></span>)</span></span>)</span> <span class=\"fn\">(<span class=\"fn\"><span class=\"fn\">k</span>.lcm</span> <span class=\"fn\">k'</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L210-L212","name":"IsPrimitiveRoot.not_iff","line":210,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.not_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.not_iff\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">not_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/GroupTheory/OrderOfElement.html#orderOf\">orderOf</a> <span class=\"fn\">ζ</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L203-L208","name":"IsPrimitiveRoot.iff","line":203,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.iff\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hk : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">l</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">l</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L200-L201","name":"IsPrimitiveRoot.eq_orderOf","line":200,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.eq_orderOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.eq_orderOf\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">eq_orderOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><a href=\"./Mathlib/GroupTheory/OrderOfElement.html#orderOf\">orderOf</a> <span class=\"fn\">ζ</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L197-L198","name":"IsPrimitiveRoot.unique","line":197,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.unique","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.unique\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">unique</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k l : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hk : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hl : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">l</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">l</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L194-L195","name":"IsPrimitiveRoot.orderOf","line":194,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.orderOf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.orderOf\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">orderOf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ζ : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">(<a href=\"./Mathlib/GroupTheory/OrderOfElement.html#orderOf\">orderOf</a> <span class=\"fn\">ζ</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L182-L192","name":"IsPrimitiveRoot.pow_iff_coprime","line":182,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.pow_iff_coprime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.pow_iff_coprime\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">pow_iff_coprime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h0 : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">(<span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span>)</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span>.Coprime</span> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L178-L180","name":"IsPrimitiveRoot.pow_of_prime","line":178,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.pow_of_prime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.pow_of_prime\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">pow_of_prime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hprime : <span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime/Defs.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hdiv : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">k</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">(<span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span>)</span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L164-L176","name":"IsPrimitiveRoot.pow_of_coprime","line":164,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.pow_of_coprime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.pow_of_coprime\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">pow_of_coprime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(i : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hi : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span>.Coprime</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">(<span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span>)</span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L161-L162","name":"IsPrimitiveRoot.isUnit_unit'","line":161,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.isUnit_unit'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.isUnit_unit'\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">isUnit_unit'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{G : <a href=\"./foundational_types.html\">Type</a> u_3}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#DivisionCommMonoid\">DivisionCommMonoid</a> <span class=\"fn\">G</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">G</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hζ : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\"><span class=\"fn\">⋯</span>.unit'</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L158-L159","name":"IsPrimitiveRoot.isUnit_unit","line":158,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.isUnit_unit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.isUnit_unit\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">isUnit_unit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hn : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hζ : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\"><span class=\"fn\">⋯</span>.unit</span> <span class=\"fn\">n</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L154-L156","name":"IsPrimitiveRoot.coe_units_iff","line":154,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.coe_units_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.coe_units_iff\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">coe_units_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\"><span class=\"fn\">M</span><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#Units\">ˣ</a></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">(↑<span class=\"fn\">ζ</span>)</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L148-L152","name":"IsPrimitiveRoot.coe_submonoidClass_iff","line":148,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.coe_submonoidClass_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.coe_submonoidClass_iff\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">coe_submonoidClass_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_7}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{B : <a href=\"./foundational_types.html\">Type</a> u_8}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/SetLike/Basic.html#SetLike\">SetLike</a> <span class=\"fn\">B</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Submonoid/Defs.html#SubmonoidClass\">SubmonoidClass</a> <span class=\"fn\">B</span> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{N : <span class=\"fn\">B</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">↥<span class=\"fn\">N</span></span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">(↑<span class=\"fn\">ζ</span>)</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L142-L146","name":"IsPrimitiveRoot.one_right_iff","line":142,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.one_right_iff","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.one_right_iff\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">one_right_iff</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L138-L140","name":"IsPrimitiveRoot.one","line":138,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.one\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">1</span> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L127-L136","name":"IsPrimitiveRoot.pow_inj","line":127,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.pow_inj","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.pow_inj\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">pow_inj</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">⦃i j : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>⦄</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hi : <span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hj : <span class=\"fn\"><span class=\"fn\">j</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">j</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">j</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L124-L125","name":"IsPrimitiveRoot.ne_one","line":124,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.ne_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.ne_one\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">ne_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hk : <span class=\"fn\"><span class=\"fn\">1</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L121-L122","name":"IsPrimitiveRoot.pow_ne_one_of_pos_of_lt","line":121,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.pow_ne_one_of_pos_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.pow_ne_one_of_pos_of_lt\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">pow_ne_one_of_pos_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k l : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h0 : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">l</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hl : <span class=\"fn\"><span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L117-L119","name":"IsPrimitiveRoot.isUnit","line":117,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.isUnit","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.isUnit\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">isUnit</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h0 : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Units/Defs.html#IsUnit\">IsUnit</a> <span class=\"fn\">ζ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L113-L115","name":"IsPrimitiveRoot.pow_eq_one_iff_dvd","line":113,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.pow_eq_one_iff_dvd","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.pow_eq_one_iff_dvd\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">pow_eq_one_iff_dvd</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(l : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">l</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L109-L111","name":"IsPrimitiveRoot.of_subsingleton","line":109,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.of_subsingleton","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.of_subsingleton\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">of_subsingleton</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Core.html#Subsingleton\">Subsingleton</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(x : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">x</span> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L96-L103","name":"IsPrimitiveRoot.mk_of_lt","line":96,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.mk_of_lt","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.mk_of_lt\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">mk_of_lt</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ζ : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hk : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h1 : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\">∀ (<span class=\"fn\">l</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">l</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">l</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span></span> → <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">1</span></span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L86-L88","name":"isPrimitiveRoot_of_mem_primitiveRoots","line":86,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#isPrimitiveRoot_of_mem_primitiveRoots","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#isPrimitiveRoot_of_mem_primitiveRoots\"><span class=\"name\">isPrimitiveRoot_of_mem_primitiveRoots</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#primitiveRoots\">primitiveRoots</a> <span class=\"fn\">k</span> <span class=\"fn\">R</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L82-L84","name":"primitiveRoots_zero","line":82,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#primitiveRoots_zero","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#primitiveRoots_zero\"><span class=\"name\">primitiveRoots_zero</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#primitiveRoots\">primitiveRoots</a> <span class=\"fn\">0</span> <span class=\"fn\">R</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <a href=\"./Init/Core.html#EmptyCollection.emptyCollection\">∅</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L77-L80","name":"mem_primitiveRoots","line":77,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#mem_primitiveRoots","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#mem_primitiveRoots\"><span class=\"name\">mem_primitiveRoots</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{R : <a href=\"./foundational_types.html\">Type</a> u_4}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">R</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h0 : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt;</a> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#primitiveRoots\">primitiveRoots</a> <span class=\"fn\">k</span> <span class=\"fn\">R</span></span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L69-L72","name":"primitiveRoots","line":69,"kind":"def","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#primitiveRoots","doc":"`primitiveRoots k R` is the finset of primitive `k`-th roots of unity\nin the integral domain `R`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#primitiveRoots\"><span class=\"name\">primitiveRoots</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(R : <a href=\"./foundational_types.html\">Type</a> u_7)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">R</span></span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Defs.html#Finset\">Finset</a> <span class=\"fn\">R</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L60-L60","name":"IsPrimitiveRoot.val_toRootsOfUnity_coe","line":60,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.val_toRootsOfUnity_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.val_toRootsOfUnity_coe\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">val_toRootsOfUnity_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">μ</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">h</span>.toRootsOfUnity</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">μ</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L60-L60","name":"IsPrimitiveRoot.val_inv_toRootsOfUnity_coe","line":60,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.val_inv_toRootsOfUnity_coe","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.val_inv_toRootsOfUnity_coe\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">val_inv_toRootsOfUnity_coe</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">μ</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\"><span class=\"fn\">(↑<span class=\"fn\"><span class=\"fn\">h</span>.toRootsOfUnity</span>)</span><a href=\"./Mathlib/Algebra/Group/Operations.html#Inv.inv\">⁻¹</a></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">μ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">(<span class=\"fn\">n</span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span>)</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L59-L63","name":"IsPrimitiveRoot.toRootsOfUnity","line":59,"kind":"def","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.toRootsOfUnity","doc":"Turn a primitive root μ into a member of the `rootsOfUnity` subgroup. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.toRootsOfUnity\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">toRootsOfUnity</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{μ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{n : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Init/Data/NeZero.html#NeZero\">NeZero</a> <span class=\"fn\">n</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">μ</span> <span class=\"fn\">n</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">↥<span class=\"fn\">(<a href=\"./Mathlib/RingTheory/RootsOfUnity/Basic.html#rootsOfUnity\">rootsOfUnity</a> <span class=\"fn\">n</span> <span class=\"fn\">M</span>)</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L57-L57","name":"IsPrimitiveRoot.dvd_of_pow_eq_one","line":57,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.dvd_of_pow_eq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.dvd_of_pow_eq_one\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">dvd_of_pow_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(l : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> → <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">l</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L56-L56","name":"IsPrimitiveRoot.pow_eq_one","line":56,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.pow_eq_one","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.pow_eq_one\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">pow_eq_one</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(self : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L55-L55","name":"IsPrimitiveRoot.mk","line":55,"kind":"ctor","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.mk","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">constructor</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.mk\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">mk</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">M</span>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(pow_eq_one : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(dvd_of_pow_eq_one : <span class=\"fn\">∀ (<span class=\"fn\">l</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> → <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">l</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L54-L54","name":"IsPrimitiveRoot.iff_def","line":54,"kind":"theorem","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.iff_def","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot.iff_def\"><span class=\"name\">IsPrimitiveRoot</span>.<span class=\"name\">iff_def</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ζ : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">k</span></span> <a href=\"./Init/Core.html#Iff\">↔</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">k</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\">∀ (<span class=\"fn\">l</span> : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>), <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">l</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span> → <span class=\"fn\"><span class=\"fn\">k</span> <a href=\"./Init/Prelude.html#Dvd.dvd\">∣</a> <span class=\"fn\">l</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover-community/mathlib4/blob/4bbdccd9c5f862bf90ff12f0a9e2c8be032b9a84/Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.lean#L52-L57","name":"IsPrimitiveRoot","line":52,"kind":"structure","docLink":"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot","doc":"An element `ζ` is a primitive `k`-th root of unity if `ζ ^ k = 1`,\nand if `l` satisfies `ζ ^ l = 1` then `k ∣ l`. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">structure</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Mathlib/RingTheory/RootsOfUnity/PrimitiveRoots.html#IsPrimitiveRoot\"><span class=\"name\">IsPrimitiveRoot</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{M : <a href=\"./foundational_types.html\">Type</a> u_1}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Group/Defs.html#CommMonoid\">CommMonoid</a> <span class=\"fn\">M</span></span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(ζ : <span class=\"fn\">M</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}