{"name":"Lean.Elab.Declaration","instances":[],"imports":["Lean.Util.CollectLevelParams","Lean.Elab.DeclUtil","Lean.Elab.DefView","Lean.Elab.Inductive","Lean.Elab.Structure","Lean.Elab.MutualDef","Lean.Elab.DeclarationRange"],"declarations":[{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Declaration.lean#L322-L343","name":"Lean.Elab.Command.elabInitialize","line":322,"kind":"def","docLink":"./Lean/Elab/Declaration.html#Lean.Elab.Command.elabInitialize","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Declaration.html#Lean.Elab.Command.elabInitialize\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">elabInitialize</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElab\">Lean.Elab.Command.CommandElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Declaration.lean#L288-L320","name":"Lean.Elab.Command.elabAttr","line":288,"kind":"def","docLink":"./Lean/Elab/Declaration.html#Lean.Elab.Command.elabAttr","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Declaration.html#Lean.Elab.Command.elabAttr\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">elabAttr</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElab\">Lean.Elab.Command.CommandElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Declaration.lean#L276-L285","name":"Lean.Elab.Command.elabMutual","line":276,"kind":"def","docLink":"./Lean/Elab/Declaration.html#Lean.Elab.Command.elabMutual","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Declaration.html#Lean.Elab.Command.elabMutual\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">elabMutual</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElab\">Lean.Elab.Command.CommandElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Declaration.lean#L266-L274","name":"Lean.Elab.Command.expandMutualPreamble","line":266,"kind":"def","docLink":"./Lean/Elab/Declaration.html#Lean.Elab.Command.expandMutualPreamble","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Declaration.html#Lean.Elab.Command.expandMutualPreamble\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">expandMutualPreamble</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Macro\">Lean.Macro</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Declaration.lean#L249-L264","name":"Lean.Elab.Command.expandMutualElement","line":249,"kind":"def","docLink":"./Lean/Elab/Declaration.html#Lean.Elab.Command.expandMutualElement","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Declaration.html#Lean.Elab.Command.expandMutualElement\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">expandMutualElement</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Macro\">Lean.Macro</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Declaration.lean#L231-L247","name":"Lean.Elab.Command.expandMutualNamespace","line":231,"kind":"def","docLink":"./Lean/Elab/Declaration.html#Lean.Elab.Command.expandMutualNamespace","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Declaration.html#Lean.Elab.Command.expandMutualNamespace\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">expandMutualNamespace</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Macro\">Lean.Macro</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Declaration.lean#L225-L228","name":"Lean.Elab.Command.findCommonPrefix.findCommon","line":225,"kind":"def","docLink":"./Lean/Elab/Declaration.html#Lean.Elab.Command.findCommonPrefix.findCommon","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Declaration.html#Lean.Elab.Command.findCommonPrefix.findCommon\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">findCommonPrefix</span>.<span class=\"name\">findCommon</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(as bs : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Declaration.lean#L219-L224","name":"Lean.Elab.Command.findCommonPrefix.go","line":219,"kind":"def","docLink":"./Lean/Elab/Declaration.html#Lean.Elab.Command.findCommonPrefix.go","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Declaration.html#Lean.Elab.Command.findCommonPrefix.go\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">findCommonPrefix</span>.<span class=\"name\">go</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(n : <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(ns : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Declaration.lean#L206-L228","name":"Lean.Elab.Command.findCommonPrefix","line":206,"kind":"def","docLink":"./Lean/Elab/Declaration.html#Lean.Elab.Command.findCommonPrefix","doc":"Find the common namespace for the given names.\nExample:\n```\nfindCommonPrefix [`Lean.Elab.eval, `Lean.mkConst, `Lean.Elab.Tactic.evalTactic]\n-- `Lean\n```\n"},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Declaration.html#Lean.Elab.Command.findCommonPrefix\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">findCommonPrefix</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(ns : <span class=\"fn\"><a href=\"./Init/Prelude.html#List\">List</a> <a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Name\">Lean.Name</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Declaration.lean#L154-L176","name":"Lean.Elab.Command.elabDeclaration","line":154,"kind":"def","docLink":"./Lean/Elab/Declaration.html#Lean.Elab.Command.elabDeclaration","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Declaration.html#Lean.Elab.Command.elabDeclaration\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">elabDeclaration</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElab\">Lean.Elab.Command.CommandElab</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Declaration.lean#L140-L152","name":"Lean.Elab.Command.expandNamespacedDeclaration","line":140,"kind":"def","docLink":"./Lean/Elab/Declaration.html#Lean.Elab.Command.expandNamespacedDeclaration","doc":"Macro that expands a declaration with a complex name into an explicit `namespace` block.\nImplementing this step as a macro means that reuse checking is handled by `elabCommand`.\n "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Declaration.html#Lean.Elab.Command.expandNamespacedDeclaration\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">expandNamespacedDeclaration</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./Init/Prelude.html#Lean.Macro\">Lean.Macro</a></div></div>"},{"info":{"sourceLink":"https://github.com/leanprover/lean4/blob/410fab7284703f41660ca2454218dcca9b2ec896/src/Lean/Elab/Declaration.lean#L101-L138","name":"Lean.Elab.Command.elabAxiom","line":101,"kind":"def","docLink":"./Lean/Elab/Declaration.html#Lean.Elab.Command.elabAxiom","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./Lean/Elab/Declaration.html#Lean.Elab.Command.elabAxiom\"><span class=\"name\">Lean</span>.<span class=\"name\">Elab</span>.<span class=\"name\">Command</span>.<span class=\"name\">elabAxiom</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(modifiers : <a href=\"./Lean/Elab/DeclModifiers.html#Lean.Elab.Modifiers\">Lean.Elab.Modifiers</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(stx : <a href=\"./Init/Prelude.html#Lean.Syntax\">Lean.Syntax</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Lean/Elab/Command.html#Lean.Elab.Command.CommandElabM\">Lean.Elab.Command.CommandElabM</a> <a href=\"./Init/Prelude.html#Unit\">Unit</a></span></div></div>"}]}